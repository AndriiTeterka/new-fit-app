{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"react-native/src/private/featureflags/ReactNativeFeatureFlags","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":105}}],"key":"MI3SzlwRu/GiF5M8ChFISEIyeJk=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.elementsThatOverlapOffsets = elementsThatOverlapOffsets;\n  exports.newRangeCount = newRangeCount;\n  exports.computeWindowedRenderLimits = computeWindowedRenderLimits;\n  exports.keyExtractor = keyExtractor;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _reactNativeSrcPrivateFeatureflagsReactNativeFeatureFlags = require(_dependencyMap[1], \"react-native/src/private/featureflags/ReactNativeFeatureFlags\");\n  var ReactNativeFeatureFlags = _interopNamespace(_reactNativeSrcPrivateFeatureflagsReactNativeFeatureFlags);\n  function elementsThatOverlapOffsets(offsets, props, listMetrics) {\n    var zoomScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var itemCount = props.getItemCount(props.data);\n    var result = [];\n    for (var offsetIndex = 0; offsetIndex < offsets.length; offsetIndex++) {\n      var currentOffset = offsets[offsetIndex];\n      var left = 0;\n      var right = itemCount - 1;\n      while (left <= right) {\n        var mid = left + Math.floor((right - left) / 2);\n        var frame = listMetrics.getCellMetricsApprox(mid, props);\n        var scaledOffsetStart = frame.offset * zoomScale;\n        var scaledOffsetEnd = (frame.offset + frame.length) * zoomScale;\n        if (mid === 0 && currentOffset < scaledOffsetStart || mid !== 0 && currentOffset <= scaledOffsetStart) {\n          right = mid - 1;\n        } else if (currentOffset > scaledOffsetEnd) {\n          left = mid + 1;\n        } else {\n          result[offsetIndex] = mid;\n          break;\n        }\n      }\n    }\n    return result;\n  }\n  function newRangeCount(prev, next) {\n    return next.last - next.first + 1 - Math.max(0, 1 + Math.min(next.last, prev.last) - Math.max(next.first, prev.first));\n  }\n  function computeWindowedRenderLimits(props, maxToRenderPerBatch, windowSize, prev, listMetrics, scrollMetrics) {\n    var itemCount = props.getItemCount(props.data);\n    if (itemCount === 0) {\n      return {\n        first: 0,\n        last: -1\n      };\n    }\n    var offset = scrollMetrics.offset,\n      velocity = scrollMetrics.velocity,\n      visibleLength = scrollMetrics.visibleLength,\n      _scrollMetrics$zoomSc = scrollMetrics.zoomScale,\n      zoomScale = _scrollMetrics$zoomSc === void 0 ? 1 : _scrollMetrics$zoomSc;\n    var visibleBegin = Math.max(0, offset);\n    var visibleEnd = visibleBegin + visibleLength;\n    var overscanLength = (windowSize - 1) * visibleLength;\n    var leadFactor = 0.5;\n    var fillPreference = velocity > 1 ? 'after' : velocity < -1 ? 'before' : 'none';\n    var overscanBegin = Math.max(0, visibleBegin - (1 - leadFactor) * overscanLength);\n    var overscanEnd = Math.max(0, visibleEnd + leadFactor * overscanLength);\n    var lastItemOffset = listMetrics.getCellMetricsApprox(itemCount - 1, props).offset * zoomScale;\n    if (lastItemOffset < overscanBegin) {\n      return {\n        first: Math.max(0, itemCount - 1 - maxToRenderPerBatch),\n        last: itemCount - 1\n      };\n    }\n    var _elementsThatOverlapO = elementsThatOverlapOffsets([overscanBegin, visibleBegin, visibleEnd, overscanEnd], props, listMetrics, zoomScale),\n      _elementsThatOverlapO2 = (0, _slicedToArray.default)(_elementsThatOverlapO, 4),\n      overscanFirst = _elementsThatOverlapO2[0],\n      first = _elementsThatOverlapO2[1],\n      last = _elementsThatOverlapO2[2],\n      overscanLast = _elementsThatOverlapO2[3];\n    overscanFirst = overscanFirst == null ? 0 : overscanFirst;\n    first = first == null ? Math.max(0, overscanFirst) : first;\n    overscanLast = overscanLast == null ? itemCount - 1 : overscanLast;\n    last = last == null ? Math.min(overscanLast, first + maxToRenderPerBatch - 1) : last;\n    var visible = {\n      first,\n      last\n    };\n    var newCellCount = newRangeCount(prev, visible);\n    while (true) {\n      if (first <= overscanFirst && last >= overscanLast) {\n        break;\n      }\n      var maxNewCells = newCellCount >= maxToRenderPerBatch;\n      var firstWillAddMore = void 0;\n      var lastWillAddMore = void 0;\n      if (ReactNativeFeatureFlags.fixVirtualizeListCollapseWindowSize()) {\n        firstWillAddMore = first <= prev.first;\n        lastWillAddMore = last >= prev.last;\n      } else {\n        firstWillAddMore = first <= prev.first || first > prev.last;\n        lastWillAddMore = last >= prev.last || last < prev.first;\n      }\n      var firstShouldIncrement = first > overscanFirst && (!maxNewCells || !firstWillAddMore);\n      var lastShouldIncrement = last < overscanLast && (!maxNewCells || !lastWillAddMore);\n      if (maxNewCells && !firstShouldIncrement && !lastShouldIncrement) {\n        break;\n      }\n      if (firstShouldIncrement && !(fillPreference === 'after' && lastShouldIncrement && lastWillAddMore)) {\n        if (firstWillAddMore) {\n          newCellCount++;\n        }\n        first--;\n      }\n      if (lastShouldIncrement && !(fillPreference === 'before' && firstShouldIncrement && firstWillAddMore)) {\n        if (lastWillAddMore) {\n          newCellCount++;\n        }\n        last++;\n      }\n    }\n    if (!(last >= first && first >= 0 && last < itemCount && first >= overscanFirst && last <= overscanLast && first <= visible.first && last >= visible.last)) {\n      throw new Error('Bad window calculation ' + JSON.stringify({\n        first,\n        last,\n        itemCount,\n        overscanFirst,\n        overscanLast,\n        visible\n      }));\n    }\n    return {\n      first,\n      last\n    };\n  }\n  function keyExtractor(item, index) {\n    if (typeof item === 'object' && item?.key != null) {\n      return item.key;\n    }\n    if (typeof item === 'object' && item?.id != null) {\n      return item.id;\n    }\n    return String(index);\n  }\n});","lineCount":155,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13,"Object"],[4,8,11,13],[4,9,11,13,"defineProperty"],[4,23,11,13],[4,24,11,13,"exports"],[4,31,11,13],[5,4,11,13,"value"],[5,9,11,13],[6,2,11,13],[7,2,11,13],[7,11,11,13,"_interopDefault"],[7,27,11,13,"e"],[7,28,11,13],[8,4,11,13],[8,11,11,13,"e"],[8,12,11,13],[8,16,11,13,"e"],[8,17,11,13],[8,18,11,13,"__esModule"],[8,28,11,13],[8,31,11,13,"e"],[8,32,11,13],[9,6,11,13,"default"],[9,13,11,13],[9,15,11,13,"e"],[10,4,11,13],[11,2,11,13],[12,2,11,13],[12,11,11,13,"_interopNamespace"],[12,29,11,13,"e"],[12,30,11,13],[13,4,11,13],[13,8,11,13,"e"],[13,9,11,13],[13,13,11,13,"e"],[13,14,11,13],[13,15,11,13,"__esModule"],[13,25,11,13],[13,34,11,13,"e"],[13,35,11,13],[14,4,11,13],[14,8,11,13,"n"],[14,9,11,13],[15,4,11,13],[15,8,11,13,"e"],[15,9,11,13],[15,11,11,13,"Object"],[15,17,11,13],[15,18,11,13,"keys"],[15,22,11,13],[15,23,11,13,"e"],[15,24,11,13],[15,26,11,13,"forEach"],[15,33,11,13],[15,44,11,13,"k"],[15,45,11,13],[16,6,11,13,"n"],[16,7,11,13],[16,8,11,13,"k"],[16,9,11,13],[16,13,11,13,"e"],[16,14,11,13],[16,15,11,13,"k"],[16,16,11,13],[17,4,11,13],[18,4,11,13,"n"],[18,5,11,13],[18,6,11,13,"default"],[18,13,11,13],[18,16,11,13,"e"],[18,17,11,13],[19,4,11,13],[19,11,11,13,"n"],[19,12,11,13],[20,2,11,13],[21,2,23,0,"exports"],[21,9,23,0],[21,10,23,0,"elementsThatOverlapOffsets"],[21,36,23,0],[21,39,23,0,"elementsThatOverlapOffsets"],[21,65,23,0],[22,2,67,0,"exports"],[22,9,67,0],[22,10,67,0,"newRangeCount"],[22,23,67,0],[22,26,67,0,"newRangeCount"],[22,39,67,0],[23,2,96,0,"exports"],[23,9,96,0],[23,10,96,0,"computeWindowedRenderLimits"],[23,37,96,0],[23,40,96,0,"computeWindowedRenderLimits"],[23,67,96,0],[24,2,248,0,"exports"],[24,9,248,0],[24,10,248,0,"keyExtractor"],[24,22,248,0],[24,25,248,0,"keyExtractor"],[24,37,248,0],[25,2,256,1],[25,6,256,1,"_babelRuntimeHelpersSlicedToArray"],[25,39,256,1],[25,42,256,1,"require"],[25,49,256,1],[25,50,256,1,"_dependencyMap"],[25,64,256,1],[26,2,256,1],[26,6,256,1,"_slicedToArray"],[26,20,256,1],[26,23,256,1,"_interopDefault"],[26,38,256,1],[26,39,256,1,"_babelRuntimeHelpersSlicedToArray"],[26,72,256,1],[27,2,16,0],[27,6,16,0,"_reactNativeSrcPrivateFeatureflagsReactNativeFeatureFlags"],[27,63,16,0],[27,66,16,0,"require"],[27,73,16,0],[27,74,16,0,"_dependencyMap"],[27,88,16,0],[28,2,16,0],[28,6,16,0,"ReactNativeFeatureFlags"],[28,29,16,0],[28,32,16,0,"_interopNamespace"],[28,49,16,0],[28,50,16,0,"_reactNativeSrcPrivateFeatureflagsReactNativeFeatureFlags"],[28,107,16,0],[29,2,23,7],[29,11,23,16,"elementsThatOverlapOffsets"],[29,37,23,42,"elementsThatOverlapOffsets"],[29,38,24,2,"offsets"],[29,45,24,24],[29,47,25,2,"props"],[29,52,25,24],[29,54,26,2,"listMetrics"],[29,65,26,36],[29,67,28,17],[30,4,28,17],[30,8,27,2,"zoomScale"],[30,17,27,19],[30,20,27,19,"arguments"],[30,29,27,19],[30,30,27,19,"length"],[30,36,27,19],[30,44,27,19,"arguments"],[30,53,27,19],[30,61,27,19,"undefined"],[30,70,27,19],[30,73,27,19,"arguments"],[30,82,27,19],[30,88,27,22],[30,89,27,23],[31,4,29,2],[31,8,29,8,"itemCount"],[31,17,29,17],[31,20,29,20,"props"],[31,25,29,25],[31,26,29,26,"getItemCount"],[31,38,29,38],[31,39,29,39,"props"],[31,44,29,44],[31,45,29,45,"data"],[31,49,29,49],[31,50,29,50],[32,4,30,2],[32,8,30,8,"result"],[32,14,30,14],[32,17,30,17],[32,19,30,19],[33,4,31,2],[33,9,31,7],[33,13,31,11,"offsetIndex"],[33,24,31,22],[33,27,31,25],[33,28,31,26],[33,30,31,28,"offsetIndex"],[33,41,31,39],[33,44,31,42,"offsets"],[33,51,31,49],[33,52,31,50,"length"],[33,58,31,56],[33,60,31,58,"offsetIndex"],[33,71,31,69],[33,73,31,71],[33,75,31,73],[34,6,32,4],[34,10,32,10,"currentOffset"],[34,23,32,23],[34,26,32,26,"offsets"],[34,33,32,33],[34,34,32,34,"offsetIndex"],[34,45,32,45],[34,46,32,46],[35,6,33,4],[35,10,33,8,"left"],[35,14,33,12],[35,17,33,15],[35,18,33,16],[36,6,34,4],[36,10,34,8,"right"],[36,15,34,13],[36,18,34,16,"itemCount"],[36,27,34,25],[36,30,34,28],[36,31,34,29],[37,6,36,4],[37,13,36,11,"left"],[37,17,36,15],[37,21,36,19,"right"],[37,26,36,24],[37,28,36,26],[38,8,37,6],[38,12,37,12,"mid"],[38,15,37,15],[38,18,37,18,"left"],[38,22,37,22],[38,25,37,25,"Math"],[38,29,37,29],[38,30,37,30,"floor"],[38,35,37,35],[38,36,37,36],[38,37,37,37,"right"],[38,42,37,42],[38,45,37,45,"left"],[38,49,37,49],[38,53,37,53],[38,54,37,54],[38,55,37,55],[39,8,38,6],[39,12,38,12,"frame"],[39,17,38,17],[39,20,38,20,"listMetrics"],[39,31,38,31],[39,32,38,32,"getCellMetricsApprox"],[39,52,38,52],[39,53,38,53,"mid"],[39,56,38,56],[39,58,38,58,"props"],[39,63,38,63],[39,64,38,64],[40,8,39,6],[40,12,39,12,"scaledOffsetStart"],[40,29,39,29],[40,32,39,32,"frame"],[40,37,39,37],[40,38,39,38,"offset"],[40,44,39,44],[40,47,39,47,"zoomScale"],[40,56,39,56],[41,8,40,6],[41,12,40,12,"scaledOffsetEnd"],[41,27,40,27],[41,30,40,30],[41,31,40,31,"frame"],[41,36,40,36],[41,37,40,37,"offset"],[41,43,40,43],[41,46,40,46,"frame"],[41,51,40,51],[41,52,40,52,"length"],[41,58,40,58],[41,62,40,62,"zoomScale"],[41,71,40,71],[42,8,44,6],[42,12,45,9,"mid"],[42,15,45,12],[42,20,45,17],[42,21,45,18],[42,25,45,22,"currentOffset"],[42,38,45,35],[42,41,45,38,"scaledOffsetStart"],[42,58,45,55],[42,62,46,9,"mid"],[42,65,46,12],[42,70,46,17],[42,71,46,18],[42,75,46,22,"currentOffset"],[42,88,46,35],[42,92,46,39,"scaledOffsetStart"],[42,109,46,57],[42,111,47,8],[43,10,48,8,"right"],[43,15,48,13],[43,18,48,16,"mid"],[43,21,48,19],[43,24,48,22],[43,25,48,23],[44,8,49,6],[44,9,49,7],[44,15,49,13],[44,19,49,17,"currentOffset"],[44,32,49,30],[44,35,49,33,"scaledOffsetEnd"],[44,50,49,48],[44,52,49,50],[45,10,50,8,"left"],[45,14,50,12],[45,17,50,15,"mid"],[45,20,50,18],[45,23,50,21],[45,24,50,22],[46,8,51,6],[46,9,51,7],[46,15,51,13],[47,10,52,8,"result"],[47,16,52,14],[47,17,52,15,"offsetIndex"],[47,28,52,26],[47,29,52,27],[47,32,52,30,"mid"],[47,35,52,33],[48,10,53,8],[49,8,54,6],[50,6,55,4],[51,4,56,2],[52,4,58,2],[52,11,58,9,"result"],[52,17,58,15],[53,2,59,0],[54,2,67,7],[54,11,67,16,"newRangeCount"],[54,24,67,29,"newRangeCount"],[54,25,68,2,"prev"],[54,29,72,3],[54,31,73,2,"next"],[54,35,77,3],[54,37,78,10],[55,4,79,2],[55,11,80,4,"next"],[55,15,80,8],[55,16,80,9,"last"],[55,20,80,13],[55,23,81,4,"next"],[55,27,81,8],[55,28,81,9,"first"],[55,33,81,14],[55,36,82,4],[55,37,82,5],[55,40,83,4,"Math"],[55,44,83,8],[55,45,83,9,"max"],[55,48,83,12],[55,49,84,6],[55,50,84,7],[55,52,85,6],[55,53,85,7],[55,56,85,10,"Math"],[55,60,85,14],[55,61,85,15,"min"],[55,64,85,18],[55,65,85,19,"next"],[55,69,85,23],[55,70,85,24,"last"],[55,74,85,28],[55,76,85,30,"prev"],[55,80,85,34],[55,81,85,35,"last"],[55,85,85,39],[55,86,85,40],[55,89,85,43,"Math"],[55,93,85,47],[55,94,85,48,"max"],[55,97,85,51],[55,98,85,52,"next"],[55,102,85,56],[55,103,85,57,"first"],[55,108,85,62],[55,110,85,64,"prev"],[55,114,85,68],[55,115,85,69,"first"],[55,120,85,74],[55,121,86,4],[55,122,86,5],[56,2,88,0],[57,2,96,7],[57,11,96,16,"computeWindowedRenderLimits"],[57,38,96,43,"computeWindowedRenderLimits"],[57,39,97,2,"props"],[57,44,97,24],[57,46,98,2,"maxToRenderPerBatch"],[57,65,98,29],[57,67,99,2,"windowSize"],[57,77,99,20],[57,79,100,2,"prev"],[57,83,103,3],[57,85,104,2,"listMetrics"],[57,96,104,36],[57,98,105,2,"scrollMetrics"],[57,111,112,3],[57,113,116,2],[58,4,117,2],[58,8,117,8,"itemCount"],[58,17,117,17],[58,20,117,20,"props"],[58,25,117,25],[58,26,117,26,"getItemCount"],[58,38,117,38],[58,39,117,39,"props"],[58,44,117,44],[58,45,117,45,"data"],[58,49,117,49],[58,50,117,50],[59,4,118,2],[59,8,118,6,"itemCount"],[59,17,118,15],[59,22,118,20],[59,23,118,21],[59,25,118,23],[60,6,119,4],[60,13,119,11],[61,8,119,12,"first"],[61,13,119,17],[61,15,119,19],[61,16,119,20],[62,8,119,22,"last"],[62,12,119,26],[62,14,119,28],[62,15,119,29],[63,6,119,30],[63,7,119,31],[64,4,120,2],[65,4,121,2],[65,8,121,9,"offset"],[65,14,121,15],[65,17,121,59,"scrollMetrics"],[65,30,121,72],[65,31,121,9,"offset"],[65,37,121,15],[66,6,121,17,"velocity"],[66,14,121,25],[66,17,121,59,"scrollMetrics"],[66,30,121,72],[66,31,121,17,"velocity"],[66,39,121,25],[67,6,121,27,"visibleLength"],[67,19,121,40],[67,22,121,59,"scrollMetrics"],[67,35,121,72],[67,36,121,27,"visibleLength"],[67,49,121,40],[68,6,121,40,"_scrollMetrics$zoomSc"],[68,27,121,40],[68,30,121,59,"scrollMetrics"],[68,43,121,72],[68,44,121,42,"zoomScale"],[68,53,121,51],[69,6,121,42,"zoomScale"],[69,15,121,51],[69,18,121,51,"_scrollMetrics$zoomSc"],[69,39,121,51],[69,53,121,54],[69,54,121,55],[69,57,121,55,"_scrollMetrics$zoomSc"],[69,78,121,55],[70,4,126,2],[70,8,126,8,"visibleBegin"],[70,20,126,20],[70,23,126,23,"Math"],[70,27,126,27],[70,28,126,28,"max"],[70,31,126,31],[70,32,126,32],[70,33,126,33],[70,35,126,35,"offset"],[70,41,126,41],[70,42,126,42],[71,4,127,2],[71,8,127,8,"visibleEnd"],[71,18,127,18],[71,21,127,21,"visibleBegin"],[71,33,127,33],[71,36,127,36,"visibleLength"],[71,49,127,49],[72,4,128,2],[72,8,128,8,"overscanLength"],[72,22,128,22],[72,25,128,25],[72,26,128,26,"windowSize"],[72,36,128,36],[72,39,128,39],[72,40,128,40],[72,44,128,44,"visibleLength"],[72,57,128,57],[73,4,131,2],[73,8,131,8,"leadFactor"],[73,18,131,18],[73,21,131,21],[73,24,131,24],[74,4,133,2],[74,8,133,8,"fillPreference"],[74,22,133,22],[74,25,134,4,"velocity"],[74,33,134,12],[74,36,134,15],[74,37,134,16],[74,40,134,19],[74,47,134,26],[74,50,134,29,"velocity"],[74,58,134,37],[74,61,134,40],[74,62,134,41],[74,63,134,42],[74,66,134,45],[74,74,134,53],[74,77,134,56],[74,83,134,62],[75,4,136,2],[75,8,136,8,"overscanBegin"],[75,21,136,21],[75,24,136,24,"Math"],[75,28,136,28],[75,29,136,29,"max"],[75,32,136,32],[75,33,137,4],[75,34,137,5],[75,36,138,4,"visibleBegin"],[75,48,138,16],[75,51,138,19],[75,52,138,20],[75,53,138,21],[75,56,138,24,"leadFactor"],[75,66,138,34],[75,70,138,38,"overscanLength"],[75,84,139,2],[75,85,139,3],[76,4,140,2],[76,8,140,8,"overscanEnd"],[76,19,140,19],[76,22,140,22,"Math"],[76,26,140,26],[76,27,140,27,"max"],[76,30,140,30],[76,31,140,31],[76,32,140,32],[76,34,140,34,"visibleEnd"],[76,44,140,44],[76,47,140,47,"leadFactor"],[76,57,140,57],[76,60,140,60,"overscanLength"],[76,74,140,74],[76,75,140,75],[77,4,142,2],[77,8,142,8,"lastItemOffset"],[77,22,142,22],[77,25,143,4,"listMetrics"],[77,36,143,15],[77,37,143,16,"getCellMetricsApprox"],[77,57,143,36],[77,58,143,37,"itemCount"],[77,67,143,46],[77,70,143,49],[77,71,143,50],[77,73,143,52,"props"],[77,78,143,57],[77,79,143,58],[77,80,143,59,"offset"],[77,86,143,65],[77,89,143,68,"zoomScale"],[77,98,143,77],[78,4,144,2],[78,8,144,6,"lastItemOffset"],[78,22,144,20],[78,25,144,23,"overscanBegin"],[78,38,144,36],[78,40,144,38],[79,6,146,4],[79,13,146,11],[80,8,147,6,"first"],[80,13,147,11],[80,15,147,13,"Math"],[80,19,147,17],[80,20,147,18,"max"],[80,23,147,21],[80,24,147,22],[80,25,147,23],[80,27,147,25,"itemCount"],[80,36,147,34],[80,39,147,37],[80,40,147,38],[80,43,147,41,"maxToRenderPerBatch"],[80,62,147,60],[80,63,147,61],[81,8,148,6,"last"],[81,12,148,10],[81,14,148,12,"itemCount"],[81,23,148,21],[81,26,148,24],[82,6,149,4],[82,7,149,5],[83,4,150,2],[84,4,153,2],[84,8,153,2,"_elementsThatOverlapO"],[84,29,153,2],[84,32,153,51,"elementsThatOverlapOffsets"],[84,58,153,77],[84,59,154,4],[84,60,154,5,"overscanBegin"],[84,73,154,18],[84,75,154,20,"visibleBegin"],[84,87,154,32],[84,89,154,34,"visibleEnd"],[84,99,154,44],[84,101,154,46,"overscanEnd"],[84,112,154,57],[84,113,154,58],[84,115,155,4,"props"],[84,120,155,9],[84,122,156,4,"listMetrics"],[84,133,156,15],[84,135,157,4,"zoomScale"],[84,144,158,2],[84,145,158,3],[85,6,158,3,"_elementsThatOverlapO2"],[85,28,158,3],[85,35,158,3,"_slicedToArray"],[85,49,158,3],[85,50,158,3,"default"],[85,57,158,3],[85,59,158,3,"_elementsThatOverlapO"],[85,80,158,3],[86,6,153,7,"overscanFirst"],[86,19,153,20],[86,22,153,20,"_elementsThatOverlapO2"],[86,44,153,20],[87,6,153,22,"first"],[87,11,153,27],[87,14,153,27,"_elementsThatOverlapO2"],[87,36,153,27],[88,6,153,29,"last"],[88,10,153,33],[88,13,153,33,"_elementsThatOverlapO2"],[88,35,153,33],[89,6,153,35,"overscanLast"],[89,18,153,47],[89,21,153,47,"_elementsThatOverlapO2"],[89,43,153,47],[90,4,159,2,"overscanFirst"],[90,17,159,15],[90,20,159,18,"overscanFirst"],[90,33,159,31],[90,37,159,35],[90,41,159,39],[90,44,159,42],[90,45,159,43],[90,48,159,46,"overscanFirst"],[90,61,159,59],[91,4,160,2,"first"],[91,9,160,7],[91,12,160,10,"first"],[91,17,160,15],[91,21,160,19],[91,25,160,23],[91,28,160,26,"Math"],[91,32,160,30],[91,33,160,31,"max"],[91,36,160,34],[91,37,160,35],[91,38,160,36],[91,40,160,38,"overscanFirst"],[91,53,160,51],[91,54,160,52],[91,57,160,55,"first"],[91,62,160,60],[92,4,161,2,"overscanLast"],[92,16,161,14],[92,19,161,17,"overscanLast"],[92,31,161,29],[92,35,161,33],[92,39,161,37],[92,42,161,40,"itemCount"],[92,51,161,49],[92,54,161,52],[92,55,161,53],[92,58,161,56,"overscanLast"],[92,70,161,68],[93,4,162,2,"last"],[93,8,162,6],[93,11,163,4,"last"],[93,15,163,8],[93,19,163,12],[93,23,163,16],[93,26,164,8,"Math"],[93,30,164,12],[93,31,164,13,"min"],[93,34,164,16],[93,35,164,17,"overscanLast"],[93,47,164,29],[93,49,164,31,"first"],[93,54,164,36],[93,57,164,39,"maxToRenderPerBatch"],[93,76,164,58],[93,79,164,61],[93,80,164,62],[93,81,164,63],[93,84,165,8,"last"],[93,88,165,12],[94,4,166,2],[94,8,166,8,"visible"],[94,15,166,15],[94,18,166,18],[95,6,166,19,"first"],[95,11,166,24],[96,6,166,26,"last"],[97,4,166,30],[97,5,166,31],[98,4,172,2],[98,8,172,6,"newCellCount"],[98,20,172,18],[98,23,172,21,"newRangeCount"],[98,36,172,34],[98,37,172,35,"prev"],[98,41,172,39],[98,43,172,41,"visible"],[98,50,172,48],[98,51,172,49],[99,4,174,2],[99,11,174,9],[99,15,174,13],[99,17,174,15],[100,6,175,4],[100,10,175,8,"first"],[100,15,175,13],[100,19,175,17,"overscanFirst"],[100,32,175,30],[100,36,175,34,"last"],[100,40,175,38],[100,44,175,42,"overscanLast"],[100,56,175,54],[100,58,175,56],[101,8,177,6],[102,6,178,4],[103,6,179,4],[103,10,179,10,"maxNewCells"],[103,21,179,21],[103,24,179,24,"newCellCount"],[103,36,179,36],[103,40,179,40,"maxToRenderPerBatch"],[103,59,179,59],[104,6,181,4],[104,10,181,8,"firstWillAddMore"],[104,26,181,24],[105,6,182,4],[105,10,182,8,"lastWillAddMore"],[105,25,182,23],[106,6,184,4],[106,10,184,8,"ReactNativeFeatureFlags"],[106,33,184,31],[106,34,184,32,"fixVirtualizeListCollapseWindowSize"],[106,69,184,67],[106,70,184,68],[106,71,184,69],[106,73,184,71],[107,8,185,6,"firstWillAddMore"],[107,24,185,22],[107,27,185,25,"first"],[107,32,185,30],[107,36,185,34,"prev"],[107,40,185,38],[107,41,185,39,"first"],[107,46,185,44],[108,8,186,6,"lastWillAddMore"],[108,23,186,21],[108,26,186,24,"last"],[108,30,186,28],[108,34,186,32,"prev"],[108,38,186,36],[108,39,186,37,"last"],[108,43,186,41],[109,6,187,4],[109,7,187,5],[109,13,187,11],[110,8,188,6,"firstWillAddMore"],[110,24,188,22],[110,27,188,25,"first"],[110,32,188,30],[110,36,188,34,"prev"],[110,40,188,38],[110,41,188,39,"first"],[110,46,188,44],[110,50,188,48,"first"],[110,55,188,53],[110,58,188,56,"prev"],[110,62,188,60],[110,63,188,61,"last"],[110,67,188,65],[111,8,189,6,"lastWillAddMore"],[111,23,189,21],[111,26,189,24,"last"],[111,30,189,28],[111,34,189,32,"prev"],[111,38,189,36],[111,39,189,37,"last"],[111,43,189,41],[111,47,189,45,"last"],[111,51,189,49],[111,54,189,52,"prev"],[111,58,189,56],[111,59,189,57,"first"],[111,64,189,62],[112,6,190,4],[113,6,192,4],[113,10,192,10,"firstShouldIncrement"],[113,30,192,30],[113,33,193,6,"first"],[113,38,193,11],[113,41,193,14,"overscanFirst"],[113,54,193,27],[113,59,193,32],[113,60,193,33,"maxNewCells"],[113,71,193,44],[113,75,193,48],[113,76,193,49,"firstWillAddMore"],[113,92,193,65],[113,93,193,66],[114,6,194,4],[114,10,194,10,"lastShouldIncrement"],[114,29,194,29],[114,32,195,6,"last"],[114,36,195,10],[114,39,195,13,"overscanLast"],[114,51,195,25],[114,56,195,30],[114,57,195,31,"maxNewCells"],[114,68,195,42],[114,72,195,46],[114,73,195,47,"lastWillAddMore"],[114,88,195,62],[114,89,195,63],[115,6,196,4],[115,10,196,8,"maxNewCells"],[115,21,196,19],[115,25,196,23],[115,26,196,24,"firstShouldIncrement"],[115,46,196,44],[115,50,196,48],[115,51,196,49,"lastShouldIncrement"],[115,70,196,68],[115,72,196,70],[116,8,201,6],[117,6,202,4],[118,6,203,4],[118,10,204,6,"firstShouldIncrement"],[118,30,204,26],[118,34,205,6],[118,36,205,8,"fillPreference"],[118,50,205,22],[118,55,205,27],[118,62,205,34],[118,66,205,38,"lastShouldIncrement"],[118,85,205,57],[118,89,205,61,"lastWillAddMore"],[118,104,205,76],[118,105,205,77],[118,107,206,6],[119,8,207,6],[119,12,207,10,"firstWillAddMore"],[119,28,207,26],[119,30,207,28],[120,10,208,8,"newCellCount"],[120,22,208,20],[120,24,208,22],[121,8,209,6],[122,8,210,6,"first"],[122,13,210,11],[122,15,210,13],[123,6,211,4],[124,6,212,4],[124,10,213,6,"lastShouldIncrement"],[124,29,213,25],[124,33,214,6],[124,35,214,8,"fillPreference"],[124,49,214,22],[124,54,214,27],[124,62,214,35],[124,66,214,39,"firstShouldIncrement"],[124,86,214,59],[124,90,214,63,"firstWillAddMore"],[124,106,214,79],[124,107,214,80],[124,109,215,6],[125,8,216,6],[125,12,216,10,"lastWillAddMore"],[125,27,216,25],[125,29,216,27],[126,10,217,8,"newCellCount"],[126,22,217,20],[126,24,217,22],[127,8,218,6],[128,8,219,6,"last"],[128,12,219,10],[128,14,219,12],[129,6,220,4],[130,4,221,2],[131,4,222,2],[131,8,223,4],[131,10,224,6,"last"],[131,14,224,10],[131,18,224,14,"first"],[131,23,224,19],[131,27,225,6,"first"],[131,32,225,11],[131,36,225,15],[131,37,225,16],[131,41,226,6,"last"],[131,45,226,10],[131,48,226,13,"itemCount"],[131,57,226,22],[131,61,227,6,"first"],[131,66,227,11],[131,70,227,15,"overscanFirst"],[131,83,227,28],[131,87,228,6,"last"],[131,91,228,10],[131,95,228,14,"overscanLast"],[131,107,228,26],[131,111,229,6,"first"],[131,116,229,11],[131,120,229,15,"visible"],[131,127,229,22],[131,128,229,23,"first"],[131,133,229,28],[131,137,230,6,"last"],[131,141,230,10],[131,145,230,14,"visible"],[131,152,230,21],[131,153,230,22,"last"],[131,157,230,26],[131,158,231,5],[131,160,232,4],[132,6,233,4],[132,12,233,10],[132,16,233,14,"Error"],[132,21,233,19],[132,22,234,6],[132,47,234,31],[132,50,235,8,"JSON"],[132,54,235,12],[132,55,235,13,"stringify"],[132,64,235,22],[132,65,235,23],[133,8,236,10,"first"],[133,13,236,15],[134,8,237,10,"last"],[134,12,237,14],[135,8,238,10,"itemCount"],[135,17,238,19],[136,8,239,10,"overscanFirst"],[136,21,239,23],[137,8,240,10,"overscanLast"],[137,20,240,22],[138,8,241,10,"visible"],[139,6,242,8],[139,7,242,9],[139,8,243,4],[139,9,243,5],[140,4,244,2],[141,4,245,2],[141,11,245,9],[142,6,245,10,"first"],[142,11,245,15],[143,6,245,17,"last"],[144,4,245,21],[144,5,245,22],[145,2,246,0],[146,2,248,7],[146,11,248,16,"keyExtractor"],[146,23,248,28,"keyExtractor"],[146,24,248,29,"item"],[146,28,248,38],[146,30,248,40,"index"],[146,35,248,53],[146,37,248,63],[147,4,249,2],[147,8,249,6],[147,15,249,13,"item"],[147,19,249,17],[147,24,249,22],[147,32,249,30],[147,36,249,34,"item"],[147,40,249,38],[147,42,249,40,"key"],[147,45,249,43],[147,49,249,47],[147,53,249,51],[147,55,249,53],[148,6,250,4],[148,13,250,11,"item"],[148,17,250,15],[148,18,250,16,"key"],[148,21,250,19],[149,4,251,2],[150,4,252,2],[150,8,252,6],[150,15,252,13,"item"],[150,19,252,17],[150,24,252,22],[150,32,252,30],[150,36,252,34,"item"],[150,40,252,38],[150,42,252,40,"id"],[150,44,252,42],[150,48,252,46],[150,52,252,50],[150,54,252,52],[151,6,253,4],[151,13,253,11,"item"],[151,17,253,15],[151,18,253,16,"id"],[151,20,253,18],[152,4,254,2],[153,4,255,2],[153,11,255,9,"String"],[153,17,255,15],[153,18,255,16,"index"],[153,23,255,21],[153,24,255,22],[154,2,256,0],[155,0,256,1],[155,3]],"functionMap":{"names":["<global>","elementsThatOverlapOffsets","newRangeCount","computeWindowedRenderLimits","keyExtractor"],"mappings":"AAA;OCsB;CDoC;OEQ;CFqB;OGQ;CHsJ;OIE"},"hasCjsExports":false},"type":"js/module"}]}