{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"query-string","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"Tk6zkk+/XfK89igjx1MNWAcG1Q8=","exportNames":["*"],"imports":1}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":55,"index":115}}],"key":"ZBgxhB8YmJlp1KxhfM5ocx9xUB0=","exportNames":["*"],"imports":1}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":116},"end":{"line":5,"column":61,"index":177}}],"key":"zoUaUuxQP5qPvRrno+lraXgTGfI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.getPathFromState = getPathFromState;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _queryString = require(_dependencyMap[1], \"query-string\");\n  var queryString = _interopNamespace(_queryString);\n  var _getPatternPartsJs = require(_dependencyMap[2], \"./getPatternParts.js\");\n  var _validatePathConfigJs = require(_dependencyMap[3], \"./validatePathConfig.js\");\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    var cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, _validatePathConfigJs.validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var _options = currentOptions[route.name];\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(_ref4 => {\n            var _ref5 = (0, _slicedToArray.default)(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            if (value === undefined) {\n              if (_options) {\n                var optional = _options.parts?.find(part => part.param === key)?.optional;\n                if (optional) {\n                  return null;\n                }\n              } else {\n                return null;\n              }\n            }\n            var stringify = _options?.stringify?.[key] ?? String;\n            return [key, stringify(value)];\n          }).filter(entry => entry != null));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(_ref6 => {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(_ref => {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(_ref2 => {\n          var _ref3 = (0, _slicedToArray.default)(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts = (0, _getPatternPartsJs.getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ..._parts]\n        };\n      }\n      return {\n        parts: _parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : [])] : config.path ? (0, _getPatternPartsJs.getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(_ref7 => {\n    var _ref8 = (0, _slicedToArray.default)(_ref7, 2),\n      name = _ref8[0],\n      c = _ref8[1];\n    var result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":272,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopDefault"],[7,27,1,13,"e"],[7,28,1,13],[8,4,1,13],[8,11,1,13,"e"],[8,12,1,13],[8,16,1,13,"e"],[8,17,1,13],[8,18,1,13,"__esModule"],[8,28,1,13],[8,31,1,13,"e"],[8,32,1,13],[9,6,1,13,"default"],[9,13,1,13],[9,15,1,13,"e"],[10,4,1,13],[11,2,1,13],[12,2,1,13],[12,11,1,13,"_interopNamespace"],[12,29,1,13,"e"],[12,30,1,13],[13,4,1,13],[13,8,1,13,"e"],[13,9,1,13],[13,13,1,13,"e"],[13,14,1,13],[13,15,1,13,"__esModule"],[13,25,1,13],[13,34,1,13,"e"],[13,35,1,13],[14,4,1,13],[14,8,1,13,"n"],[14,9,1,13],[15,4,1,13],[15,8,1,13,"e"],[15,9,1,13],[15,11,1,13,"Object"],[15,17,1,13],[15,18,1,13,"keys"],[15,22,1,13],[15,23,1,13,"e"],[15,24,1,13],[15,26,1,13,"forEach"],[15,33,1,13],[15,44,1,13,"k"],[15,45,1,13],[16,6,1,13,"n"],[16,7,1,13],[16,8,1,13,"k"],[16,9,1,13],[16,13,1,13,"e"],[16,14,1,13],[16,15,1,13,"k"],[16,16,1,13],[17,4,1,13],[18,4,1,13,"n"],[18,5,1,13],[18,6,1,13,"default"],[18,13,1,13],[18,16,1,13,"e"],[18,17,1,13],[19,4,1,13],[19,11,1,13,"n"],[19,12,1,13],[20,2,1,13],[21,2,52,0,"exports"],[21,9,52,0],[21,10,52,0,"getPathFromState"],[21,26,52,0],[21,29,52,0,"getPathFromState"],[21,45,52,0],[22,2,203,1],[22,6,203,1,"_babelRuntimeHelpersSlicedToArray"],[22,39,203,1],[22,42,203,1,"require"],[22,49,203,1],[22,50,203,1,"_dependencyMap"],[22,64,203,1],[23,2,203,1],[23,6,203,1,"_slicedToArray"],[23,20,203,1],[23,23,203,1,"_interopDefault"],[23,38,203,1],[23,39,203,1,"_babelRuntimeHelpersSlicedToArray"],[23,72,203,1],[24,2,3,0],[24,6,3,0,"_queryString"],[24,18,3,0],[24,21,3,0,"require"],[24,28,3,0],[24,29,3,0,"_dependencyMap"],[24,43,3,0],[25,2,3,0],[25,6,3,0,"queryString"],[25,17,3,0],[25,20,3,0,"_interopNamespace"],[25,37,3,0],[25,38,3,0,"_queryString"],[25,50,3,0],[26,2,4,0],[26,6,4,0,"_getPatternPartsJs"],[26,24,4,0],[26,27,4,0,"require"],[26,34,4,0],[26,35,4,0,"_dependencyMap"],[26,49,4,0],[27,2,5,0],[27,6,5,0,"_validatePathConfigJs"],[27,27,5,0],[27,30,5,0,"require"],[27,37,5,0],[27,38,5,0,"_dependencyMap"],[27,52,5,0],[28,2,6,0],[28,6,6,6,"getActiveRoute"],[28,20,6,20],[28,23,6,23,"state"],[28,28,6,28],[28,32,6,32],[29,4,7,2],[29,8,7,8,"route"],[29,13,7,13],[29,16,7,16],[29,23,7,23,"state"],[29,28,7,28],[29,29,7,29,"index"],[29,34,7,34],[29,39,7,39],[29,47,7,47],[29,50,7,50,"state"],[29,55,7,55],[29,56,7,56,"routes"],[29,62,7,62],[29,63,7,63,"state"],[29,68,7,68],[29,69,7,69,"index"],[29,74,7,74],[29,75,7,75],[29,78,7,78,"state"],[29,83,7,83],[29,84,7,84,"routes"],[29,90,7,90],[29,91,7,91,"state"],[29,96,7,96],[29,97,7,97,"routes"],[29,103,7,103],[29,104,7,104,"length"],[29,110,7,110],[29,113,7,113],[29,114,7,114],[29,115,7,115],[30,4,8,2],[30,8,8,6,"route"],[30,13,8,11],[30,14,8,12,"state"],[30,19,8,17],[30,21,8,19],[31,6,9,4],[31,13,9,11,"getActiveRoute"],[31,27,9,25],[31,28,9,26,"route"],[31,33,9,31],[31,34,9,32,"state"],[31,39,9,37],[31,40,9,38],[32,4,10,2],[33,4,11,2],[33,11,11,9,"route"],[33,16,11,14],[34,2,12,0],[34,3,12,1],[35,2,13,0],[35,6,13,6,"cachedNormalizedConfigs"],[35,29,13,29],[35,32,13,32],[35,36,13,36,"WeakMap"],[35,43,13,43],[35,44,13,44],[35,45,13,45],[36,2,14,0],[36,6,14,6,"getNormalizedConfigs"],[36,26,14,26],[36,29,14,29,"options"],[36,36,14,36],[36,40,14,40],[37,4,15,2],[37,8,15,6],[37,9,15,7,"options"],[37,16,15,14],[37,18,15,16,"screens"],[37,25,15,23],[37,27,15,25],[37,34,15,32],[37,35,15,33],[37,36,15,34],[38,4,16,2],[38,8,16,8,"cached"],[38,14,16,14],[38,17,16,17,"cachedNormalizedConfigs"],[38,40,16,40],[38,41,16,41,"get"],[38,44,16,44],[38,45,16,45,"options"],[38,52,16,52],[38,54,16,54,"screens"],[38,61,16,61],[38,62,16,62],[39,4,17,2],[39,8,17,6,"cached"],[39,14,17,12],[39,16,17,14],[39,23,17,21,"cached"],[39,29,17,27],[40,4,18,2],[40,8,18,8,"normalizedConfigs"],[40,25,18,25],[40,28,18,28,"createNormalizedConfigs"],[40,51,18,51],[40,52,18,52,"options"],[40,59,18,59],[40,60,18,60,"screens"],[40,67,18,67],[40,68,18,68],[41,4,19,2,"cachedNormalizedConfigs"],[41,27,19,25],[41,28,19,26,"set"],[41,31,19,29],[41,32,19,30,"options"],[41,39,19,37],[41,40,19,38,"screens"],[41,47,19,45],[41,49,19,47,"normalizedConfigs"],[41,66,19,64],[41,67,19,65],[42,4,20,2],[42,11,20,9,"normalizedConfigs"],[42,28,20,26],[43,2,21,0],[43,3,21,1],[45,2,23,0],[46,0,24,0],[47,0,25,0],[48,0,26,0],[49,0,27,0],[50,0,28,0],[51,0,29,0],[52,0,30,0],[53,0,31,0],[54,0,32,0],[55,0,33,0],[56,0,34,0],[57,0,35,0],[58,0,36,0],[59,0,37,0],[60,0,38,0],[61,0,39,0],[62,0,40,0],[63,0,41,0],[64,0,42,0],[65,0,43,0],[66,0,44,0],[67,0,45,0],[68,0,46,0],[69,0,47,0],[70,0,48,0],[71,0,49,0],[72,0,50,0],[73,0,51,0],[74,2,52,7],[74,11,52,16,"getPathFromState"],[74,27,52,32,"getPathFromState"],[74,28,52,33,"state"],[74,33,52,38],[74,35,52,40,"options"],[74,42,52,47],[74,44,52,49],[75,4,53,2],[75,8,53,6,"state"],[75,13,53,11],[75,17,53,15],[75,21,53,19],[75,23,53,21],[76,6,54,4],[76,12,54,10,"Error"],[76,17,54,15],[76,18,54,16],[76,26,54,24,"String"],[76,32,54,30],[76,33,54,31,"state"],[76,38,54,36],[76,39,54,37],[76,104,54,102],[76,105,54,103],[77,4,55,2],[78,4,56,2],[78,8,56,6,"options"],[78,15,56,13],[78,17,56,15],[79,6,57,4],[79,10,57,4,"validatePathConfig"],[79,31,57,22],[79,32,57,22,"validatePathConfig"],[79,50,57,22],[79,52,57,23,"options"],[79,59,57,30],[79,60,57,31],[80,4,58,2],[81,4,59,2],[81,8,59,8,"configs"],[81,15,59,15],[81,18,59,18,"getNormalizedConfigs"],[81,38,59,38],[81,39,59,39,"options"],[81,46,59,46],[81,47,59,47],[82,4,60,2],[82,8,60,6,"path"],[82,12,60,10],[82,15,60,13],[82,18,60,16],[83,4,61,2],[83,8,61,6,"current"],[83,15,61,13],[83,18,61,16,"state"],[83,23,61,21],[84,4,62,2],[84,8,62,8,"allParams"],[84,17,62,17],[84,20,62,20],[84,21,62,21],[84,22,62,22],[85,4,62,23],[85,8,62,23,"_loop"],[85,13,62,23],[85,25,62,23,"_loop"],[85,26,62,23],[85,28,63,18],[86,6,64,4],[86,10,64,8,"index"],[86,15,64,13],[86,18,64,16],[86,25,64,23,"current"],[86,32,64,30],[86,33,64,31,"index"],[86,38,64,36],[86,43,64,41],[86,51,64,49],[86,54,64,52,"current"],[86,61,64,59],[86,62,64,60,"index"],[86,67,64,65],[86,70,64,68],[86,71,64,69],[87,6,65,4],[87,10,65,8,"route"],[87,15,65,13],[87,18,65,16,"current"],[87,25,65,23],[87,26,65,24,"routes"],[87,32,65,30],[87,33,65,31,"index"],[87,38,65,36],[87,39,65,37],[88,6,66,4],[88,10,66,8,"parts"],[88,15,66,13],[89,6,67,4],[89,10,67,8,"focusedParams"],[89,23,67,21],[90,6,68,4],[90,10,68,8,"currentOptions"],[90,24,68,22],[90,27,68,25,"configs"],[90,34,68,32],[91,6,69,4],[91,10,69,10,"focusedRoute"],[91,22,69,22],[91,25,69,25,"getActiveRoute"],[91,39,69,39],[91,40,69,40,"state"],[91,45,69,45],[91,46,69,46],[93,6,71,4],[94,6,72,4],[94,10,72,10,"nestedRouteNames"],[94,26,72,26],[94,29,72,29],[94,31,72,31],[95,6,73,4],[95,10,73,8,"hasNext"],[95,17,73,15],[95,20,73,18],[95,24,73,22],[96,6,73,23],[96,10,73,23,"_loop2"],[96,16,73,23],[96,28,73,23,"_loop2"],[96,29,73,23],[96,31,74,52],[97,8,75,6,"parts"],[97,13,75,11],[97,16,75,14,"currentOptions"],[97,30,75,28],[97,31,75,29,"route"],[97,36,75,34],[97,37,75,35,"name"],[97,41,75,39],[97,42,75,40],[97,43,75,41,"parts"],[97,48,75,46],[98,8,76,6,"nestedRouteNames"],[98,24,76,22],[98,25,76,23,"push"],[98,29,76,27],[98,30,76,28,"route"],[98,35,76,33],[98,36,76,34,"name"],[98,40,76,38],[98,41,76,39],[99,8,77,6],[99,12,77,10,"route"],[99,17,77,15],[99,18,77,16,"params"],[99,24,77,22],[99,26,77,24],[100,10,78,8],[100,14,78,14,"options"],[100,22,78,21],[100,25,78,24,"currentOptions"],[100,39,78,38],[100,40,78,39,"route"],[100,45,78,44],[100,46,78,45,"name"],[100,50,78,49],[100,51,78,50],[101,10,79,8],[101,14,79,14,"currentParams"],[101,27,79,27],[101,30,79,30,"Object"],[101,36,79,36],[101,37,79,37,"fromEntries"],[101,48,79,48],[101,49,79,49,"Object"],[101,55,79,55],[101,56,79,56,"entries"],[101,63,79,63],[101,64,79,64,"route"],[101,69,79,69],[101,70,79,70,"params"],[101,76,79,76],[101,77,79,77],[101,78,79,78,"map"],[101,81,79,81],[101,82,79,82,"_ref4"],[101,87,79,82],[101,91,79,100],[102,12,79,100],[102,16,79,100,"_ref5"],[102,21,79,100],[102,28,79,100,"_slicedToArray"],[102,42,79,100],[102,43,79,100,"default"],[102,50,79,100],[102,52,79,100,"_ref4"],[102,57,79,100],[103,14,79,84,"key"],[103,17,79,87],[103,20,79,87,"_ref5"],[103,25,79,87],[104,14,79,89,"value"],[104,19,79,94],[104,22,79,94,"_ref5"],[104,27,79,94],[105,12,80,10],[105,16,80,14,"value"],[105,21,80,19],[105,26,80,24,"undefined"],[105,35,80,33],[105,37,80,35],[106,14,81,12],[106,18,81,16,"options"],[106,26,81,23],[106,28,81,25],[107,16,82,14],[107,20,82,20,"optional"],[107,28,82,28],[107,31,82,31,"options"],[107,39,82,38],[107,40,82,39,"parts"],[107,45,82,44],[107,47,82,46,"find"],[107,51,82,50],[107,52,82,51,"part"],[107,56,82,55],[107,60,82,59,"part"],[107,64,82,63],[107,65,82,64,"param"],[107,70,82,69],[107,75,82,74,"key"],[107,78,82,77],[107,79,82,78],[107,81,82,80,"optional"],[107,89,82,88],[108,16,83,14],[108,20,83,18,"optional"],[108,28,83,26],[108,30,83,28],[109,18,84,16],[109,25,84,23],[109,29,84,27],[110,16,85,14],[111,14,86,12],[111,15,86,13],[111,21,86,19],[112,16,87,14],[112,23,87,21],[112,27,87,25],[113,14,88,12],[114,12,89,10],[115,12,90,10],[115,16,90,16,"stringify"],[115,25,90,25],[115,28,90,28,"options"],[115,36,90,35],[115,38,90,37,"stringify"],[115,47,90,46],[115,50,90,49,"key"],[115,53,90,52],[115,54,90,53],[115,58,90,57,"String"],[115,64,90,63],[116,12,91,10],[116,19,91,17],[116,20,91,18,"key"],[116,23,91,21],[116,25,91,23,"stringify"],[116,34,91,32],[116,35,91,33,"value"],[116,40,91,38],[116,41,91,39],[116,42,91,40],[117,10,92,8],[117,11,92,9],[117,12,92,10],[117,13,92,11,"filter"],[117,19,92,17],[117,20,92,18,"entry"],[117,25,92,23],[117,29,92,27,"entry"],[117,34,92,32],[117,38,92,36],[117,42,92,40],[117,43,92,41],[117,44,92,42],[118,10,93,8],[118,14,93,12,"parts"],[118,19,93,17],[118,21,93,19,"length"],[118,27,93,25],[118,29,93,27],[119,12,94,10,"Object"],[119,18,94,16],[119,19,94,17,"assign"],[119,25,94,23],[119,26,94,24,"allParams"],[119,35,94,33],[119,37,94,35,"currentParams"],[119,50,94,48],[119,51,94,49],[120,10,95,8],[121,10,96,8],[121,14,96,12,"focusedRoute"],[121,26,96,24],[121,31,96,29,"route"],[121,36,96,34],[121,38,96,36],[122,12,97,10],[123,12,98,10],[124,12,99,10,"focusedParams"],[124,25,99,23],[124,28,99,26],[125,14,100,12],[125,17,100,15,"currentParams"],[126,12,101,10],[126,13,101,11],[127,12,102,10,"parts"],[128,12,103,10],[129,12,103,10],[129,14,104,12,"forEach"],[129,21,104,19],[129,22,104,20,"_ref6"],[129,27,104,20],[129,31,106,16],[130,14,106,16],[130,18,105,12,"param"],[130,23,105,17],[130,26,105,17,"_ref6"],[130,31,105,17],[130,32,105,12,"param"],[130,37,105,17],[131,14,107,12],[131,18,107,16,"param"],[131,23,107,21],[131,25,107,23],[132,16,108,14],[133,16,109,14],[133,20,109,18,"focusedParams"],[133,33,109,31],[133,35,109,33],[134,18,110,16],[135,18,111,16],[135,25,111,23,"focusedParams"],[135,38,111,36],[135,39,111,37,"param"],[135,44,111,42],[135,45,111,43],[136,16,112,14],[137,14,113,12],[138,12,114,10],[138,13,114,11],[138,14,114,12],[139,10,115,8],[140,8,116,6],[142,8,118,6],[143,8,119,6],[143,12,119,10],[143,13,119,11,"currentOptions"],[143,27,119,25],[143,28,119,26,"route"],[143,33,119,31],[143,34,119,32,"name"],[143,38,119,36],[143,39,119,37],[143,40,119,38,"screens"],[143,47,119,45],[143,51,119,49,"route"],[143,56,119,54],[143,57,119,55,"state"],[143,62,119,60],[143,67,119,65,"undefined"],[143,76,119,74],[143,78,119,76],[144,10,120,8,"hasNext"],[144,17,120,15],[144,20,120,18],[144,25,120,23],[145,8,121,6],[145,9,121,7],[145,15,121,13],[146,10,122,8,"index"],[146,15,122,13],[146,18,122,16],[146,25,122,23,"route"],[146,30,122,28],[146,31,122,29,"state"],[146,36,122,34],[146,37,122,35,"index"],[146,42,122,40],[146,47,122,45],[146,55,122,53],[146,58,122,56,"route"],[146,63,122,61],[146,64,122,62,"state"],[146,69,122,67],[146,70,122,68,"index"],[146,75,122,73],[146,78,122,76,"route"],[146,83,122,81],[146,84,122,82,"state"],[146,89,122,87],[146,90,122,88,"routes"],[146,96,122,94],[146,97,122,95,"length"],[146,103,122,101],[146,106,122,104],[146,107,122,105],[147,10,123,8],[147,14,123,14,"nextRoute"],[147,23,123,23],[147,26,123,26,"route"],[147,31,123,31],[147,32,123,32,"state"],[147,37,123,37],[147,38,123,38,"routes"],[147,44,123,44],[147,45,123,45,"index"],[147,50,123,50],[147,51,123,51],[148,10,124,8],[148,14,124,14,"nestedConfig"],[148,26,124,26],[148,29,124,29,"currentOptions"],[148,43,124,43],[148,44,124,44,"route"],[148,49,124,49],[148,50,124,50,"name"],[148,54,124,54],[148,55,124,55],[148,56,124,56,"screens"],[148,63,124,63],[150,10,126,8],[151,10,127,8],[151,14,127,12,"nestedConfig"],[151,26,127,24],[151,30,127,28,"nextRoute"],[151,39,127,37],[151,40,127,38,"name"],[151,44,127,42],[151,48,127,46,"nestedConfig"],[151,60,127,58],[151,62,127,60],[152,12,128,10,"route"],[152,17,128,15],[152,20,128,18,"nextRoute"],[152,29,128,27],[153,12,129,10,"currentOptions"],[153,26,129,24],[153,29,129,27,"nestedConfig"],[153,41,129,39],[154,10,130,8],[154,11,130,9],[154,17,130,15],[155,12,131,10],[156,12,132,10,"hasNext"],[156,19,132,17],[156,22,132,20],[156,27,132,25],[157,10,133,8],[158,8,134,6],[159,6,135,4],[159,7,135,5],[160,6,74,4],[160,13,74,11,"route"],[160,18,74,16],[160,19,74,17,"name"],[160,23,74,21],[160,27,74,25,"currentOptions"],[160,41,74,39],[160,45,74,43,"hasNext"],[160,52,74,50],[161,8,74,50,"_loop2"],[161,14,74,50],[162,6,74,50],[163,6,136,4],[163,10,136,8,"currentOptions"],[163,24,136,22],[163,25,136,23,"route"],[163,30,136,28],[163,31,136,29,"name"],[163,35,136,33],[163,36,136,34],[163,41,136,39,"undefined"],[163,50,136,48],[163,52,136,50],[164,8,137,6,"path"],[164,12,137,10],[164,16,137,14,"parts"],[164,21,137,19],[164,23,137,21,"map"],[164,26,137,24],[164,27,137,25,"_ref"],[164,31,137,25],[164,35,141,12],[165,10,141,12],[165,14,138,8,"segment"],[165,21,138,15],[165,24,138,15,"_ref"],[165,28,138,15],[165,29,138,8,"segment"],[165,36,138,15],[166,12,139,8,"param"],[166,17,139,13],[166,20,139,13,"_ref"],[166,24,139,13],[166,25,139,8,"param"],[166,30,139,13],[167,12,140,8,"optional"],[167,20,140,16],[167,23,140,16,"_ref"],[167,27,140,16],[167,28,140,8,"optional"],[167,36,140,16],[168,10,142,8],[169,10,143,8],[170,10,144,8],[171,10,145,8],[171,14,145,12,"segment"],[171,21,145,19],[171,26,145,24],[171,29,145,27],[171,31,145,29],[172,12,146,10],[172,19,146,17,"route"],[172,24,146,22],[172,25,146,23,"name"],[172,29,146,27],[173,10,147,8],[175,10,149,8],[176,10,150,8],[176,14,150,12,"param"],[176,19,150,17],[176,21,150,19],[177,12,151,10],[177,16,151,16,"value"],[177,21,151,21],[177,24,151,24,"allParams"],[177,33,151,33],[177,34,151,34,"param"],[177,39,151,39],[177,40,151,40],[178,12,152,10],[178,16,152,14,"value"],[178,21,152,19],[178,26,152,24,"undefined"],[178,35,152,33],[178,39,152,37,"optional"],[178,47,152,45],[178,49,152,47],[179,14,153,12],[180,14,154,12],[180,21,154,19],[180,23,154,21],[181,12,155,10],[183,12,157,10],[184,12,158,10],[185,12,159,10],[185,19,159,17,"String"],[185,25,159,23],[185,26,159,24,"value"],[185,31,159,29],[185,32,159,30],[185,33,159,31,"replace"],[185,40,159,38],[185,41,159,39],[185,74,159,72],[185,76,159,74,"char"],[185,80,159,78],[185,84,159,82,"encodeURIComponent"],[185,102,159,100],[185,103,159,101,"char"],[185,107,159,105],[185,108,159,106],[185,109,159,107],[186,10,160,8],[187,10,161,8],[187,17,161,15,"encodeURIComponent"],[187,35,161,33],[187,36,161,34,"segment"],[187,43,161,41],[187,44,161,42],[188,8,162,6],[188,9,162,7],[188,10,162,8],[188,11,162,9,"join"],[188,15,162,13],[188,16,162,14],[188,19,162,17],[188,20,162,18],[189,6,163,4],[189,7,163,5],[189,13,163,11],[190,8,164,6,"path"],[190,12,164,10],[190,16,164,14,"encodeURIComponent"],[190,34,164,32],[190,35,164,33,"route"],[190,40,164,38],[190,41,164,39,"name"],[190,45,164,43],[190,46,164,44],[191,6,165,4],[192,6,166,4],[192,10,166,8],[192,11,166,9,"focusedParams"],[192,24,166,22],[192,28,166,26,"focusedRoute"],[192,40,166,38],[192,41,166,39,"params"],[192,47,166,45],[192,49,166,47],[193,8,167,6,"focusedParams"],[193,21,167,19],[193,24,167,22,"Object"],[193,30,167,28],[193,31,167,29,"fromEntries"],[193,42,167,40],[193,43,167,41,"Object"],[193,49,167,47],[193,50,167,48,"entries"],[193,57,167,55],[193,58,167,56,"focusedRoute"],[193,70,167,68],[193,71,167,69,"params"],[193,77,167,75],[193,78,167,76],[193,79,167,77,"map"],[193,82,167,80],[193,83,167,81,"_ref2"],[193,88,167,81],[194,10,167,81],[194,14,167,81,"_ref3"],[194,19,167,81],[194,26,167,81,"_slicedToArray"],[194,40,167,81],[194,41,167,81,"default"],[194,48,167,81],[194,50,167,81,"_ref2"],[194,55,167,81],[195,12,167,83,"key"],[195,15,167,86],[195,18,167,86,"_ref3"],[195,23,167,86],[196,12,167,88,"value"],[196,17,167,93],[196,20,167,93,"_ref3"],[196,25,167,93],[197,10,167,93],[197,17,167,99],[197,18,167,100,"key"],[197,21,167,103],[197,23,167,105,"String"],[197,29,167,111],[197,30,167,112,"value"],[197,35,167,117],[197,36,167,118],[197,37,167,119],[198,8,167,119],[198,10,167,120],[198,11,167,121],[199,6,168,4],[200,6,169,4],[200,10,169,8,"route"],[200,15,169,13],[200,16,169,14,"state"],[200,21,169,19],[200,23,169,21],[201,8,170,6,"path"],[201,12,170,10],[201,16,170,14],[201,19,170,17],[202,6,171,4],[202,7,171,5],[202,13,171,11],[202,17,171,15,"focusedParams"],[202,30,171,28],[202,32,171,30],[203,8,172,6],[203,13,172,11],[203,17,172,17,"param"],[203,22,172,22],[203,26,172,26,"focusedParams"],[203,39,172,39],[203,41,172,41],[204,10,173,8],[204,14,173,12,"focusedParams"],[204,27,173,25],[204,28,173,26,"param"],[204,33,173,31],[204,34,173,32],[204,39,173,37],[204,50,173,48],[204,52,173,50],[205,12,174,10],[206,12,175,10],[206,19,175,17,"focusedParams"],[206,32,175,30],[206,33,175,31,"param"],[206,38,175,36],[206,39,175,37],[207,10,176,8],[208,8,177,6],[209,8,178,6],[209,12,178,12,"query"],[209,17,178,17],[209,20,178,20,"queryString"],[209,31,178,31],[209,32,178,32,"stringify"],[209,41,178,41],[209,42,178,42,"focusedParams"],[209,55,178,55],[209,57,178,57],[210,10,179,8,"sort"],[210,14,179,12],[210,16,179,14],[211,8,180,6],[211,9,180,7],[211,10,180,8],[212,8,181,6],[212,12,181,10,"query"],[212,17,181,15],[212,19,181,17],[213,10,182,8,"path"],[213,14,182,12],[213,18,182,16],[213,22,182,20,"query"],[213,27,182,25],[213,29,182,27],[214,8,183,6],[215,6,184,4],[216,6,185,4,"current"],[216,13,185,11],[216,16,185,14,"route"],[216,21,185,19],[216,22,185,20,"state"],[216,27,185,25],[217,4,186,2],[217,5,186,3],[218,4,63,2],[218,11,63,9,"current"],[218,18,63,16],[219,6,63,16,"_loop"],[219,11,63,16],[220,4,63,16],[222,4,188,2],[223,4,189,2],[223,8,189,6,"options"],[223,15,189,13],[223,17,189,15,"path"],[223,21,189,19],[223,23,189,21],[224,6,190,4,"path"],[224,10,190,8],[224,13,190,11],[224,16,190,14,"options"],[224,23,190,21],[224,24,190,22,"path"],[224,28,190,26],[224,32,190,30,"path"],[224,36,190,34],[224,38,190,36],[225,4,191,2],[227,4,193,2],[228,4,194,2,"path"],[228,8,194,6],[228,11,194,9,"path"],[228,15,194,13],[228,16,194,14,"replace"],[228,23,194,21],[228,24,194,22],[228,30,194,28],[228,32,194,30],[228,35,194,33],[228,36,194,34],[229,4,195,2,"path"],[229,8,195,6],[229,11,195,9,"path"],[229,15,195,13],[229,16,195,14,"length"],[229,22,195,20],[229,25,195,23],[229,26,195,24],[229,29,195,27,"path"],[229,33,195,31],[229,34,195,32,"replace"],[229,41,195,39],[229,42,195,40],[229,47,195,45],[229,49,195,47],[229,51,195,49],[229,52,195,50],[229,55,195,53,"path"],[229,59,195,57],[231,4,197,2],[232,4,198,2],[233,4,199,2],[233,8,199,6],[233,9,199,7,"path"],[233,13,199,11],[233,14,199,12,"startsWith"],[233,24,199,22],[233,25,199,23],[233,28,199,26],[233,29,199,27],[233,31,199,29],[234,6,200,4,"path"],[234,10,200,8],[234,13,200,11],[234,17,200,15,"path"],[234,21,200,19],[234,23,200,21],[235,4,201,2],[236,4,202,2],[236,11,202,9,"path"],[236,15,202,13],[237,2,203,0],[238,2,204,0],[238,6,204,6,"createConfigItem"],[238,22,204,22],[238,25,204,25,"createConfigItem"],[238,26,204,26,"config"],[238,32,204,32],[238,34,204,34,"parentParts"],[238,45,204,45],[238,50,204,50],[239,4,205,2],[239,8,205,6],[239,15,205,13,"config"],[239,21,205,19],[239,26,205,24],[239,34,205,32],[239,36,205,34],[240,6,206,4],[241,6,207,4],[241,10,207,10,"parts"],[241,16,207,15],[241,19,207,18],[241,23,207,18,"getPatternParts"],[241,41,207,33],[241,42,207,33,"getPatternParts"],[241,57,207,33],[241,59,207,34,"config"],[241,65,207,40],[241,66,207,41],[242,6,208,4],[242,10,208,8,"parentParts"],[242,21,208,19],[242,23,208,21],[243,8,209,6],[243,15,209,13],[244,10,210,8,"parts"],[244,15,210,13],[244,17,210,15],[244,18,210,16],[244,21,210,19,"parentParts"],[244,32,210,30],[244,34,210,32],[244,37,210,35,"parts"],[244,43,210,40],[245,8,211,6],[245,9,211,7],[246,6,212,4],[247,6,213,4],[247,13,213,11],[248,8,214,6,"parts"],[248,13,214,11],[248,15,214,6,"parts"],[249,6,215,4],[249,7,215,5],[250,4,216,2],[251,4,217,2],[251,8,217,6,"config"],[251,14,217,12],[251,15,217,13,"exact"],[251,20,217,18],[251,24,217,22,"config"],[251,30,217,28],[251,31,217,29,"path"],[251,35,217,33],[251,40,217,38,"undefined"],[251,49,217,47],[251,51,217,49],[252,6,218,4],[252,12,218,10],[252,16,218,14,"Error"],[252,21,218,19],[252,22,218,20],[252,172,218,170],[252,173,218,171],[253,4,219,2],[255,4,221,2],[256,4,222,2],[257,4,223,2],[257,8,223,8,"parts"],[257,13,223,13],[257,16,223,16,"config"],[257,22,223,22],[257,23,223,23,"exact"],[257,28,223,28],[257,33,223,33],[257,37,223,37],[257,40,223,40],[257,41,223,41],[257,45,223,45,"parentParts"],[257,56,223,56],[257,60,223,60],[257,62,223,62],[257,63,223,63],[257,65,223,65],[257,69,223,69,"config"],[257,75,223,75],[257,76,223,76,"path"],[257,80,223,80],[257,83,223,83],[257,87,223,83,"getPatternParts"],[257,105,223,98],[257,106,223,98,"getPatternParts"],[257,121,223,98],[257,123,223,99,"config"],[257,129,223,105],[257,130,223,106,"path"],[257,134,223,110],[257,135,223,111],[257,138,223,114],[257,140,223,116],[257,141,223,117],[257,142,223,118],[257,145,223,121,"config"],[257,151,223,127],[257,152,223,128,"path"],[257,156,223,132],[257,159,223,135],[257,163,223,135,"getPatternParts"],[257,181,223,150],[257,182,223,150,"getPatternParts"],[257,197,223,150],[257,199,223,151,"config"],[257,205,223,157],[257,206,223,158,"path"],[257,210,223,162],[257,211,223,163],[257,214,223,166,"undefined"],[257,223,223,175],[258,4,224,2],[258,8,224,8,"screens"],[258,15,224,15],[258,18,224,18,"config"],[258,24,224,24],[258,25,224,25,"screens"],[258,32,224,32],[258,35,224,35,"createNormalizedConfigs"],[258,58,224,58],[258,59,224,59,"config"],[258,65,224,65],[258,66,224,66,"screens"],[258,73,224,73],[258,75,224,75,"parts"],[258,80,224,80],[258,81,224,81],[258,84,224,84,"undefined"],[258,93,224,93],[259,4,225,2],[259,11,225,9],[260,6,226,4,"parts"],[260,11,226,9],[261,6,227,4,"stringify"],[261,15,227,13],[261,17,227,15,"config"],[261,23,227,21],[261,24,227,22,"stringify"],[261,33,227,31],[262,6,228,4,"screens"],[263,4,229,2],[263,5,229,3],[264,2,230,0],[264,3,230,1],[265,2,231,0],[265,6,231,6,"createNormalizedConfigs"],[265,29,231,29],[265,32,231,32,"createNormalizedConfigs"],[265,33,231,33,"options"],[265,40,231,40],[265,42,231,42,"parts"],[265,47,231,47],[265,52,231,52,"Object"],[265,58,231,58],[265,59,231,59,"fromEntries"],[265,70,231,70],[265,71,231,71,"Object"],[265,77,231,77],[265,78,231,78,"entries"],[265,85,231,85],[265,86,231,86,"options"],[265,93,231,93],[265,94,231,94],[265,95,231,95,"map"],[265,98,231,98],[265,99,231,99,"_ref7"],[265,104,231,99],[265,108,231,114],[266,4,231,114],[266,8,231,114,"_ref8"],[266,13,231,114],[266,20,231,114,"_slicedToArray"],[266,34,231,114],[266,35,231,114,"default"],[266,42,231,114],[266,44,231,114,"_ref7"],[266,49,231,114],[267,6,231,101,"name"],[267,10,231,105],[267,13,231,105,"_ref8"],[267,18,231,105],[268,6,231,107,"c"],[268,7,231,108],[268,10,231,108,"_ref8"],[268,15,231,108],[269,4,232,2],[269,8,232,8,"result"],[269,14,232,14],[269,17,232,17,"createConfigItem"],[269,33,232,33],[269,34,232,34,"c"],[269,35,232,35],[269,37,232,37,"parts"],[269,42,232,42],[269,43,232,43],[270,4,233,2],[270,11,233,9],[270,12,233,10,"name"],[270,16,233,14],[270,18,233,16,"result"],[270,24,233,22],[270,25,233,23],[271,2,234,0],[271,3,234,1],[271,4,234,2],[271,5,234,3],[272,0,234,4],[272,3]],"functionMap":{"names":["<global>","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","options.parts.find$argument_0","Object.entries.map.filter$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;uBCK;CDM;6BEE;CFO;OG+B;kFC2B;mDCG,0BD;SDU,SG,sBH;oBIY;WJU;yBKuB;0ECsB,gCD;OLG;iFCK,sCD;CHoC;yBUC;CV0B;gCWC,mEP;COG,EX"},"hasCjsExports":false},"type":"js/module"}]}