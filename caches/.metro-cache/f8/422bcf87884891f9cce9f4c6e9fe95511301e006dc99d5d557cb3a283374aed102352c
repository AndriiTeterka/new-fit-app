{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc=","exportNames":["*"],"imports":1}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg=","exportNames":["*"],"imports":1}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I=","exportNames":["*"],"imports":1}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw=","exportNames":["*"],"imports":1}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw=","exportNames":["*"],"imports":1}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc=","exportNames":["*"],"imports":1}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE=","exportNames":["*"],"imports":1}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"C:\\\\Users\\\\ateterka\\\\new-fit-app\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\handlers\\\\createHandler.tsx\";\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return createHandler;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[5], \"react-native\");\n  var _customDirectEventTypes = require(_dependencyMap[6], \"./customDirectEventTypes\");\n  var _RNGestureHandlerModule = require(_dependencyMap[7], \"../RNGestureHandlerModule\");\n  var RNGestureHandlerModule = _interopDefault(_RNGestureHandlerModule);\n  var _State = require(_dependencyMap[8], \"../State\");\n  var _handlersRegistry = require(_dependencyMap[9], \"./handlersRegistry\");\n  var _getNextHandlerTag = require(_dependencyMap[10], \"./getNextHandlerTag\");\n  var _utils = require(_dependencyMap[11], \"./utils\");\n  var _findNodeHandle = require(_dependencyMap[12], \"../findNodeHandle\");\n  var findNodeHandle = _interopDefault(_findNodeHandle);\n  var _utils2 = require(_dependencyMap[13], \"../utils\");\n  var _ActionType = require(_dependencyMap[14], \"../ActionType\");\n  var _PressabilityDebugView = require(_dependencyMap[15], \"./PressabilityDebugView\");\n  var _GestureHandlerRootViewContext = require(_dependencyMap[16], \"../GestureHandlerRootViewContext\");\n  var GestureHandlerRootViewContext = _interopDefault(_GestureHandlerRootViewContext);\n  var _ghQueueMicrotask = require(_dependencyMap[17], \"../ghQueueMicrotask\");\n  var _mountRegistry = require(_dependencyMap[18], \"../mountRegistry\");\n  var _reactJsxDevRuntime = require(_dependencyMap[19], \"react/jsx-dev-runtime\");\n  var UIManagerAny = _reactNative.UIManager;\n  _customDirectEventTypes.customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, _utils2.isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [_State.State.UNDETERMINED]: undefined,\n    [_State.State.BEGAN]: 'onBegan',\n    [_State.State.FAILED]: 'onFailed',\n    [_State.State.CANCELLED]: 'onCancelled',\n    [_State.State.ACTIVE]: 'onActivated',\n    [_State.State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck.default)(this, Handler);\n        _this = (0, _callSuper.default)(this, Handler, [props]);\n        _this.handlerTag = -1;\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _utils2.isReact19)() ? child.props?.ref : child?.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.handlerTag = (0, _getNextHandlerTag.getNextHandlerTag)();\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _ActionType.ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _handlersRegistry.registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _ActionType.ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _ActionType.ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _ActionType.ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _utils.scheduleFlushOperations)();\n          (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n            _mountRegistry.MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _utils.scheduleFlushOperations)();\n        };\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (_handlersRegistry.handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _handlersRegistry.handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits.default)(Handler, _React$Component);\n      return (0, _createClass.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n              this.setState(_ => ({\n                allowTouches\n              }));\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _handlersRegistry.unregisterOldGestureHandler)(this.handlerTag);\n          }\n          RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _utils.scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _handlersRegistry.handlerIDToTag[handlerID];\n          }\n          _mountRegistry.MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _ghQueueMicrotask.ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, _utils2.deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n\n        // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, _utils.filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (__DEV__ && !this.context && !(0, _utils2.isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _utils2.tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_PressabilityDebugView.PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, _utils2.isTestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":444,"map":[[22,2,169,15,"Object"],[22,8,169,15],[22,9,169,15,"defineProperty"],[22,23,169,15],[22,24,169,15,"exports"],[22,31,169,15],[23,4,169,15,"enumerable"],[23,14,169,15],[24,4,169,15,"get"],[24,7,169,15],[24,18,169,15,"get"],[24,19,169,15],[25,6,169,15],[25,13,169,15,"createHandler"],[25,26,169,15],[26,4,169,15],[27,2,169,15],[28,2,572,1],[28,6,572,1,"_babelRuntimeHelpersClassCallCheck"],[28,40,572,1],[28,43,572,1,"require"],[28,50,572,1],[28,51,572,1,"_dependencyMap"],[28,65,572,1],[29,2,572,1],[29,6,572,1,"_classCallCheck"],[29,21,572,1],[29,24,572,1,"_interopDefault"],[29,39,572,1],[29,40,572,1,"_babelRuntimeHelpersClassCallCheck"],[29,74,572,1],[30,2,572,1],[30,6,572,1,"_babelRuntimeHelpersCreateClass"],[30,37,572,1],[30,40,572,1,"require"],[30,47,572,1],[30,48,572,1,"_dependencyMap"],[30,62,572,1],[31,2,572,1],[31,6,572,1,"_createClass"],[31,18,572,1],[31,21,572,1,"_interopDefault"],[31,36,572,1],[31,37,572,1,"_babelRuntimeHelpersCreateClass"],[31,68,572,1],[32,2,572,1],[32,6,572,1,"_babelRuntimeHelpersCallSuper"],[32,35,572,1],[32,38,572,1,"require"],[32,45,572,1],[32,46,572,1,"_dependencyMap"],[32,60,572,1],[33,2,572,1],[33,6,572,1,"_callSuper"],[33,16,572,1],[33,19,572,1,"_interopDefault"],[33,34,572,1],[33,35,572,1,"_babelRuntimeHelpersCallSuper"],[33,64,572,1],[34,2,572,1],[34,6,572,1,"_babelRuntimeHelpersInherits"],[34,34,572,1],[34,37,572,1,"require"],[34,44,572,1],[34,45,572,1,"_dependencyMap"],[34,59,572,1],[35,2,572,1],[35,6,572,1,"_inherits"],[35,15,572,1],[35,18,572,1,"_interopDefault"],[35,33,572,1],[35,34,572,1,"_babelRuntimeHelpersInherits"],[35,62,572,1],[36,2,1,0],[36,6,1,0,"_react"],[36,12,1,0],[36,15,1,0,"require"],[36,22,1,0],[36,23,1,0,"_dependencyMap"],[36,37,1,0],[37,2,1,0],[37,6,1,0,"React"],[37,11,1,0],[37,14,1,0,"_interopNamespace"],[37,31,1,0],[37,32,1,0,"_react"],[37,38,1,0],[38,2,2,0],[38,6,2,0,"_reactNative"],[38,18,2,0],[38,21,2,0,"require"],[38,28,2,0],[38,29,2,0,"_dependencyMap"],[38,43,2,0],[39,2,8,0],[39,6,8,0,"_customDirectEventTypes"],[39,29,8,0],[39,32,8,0,"require"],[39,39,8,0],[39,40,8,0,"_dependencyMap"],[39,54,8,0],[40,2,9,0],[40,6,9,0,"_RNGestureHandlerModule"],[40,29,9,0],[40,32,9,0,"require"],[40,39,9,0],[40,40,9,0,"_dependencyMap"],[40,54,9,0],[41,2,9,0],[41,6,9,0,"RNGestureHandlerModule"],[41,28,9,0],[41,31,9,0,"_interopDefault"],[41,46,9,0],[41,47,9,0,"_RNGestureHandlerModule"],[41,70,9,0],[42,2,10,0],[42,6,10,0,"_State"],[42,12,10,0],[42,15,10,0,"require"],[42,22,10,0],[42,23,10,0,"_dependencyMap"],[42,37,10,0],[43,2,11,0],[43,6,11,0,"_handlersRegistry"],[43,23,11,0],[43,26,11,0,"require"],[43,33,11,0],[43,34,11,0,"_dependencyMap"],[43,48,11,0],[44,2,16,0],[44,6,16,0,"_getNextHandlerTag"],[44,24,16,0],[44,27,16,0,"require"],[44,34,16,0],[44,35,16,0,"_dependencyMap"],[44,49,16,0],[45,2,23,0],[45,6,23,0,"_utils"],[45,12,23,0],[45,15,23,0,"require"],[45,22,23,0],[45,23,23,0,"_dependencyMap"],[45,37,23,0],[46,2,24,0],[46,6,24,0,"_findNodeHandle"],[46,21,24,0],[46,24,24,0,"require"],[46,31,24,0],[46,32,24,0,"_dependencyMap"],[46,46,24,0],[47,2,24,0],[47,6,24,0,"findNodeHandle"],[47,20,24,0],[47,23,24,0,"_interopDefault"],[47,38,24,0],[47,39,24,0,"_findNodeHandle"],[47,54,24,0],[48,2,26,0],[48,6,26,0,"_utils2"],[48,13,26,0],[48,16,26,0,"require"],[48,23,26,0],[48,24,26,0,"_dependencyMap"],[48,38,26,0],[49,2,33,0],[49,6,33,0,"_ActionType"],[49,17,33,0],[49,20,33,0,"require"],[49,27,33,0],[49,28,33,0,"_dependencyMap"],[49,42,33,0],[50,2,34,0],[50,6,34,0,"_PressabilityDebugView"],[50,28,34,0],[50,31,34,0,"require"],[50,38,34,0],[50,39,34,0,"_dependencyMap"],[50,53,34,0],[51,2,35,0],[51,6,35,0,"_GestureHandlerRootViewContext"],[51,36,35,0],[51,39,35,0,"require"],[51,46,35,0],[51,47,35,0,"_dependencyMap"],[51,61,35,0],[52,2,35,0],[52,6,35,0,"GestureHandlerRootViewContext"],[52,35,35,0],[52,38,35,0,"_interopDefault"],[52,53,35,0],[52,54,35,0,"_GestureHandlerRootViewContext"],[52,84,35,0],[53,2,36,0],[53,6,36,0,"_ghQueueMicrotask"],[53,23,36,0],[53,26,36,0,"require"],[53,33,36,0],[53,34,36,0,"_dependencyMap"],[53,48,36,0],[54,2,37,0],[54,6,37,0,"_mountRegistry"],[54,20,37,0],[54,23,37,0,"require"],[54,30,37,0],[54,31,37,0,"_dependencyMap"],[54,45,37,0],[55,2,37,49],[55,6,37,49,"_reactJsxDevRuntime"],[55,25,37,49],[55,28,37,49,"require"],[55,35,37,49],[55,36,37,49,"_dependencyMap"],[55,50,37,49],[56,2,40,0],[56,6,40,6,"UIManagerAny"],[56,18,40,18],[56,21,40,21,"UIManager"],[56,33,40,30],[56,34,40,30,"UIManager"],[56,43,40,37],[57,2,42,0,"customDirectEventTypes"],[57,25,42,22],[57,26,42,22,"customDirectEventTypes"],[57,48,42,22],[57,49,42,23,"topGestureHandlerEvent"],[57,71,42,45],[57,74,42,48],[58,4,43,2,"registrationName"],[58,20,43,18],[58,22,43,20],[59,2,44,0],[59,3,44,1],[60,2,46,0],[60,6,46,6,"customGHEventsConfigFabricAndroid"],[60,39,46,39],[60,42,46,42],[61,4,47,2,"topOnGestureHandlerEvent"],[61,28,47,26],[61,30,47,28],[62,6,47,30,"registrationName"],[62,22,47,46],[62,24,47,48],[63,4,47,72],[63,5,47,73],[64,4,48,2,"topOnGestureHandlerStateChange"],[64,34,48,32],[64,36,48,34],[65,6,49,4,"registrationName"],[65,22,49,20],[65,24,49,22],[66,4,50,2],[67,2,51,0],[67,3,51,1],[68,2,53,0],[68,6,53,6,"customGHEventsConfig"],[68,26,53,26],[68,29,53,29],[69,4,54,2,"onGestureHandlerEvent"],[69,25,54,23],[69,27,54,25],[70,6,54,27,"registrationName"],[70,22,54,43],[70,24,54,45],[71,4,54,69],[71,5,54,70],[72,4,55,2,"onGestureHandlerStateChange"],[72,31,55,29],[72,33,55,31],[73,6,56,4,"registrationName"],[73,22,56,20],[73,24,56,22],[74,4,57,2],[74,5,57,3],[75,4,59,2],[76,4,60,2],[77,4,61,2],[78,4,62,2],[79,4,63,2],[80,4,64,2],[81,4,65,2],[82,4,66,2],[83,4,67,2],[83,8,67,6],[83,12,67,6,"isFabric"],[83,19,67,14],[83,20,67,14,"isFabric"],[83,28,67,14],[83,30,67,15],[83,31,67,16],[83,35,68,4,"Platform"],[83,47,68,12],[83,48,68,12,"Platform"],[83,56,68,12],[83,57,68,13,"OS"],[83,59,68,15],[83,64,68,20],[83,73,68,29],[83,77,69,4,"customGHEventsConfigFabricAndroid"],[83,110,69,37],[84,2,70,0],[84,3,70,1],[86,2,72,0],[87,2,73,0],[88,2,74,0],[89,2,75,0],[90,2,76,0,"UIManagerAny"],[90,14,76,12],[90,15,76,13,"genericDirectEventTypes"],[90,38,76,36],[90,41,76,39],[91,4,77,2],[91,7,77,5,"UIManagerAny"],[91,19,77,17],[91,20,77,18,"genericDirectEventTypes"],[91,43,77,41],[92,4,78,2],[92,7,78,5,"customGHEventsConfig"],[93,2,79,0],[93,3,79,1],[94,2,81,0],[94,6,81,6,"UIManagerConstants"],[94,24,81,24],[94,27,81,27,"UIManagerAny"],[94,39,81,39],[94,40,81,40,"getViewManagerConfig"],[94,60,81,60],[94,63,81,63],[94,77,81,77],[94,78,81,78],[95,2,83,0],[95,6,83,4,"UIManagerConstants"],[95,24,83,22],[95,26,83,24],[96,4,84,2,"UIManagerConstants"],[96,22,84,20],[96,23,84,21,"genericDirectEventTypes"],[96,46,84,44],[96,49,84,47],[97,6,85,4],[97,9,85,7,"UIManagerConstants"],[97,27,85,25],[97,28,85,26,"genericDirectEventTypes"],[97,51,85,49],[98,6,86,4],[98,9,86,7,"customGHEventsConfig"],[99,4,87,2],[99,5,87,3],[100,2,88,0],[102,2,90,0],[103,2,91,0],[103,6,91,0,"_UIManagerAny$setJSRe"],[103,27,91,0],[103,30,98,4,"UIManagerAny"],[103,42,98,16],[103,43,92,2,"setJSResponder"],[103,57,92,16],[104,4,92,18,"oldSetJSResponder"],[104,21,92,35],[104,24,92,35,"_UIManagerAny$setJSRe"],[104,45,92,35],[104,59,92,38],[104,65,92,44],[105,6,93,4],[106,4,93,4],[106,5,94,3],[106,8,94,3,"_UIManagerAny$setJSRe"],[106,29,94,3],[107,4,94,3,"_UIManagerAny$clearJS"],[107,25,94,3],[107,28,98,4,"UIManagerAny"],[107,40,98,16],[107,41,95,2,"clearJSResponder"],[107,57,95,18],[108,4,95,20,"oldClearJSResponder"],[108,23,95,39],[108,26,95,39,"_UIManagerAny$clearJS"],[108,47,95,39],[108,61,95,42],[108,67,95,48],[109,6,96,4],[110,4,96,4],[110,5,97,3],[110,8,97,3,"_UIManagerAny$clearJS"],[110,29,97,3],[111,2,99,0,"UIManagerAny"],[111,14,99,12],[111,15,99,13,"setJSResponder"],[111,29,99,27],[111,32,99,30],[111,33,99,31,"tag"],[111,36,99,42],[111,38,99,44,"blockNativeResponder"],[111,58,99,73],[111,63,99,78],[112,4,100,2,"RNGestureHandlerModule"],[112,26,100,24],[112,27,100,24,"default"],[112,34,100,24],[112,35,100,25,"handleSetJSResponder"],[112,55,100,45],[112,56,100,46,"tag"],[112,59,100,49],[112,61,100,51,"blockNativeResponder"],[112,81,100,71],[112,82,100,72],[113,4,101,2,"oldSetJSResponder"],[113,21,101,19],[113,22,101,20,"tag"],[113,25,101,23],[113,27,101,25,"blockNativeResponder"],[113,47,101,45],[113,48,101,46],[114,2,102,0],[114,3,102,1],[115,2,103,0,"UIManagerAny"],[115,14,103,12],[115,15,103,13,"clearJSResponder"],[115,31,103,29],[115,34,103,32],[115,40,103,38],[116,4,104,2,"RNGestureHandlerModule"],[116,26,104,24],[116,27,104,24,"default"],[116,34,104,24],[116,35,104,25,"handleClearJSResponder"],[116,57,104,47],[116,58,104,48],[116,59,104,49],[117,4,105,2,"oldClearJSResponder"],[117,23,105,21],[117,24,105,22],[117,25,105,23],[118,2,106,0],[118,3,106,1],[119,2,108,0],[119,6,108,4,"allowTouches"],[119,18,108,16],[119,21,108,19],[119,25,108,23],[120,2,109,0],[120,6,109,6,"DEV_ON_ANDROID"],[120,20,109,20],[120,23,109,23,"__DEV__"],[120,30,109,30],[120,34,109,34,"Platform"],[120,46,109,42],[120,47,109,42,"Platform"],[120,55,109,42],[120,56,109,43,"OS"],[120,58,109,45],[120,63,109,50],[120,72,109,59],[121,2,110,0],[122,2,111,0],[123,2,112,0],[123,6,112,4,"DEV_ON_ANDROID"],[123,20,112,18],[123,22,112,20],[124,4,113,2,"DeviceEventEmitter"],[124,16,113,20],[124,17,113,20,"DeviceEventEmitter"],[124,35,113,20],[124,36,113,21,"addListener"],[124,47,113,32],[124,48,113,33],[124,72,113,57],[124,74,113,59],[124,80,113,65],[125,6,114,4,"allowTouches"],[125,18,114,16],[125,21,114,19],[125,22,114,20,"allowTouches"],[125,34,114,32],[126,4,115,2],[126,5,115,3],[126,6,115,4],[127,2,116,0],[128,2,121,0],[128,11,121,9,"hasUnresolvedRefs"],[128,28,121,26,"hasUnresolvedRefs"],[128,29,122,2,"props"],[128,34,122,24],[128,36,123,2],[129,4,124,2],[130,4,125,2],[130,8,125,8,"extract"],[130,15,125,15],[130,18,125,19,"refs"],[130,22,125,36],[130,26,125,41],[131,6,126,4],[131,10,126,8],[131,11,126,9,"Array"],[131,16,126,14],[131,17,126,15,"isArray"],[131,24,126,22],[131,25,126,23,"refs"],[131,29,126,27],[131,30,126,28],[131,32,126,30],[132,8,127,6],[132,15,127,13,"refs"],[132,19,127,17],[132,23,127,21,"refs"],[132,27,127,25],[132,28,127,26,"current"],[132,35,127,33],[132,40,127,38],[132,44,127,42],[133,6,128,4],[134,6,129,4],[134,13,129,11,"refs"],[134,17,129,15],[134,18,129,16,"some"],[134,22,129,20],[134,23,129,22,"r"],[134,24,129,23],[134,28,129,28,"r"],[134,29,129,29],[134,33,129,33,"r"],[134,34,129,34],[134,35,129,35,"current"],[134,42,129,42],[134,47,129,47],[134,51,129,51],[134,52,129,52],[135,4,130,2],[135,5,130,3],[136,4,131,2],[136,11,131,9,"extract"],[136,18,131,16],[136,19,131,17,"props"],[136,24,131,22],[136,25,131,23],[136,47,131,45],[136,48,131,46],[136,49,131,47],[136,53,131,51,"extract"],[136,60,131,58],[136,61,131,59,"props"],[136,66,131,64],[136,67,131,65],[136,76,131,74],[136,77,131,75],[136,78,131,76],[137,2,132,0],[138,2,134,0],[138,6,134,6,"stateToPropMappings"],[138,25,134,25],[138,28,134,28],[139,4,135,2],[139,5,135,3,"State"],[139,11,135,8],[139,12,135,8,"State"],[139,17,135,8],[139,18,135,9,"UNDETERMINED"],[139,30,135,21],[139,33,135,24,"undefined"],[139,42,135,33],[140,4,136,2],[140,5,136,3,"State"],[140,11,136,8],[140,12,136,8,"State"],[140,17,136,8],[140,18,136,9,"BEGAN"],[140,23,136,14],[140,26,136,17],[140,35,136,26],[141,4,137,2],[141,5,137,3,"State"],[141,11,137,8],[141,12,137,8,"State"],[141,17,137,8],[141,18,137,9,"FAILED"],[141,24,137,15],[141,27,137,18],[141,37,137,28],[142,4,138,2],[142,5,138,3,"State"],[142,11,138,8],[142,12,138,8,"State"],[142,17,138,8],[142,18,138,9,"CANCELLED"],[142,27,138,18],[142,30,138,21],[142,43,138,34],[143,4,139,2],[143,5,139,3,"State"],[143,11,139,8],[143,12,139,8,"State"],[143,17,139,8],[143,18,139,9,"ACTIVE"],[143,24,139,15],[143,27,139,18],[143,40,139,31],[144,4,140,2],[144,5,140,3,"State"],[144,11,140,8],[144,12,140,8,"State"],[144,17,140,8],[144,18,140,9,"END"],[144,21,140,12],[144,24,140,15],[145,2,141,0],[145,3,141,10],[147,2,152,0],[149,2,166,0],[149,6,166,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[149,33,166,33],[149,36,166,36],[149,37,166,37],[151,2,168,0],[152,2,169,15],[152,11,169,24,"createHandler"],[152,24,169,37,"createHandler"],[152,25,169,37,"_ref"],[152,29,169,37],[152,31,178,76],[153,4,178,76],[153,8,173,2,"name"],[153,12,173,6],[153,15,173,6,"_ref"],[153,19,173,6],[153,20,173,2,"name"],[153,24,173,6],[154,6,173,6,"_ref$allowedProps"],[154,23,173,6],[154,26,173,6,"_ref"],[154,30,173,6],[154,31,174,2,"allowedProps"],[154,43,174,14],[155,6,174,2,"allowedProps"],[155,18,174,14],[155,21,174,14,"_ref$allowedProps"],[155,38,174,14],[155,52,174,17],[155,54,174,19],[155,57,174,19,"_ref$allowedProps"],[155,74,174,19],[156,6,174,19,"_ref$config"],[156,17,174,19],[156,20,174,19,"_ref"],[156,24,174,19],[156,25,175,2,"config"],[156,31,175,8],[157,6,175,2,"config"],[157,12,175,8],[157,15,175,8,"_ref$config"],[157,26,175,8],[157,40,175,11],[157,41,175,12],[157,42,175,13],[157,45,175,13,"_ref$config"],[157,56,175,13],[158,6,176,2,"transformProps"],[158,20,176,16],[158,23,176,16,"_ref"],[158,27,176,16],[158,28,176,2,"transformProps"],[158,42,176,16],[159,6,176,16,"_ref$customNativeProp"],[159,27,176,16],[159,30,176,16,"_ref"],[159,34,176,16],[159,35,177,2,"customNativeProps"],[159,52,177,19],[160,6,177,2,"customNativeProps"],[160,23,177,19],[160,26,177,19,"_ref$customNativeProp"],[160,47,177,19],[160,61,177,22],[160,63,177,24],[160,66,177,24,"_ref$customNativeProp"],[160,87,177,24],[161,4,177,24],[161,8,182,8,"Handler"],[161,15,182,15],[161,41,182,15,"_React$Component"],[161,57,182,15],[162,6,197,4],[162,15,197,4,"Handler"],[162,23,197,16,"props"],[162,28,197,48],[162,30,197,50],[163,8,197,50],[163,12,197,50,"_this"],[163,17,197,50],[164,8,197,50],[164,12,197,50,"_classCallCheck"],[164,27,197,50],[164,28,197,50,"default"],[164,35,197,50],[164,43,197,50,"Handler"],[164,50,197,50],[165,8,198,6,"_this"],[165,13,198,6],[165,20,198,6,"_callSuper"],[165,30,198,6],[165,31,198,6,"default"],[165,38,198,6],[165,46,198,6,"Handler"],[165,53,198,6],[165,56,198,12,"props"],[165,61,198,17],[166,8,198,19,"_this"],[166,13,198,19],[166,14,189,12,"handlerTag"],[166,24,189,22],[166,27,189,25],[166,28,189,26],[166,29,189,27],[167,8,189,27,"_this"],[167,13,189,27],[167,14,279,12,"onGestureHandlerEvent"],[167,35,279,33],[167,38,279,37,"event"],[167,43,279,59],[167,47,279,64],[168,10,280,6],[168,14,280,10,"event"],[168,19,280,15],[168,20,280,16,"nativeEvent"],[168,31,280,27],[168,32,280,28,"handlerTag"],[168,42,280,38],[168,47,280,43,"_this"],[168,52,280,43],[168,53,280,48,"handlerTag"],[168,63,280,58],[168,65,280,60],[169,12,281,8],[169,16,281,12],[169,23,281,19,"_this"],[169,28,281,19],[169,29,281,24,"props"],[169,34,281,29],[169,35,281,30,"onGestureEvent"],[169,49,281,44],[169,54,281,49],[169,64,281,59],[169,66,281,61],[170,14,282,10,"_this"],[170,19,282,10],[170,20,282,15,"props"],[170,25,282,20],[170,26,282,21,"onGestureEvent"],[170,40,282,35],[170,43,282,38,"event"],[170,48,282,43],[170,49,282,44],[171,12,283,8],[172,10,284,6],[172,11,284,7],[172,17,284,13],[173,12,285,8,"_this"],[173,17,285,8],[173,18,285,13,"props"],[173,23,285,18],[173,24,285,19,"onGestureHandlerEvent"],[173,45,285,40],[173,48,285,43,"event"],[173,53,285,48],[173,54,285,49],[174,10,286,6],[175,8,287,4],[175,9,287,5],[176,8,289,4],[177,8,289,4,"_this"],[177,13,289,4],[177,14,290,12,"onGestureHandlerStateChange"],[177,41,290,39],[177,44,291,6,"event"],[177,49,291,39],[177,53,292,9],[178,10,293,6],[178,14,293,10,"event"],[178,19,293,15],[178,20,293,16,"nativeEvent"],[178,31,293,27],[178,32,293,28,"handlerTag"],[178,42,293,38],[178,47,293,43,"_this"],[178,52,293,43],[178,53,293,48,"handlerTag"],[178,63,293,58],[178,65,293,60],[179,12,294,8],[179,16,294,12],[179,23,294,19,"_this"],[179,28,294,19],[179,29,294,24,"props"],[179,34,294,29],[179,35,294,30,"onHandlerStateChange"],[179,55,294,50],[179,60,294,55],[179,70,294,65],[179,72,294,67],[180,14,295,10,"_this"],[180,19,295,10],[180,20,295,15,"props"],[180,25,295,20],[180,26,295,21,"onHandlerStateChange"],[180,46,295,41],[180,49,295,44,"event"],[180,54,295,49],[180,55,295,50],[181,12,296,8],[182,12,298,8],[182,16,298,14,"state"],[182,21,298,42],[182,24,298,45,"event"],[182,29,298,50],[182,30,298,51,"nativeEvent"],[182,41,298,62],[182,42,298,63,"state"],[182,47,298,68],[183,12,299,8],[183,16,299,14,"stateEventName"],[183,30,299,28],[183,33,299,31,"stateToPropMappings"],[183,52,299,50],[183,53,299,51,"state"],[183,58,299,56],[183,59,299,57],[184,12,300,8],[184,16,300,14,"eventHandler"],[184,28,300,26],[184,31,300,29,"stateEventName"],[184,45,300,43],[184,49,300,47,"_this"],[184,54,300,47],[184,55,300,52,"props"],[184,60,300,57],[184,61,300,58,"stateEventName"],[184,75,300,72],[184,76,300,73],[185,12,301,8],[185,16,301,12,"eventHandler"],[185,28,301,24],[185,32,301,28],[185,39,301,35,"eventHandler"],[185,51,301,47],[185,56,301,52],[185,66,301,62],[185,68,301,64],[186,14,302,10,"eventHandler"],[186,26,302,22],[186,27,302,23,"event"],[186,32,302,28],[186,33,302,29],[187,12,303,8],[188,10,304,6],[188,11,304,7],[188,17,304,13],[189,12,305,8,"_this"],[189,17,305,8],[189,18,305,13,"props"],[189,23,305,18],[189,24,305,19,"onGestureHandlerStateChange"],[189,51,305,46],[189,54,305,49,"event"],[189,59,305,54],[189,60,305,55],[190,10,306,6],[191,8,307,4],[191,9,307,5],[192,8,307,5,"_this"],[192,13,307,5],[192,14,309,12,"refHandler"],[192,24,309,22],[192,27,309,26,"node"],[192,31,309,35],[192,35,309,40],[193,10,310,6,"_this"],[193,15,310,6],[193,16,310,11,"viewNode"],[193,24,310,19],[193,27,310,22,"node"],[193,31,310,26],[194,10,312,6],[194,14,312,12,"child"],[194,19,312,17],[194,22,312,20,"React"],[194,27,312,25],[194,28,312,26,"Children"],[194,36,312,34],[194,37,312,35,"only"],[194,41,312,39],[194,42,312,40,"_this"],[194,47,312,40],[194,48,312,45,"props"],[194,53,312,50],[194,54,312,51,"children"],[194,62,312,59],[194,63,312,60],[195,10,313,6],[196,10,314,6],[197,10,315,6],[197,14,315,12,"ref"],[197,17,315,15],[197,20,315,18],[197,24,315,18,"isReact19"],[197,31,315,27],[197,32,315,27,"isReact19"],[197,41,315,27],[197,43,315,28],[197,44,315,29],[197,47,315,33,"child"],[197,52,315,38],[197,53,315,56,"props"],[197,58,315,61],[197,60,315,63,"ref"],[197,63,315,66],[197,66,315,69,"child"],[197,71,315,74],[197,73,315,76,"ref"],[197,76,315,79],[198,10,317,6],[198,14,317,10],[198,15,317,11,"ref"],[198,18,317,14],[198,20,317,16],[199,12,318,8],[200,10,319,6],[201,10,321,6],[201,14,321,10],[201,21,321,17,"ref"],[201,24,321,20],[201,29,321,25],[201,39,321,35],[201,41,321,37],[202,12,322,8,"ref"],[202,15,322,11],[202,16,322,12,"node"],[202,20,322,16],[202,21,322,17],[203,10,323,6],[203,11,323,7],[203,17,323,13],[204,12,324,8,"ref"],[204,15,324,11],[204,16,324,12,"current"],[204,23,324,19],[204,26,324,22,"node"],[204,30,324,26],[205,10,325,6],[206,8,326,4],[206,9,326,5],[207,8,326,5,"_this"],[207,13,326,5],[207,14,328,12,"createGestureHandler"],[207,34,328,32],[207,37,329,6,"newConfig"],[207,46,329,50],[207,50,330,9],[208,10,331,6,"_this"],[208,15,331,6],[208,16,331,11,"handlerTag"],[208,26,331,21],[208,29,331,24],[208,33,331,24,"getNextHandlerTag"],[208,51,331,41],[208,52,331,41,"getNextHandlerTag"],[208,69,331,41],[208,71,331,42],[208,72,331,43],[209,10,332,6,"_this"],[209,15,332,6],[209,16,332,11,"config"],[209,22,332,17],[209,25,332,20,"newConfig"],[209,34,332,29],[210,10,334,6,"RNGestureHandlerModule"],[210,32,334,28],[210,33,334,28,"default"],[210,40,334,28],[210,41,334,29,"createGestureHandler"],[210,61,334,49],[210,62,335,8,"name"],[210,66,335,12],[210,68,336,8,"_this"],[210,73,336,8],[210,74,336,13,"handlerTag"],[210,84,336,23],[210,86,337,8,"newConfig"],[210,95,338,6],[210,96,338,7],[211,8,339,4],[211,9,339,5],[212,8,339,5,"_this"],[212,13,339,5],[212,14,341,12,"attachGestureHandler"],[212,34,341,32],[212,37,341,36,"newViewTag"],[212,47,341,54],[212,51,341,59],[213,10,342,6,"_this"],[213,15,342,6],[213,16,342,11,"viewTag"],[213,23,342,18],[213,26,342,21,"newViewTag"],[213,36,342,31],[214,10,344,6],[214,14,344,10,"Platform"],[214,26,344,18],[214,27,344,18,"Platform"],[214,35,344,18],[214,36,344,19,"OS"],[214,38,344,21],[214,43,344,26],[214,48,344,31],[214,50,344,33],[215,12,345,8],[216,12,347,10,"RNGestureHandlerModule"],[216,34,347,32],[216,35,347,32,"default"],[216,42,347,32],[216,43,347,33,"attachGestureHandler"],[216,63,347,53],[216,64,349,10,"_this"],[216,69,349,10],[216,70,349,15,"handlerTag"],[216,80,349,25],[216,82,350,10,"newViewTag"],[216,92,350,20],[216,94,351,10,"ActionType"],[216,105,351,20],[216,106,351,20,"ActionType"],[216,116,351,20],[216,117,351,21,"JS_FUNCTION_OLD_API"],[216,136,351,40],[217,12,351,42],[218,12,352,10,"_this"],[218,17,352,10],[218,18,352,15,"propsRef"],[218,26,353,8],[218,27,353,9],[219,10,354,6],[219,11,354,7],[219,17,354,13],[220,12,355,8],[220,16,355,8,"registerOldGestureHandler"],[220,33,355,33],[220,34,355,33,"registerOldGestureHandler"],[220,59,355,33],[220,61,355,34,"_this"],[220,66,355,34],[220,67,355,39,"handlerTag"],[220,77,355,49],[220,79,355,51],[221,14,356,10,"onGestureEvent"],[221,28,356,24],[221,30,356,26,"_this"],[221,35,356,26],[221,36,356,31,"onGestureHandlerEvent"],[221,57,356,52],[222,14,357,10,"onGestureStateChange"],[222,34,357,30],[222,36,357,32,"_this"],[222,41,357,32],[222,42,357,37,"onGestureHandlerStateChange"],[223,12,358,8],[223,13,358,9],[223,14,358,10],[224,12,360,8],[224,16,360,14,"actionType"],[224,26,360,24],[224,29,360,27],[224,30,360,28],[224,36,360,34],[225,14,361,10],[225,18,361,16,"onGestureEvent"],[225,32,361,30],[225,35,361,33,"_this"],[225,40,361,33],[225,41,361,38,"props"],[225,46,361,43],[225,48,361,45,"onGestureEvent"],[225,62,361,59],[226,14,362,10],[226,18,362,16,"isGestureHandlerWorklet"],[226,41,362,39],[226,44,363,12,"onGestureEvent"],[226,58,363,26],[226,63,364,13],[226,72,364,22],[226,76,364,26,"onGestureEvent"],[226,90,364,40],[226,94,365,14],[226,115,365,35],[226,119,365,39,"onGestureEvent"],[226,133,365,53],[226,134,365,54],[227,14,366,10],[227,18,366,16,"onHandlerStateChange"],[227,38,366,36],[227,41,366,39,"_this"],[227,46,366,39],[227,47,366,44,"props"],[227,52,366,49],[227,54,366,51,"onHandlerStateChange"],[227,74,366,71],[228,14,367,10],[228,18,367,16,"isStateChangeHandlerWorklet"],[228,45,367,43],[228,48,368,12,"onHandlerStateChange"],[228,68,368,32],[228,73,369,13],[228,82,369,22],[228,86,369,26,"onHandlerStateChange"],[228,106,369,46],[228,110,370,14],[228,131,370,35],[228,135,370,39,"onHandlerStateChange"],[228,155,370,59],[228,156,370,60],[229,14,371,10],[229,18,371,16,"isReanimatedHandler"],[229,37,371,35],[229,40,372,12,"isGestureHandlerWorklet"],[229,63,372,35],[229,67,372,39,"isStateChangeHandlerWorklet"],[229,94,372,66],[230,14,373,10],[230,18,373,14,"isReanimatedHandler"],[230,37,373,33],[230,39,373,35],[231,16,374,12],[232,16,375,12],[232,23,375,19,"ActionType"],[232,34,375,29],[232,35,375,29,"ActionType"],[232,45,375,29],[232,46,375,30,"REANIMATED_WORKLET"],[232,64,375,48],[233,14,376,10],[233,15,376,11],[233,21,376,17],[233,25,376,21,"onGestureEvent"],[233,39,376,35],[233,43,376,39],[233,55,376,51],[233,59,376,55,"onGestureEvent"],[233,73,376,69],[233,75,376,71],[234,16,377,12],[235,16,378,12],[235,23,378,19,"ActionType"],[235,34,378,29],[235,35,378,29,"ActionType"],[235,45,378,29],[235,46,378,30,"NATIVE_ANIMATED_EVENT"],[235,67,378,51],[236,14,379,10],[236,15,379,11],[236,21,379,17],[237,16,380,12],[238,16,381,12],[238,23,381,19,"ActionType"],[238,34,381,29],[238,35,381,29,"ActionType"],[238,45,381,29],[238,46,381,30,"JS_FUNCTION_OLD_API"],[238,65,381,49],[239,14,382,10],[240,12,383,8],[240,13,383,9],[240,15,383,11],[240,16,383,12],[241,12,385,8,"RNGestureHandlerModule"],[241,34,385,30],[241,35,385,30,"default"],[241,42,385,30],[241,43,385,31,"attachGestureHandler"],[241,63,385,51],[241,64,386,10,"_this"],[241,69,386,10],[241,70,386,15,"handlerTag"],[241,80,386,25],[241,82,387,10,"newViewTag"],[241,92,387,20],[241,94,388,10,"actionType"],[241,104,389,8],[241,105,389,9],[242,10,390,6],[243,10,392,6],[243,14,392,6,"scheduleFlushOperations"],[243,20,392,29],[243,21,392,29,"scheduleFlushOperations"],[243,44,392,29],[243,46,392,30],[243,47,392,31],[244,10,394,6],[244,14,394,6,"ghQueueMicrotask"],[244,31,394,22],[244,32,394,22,"ghQueueMicrotask"],[244,48,394,22],[244,50,394,23],[244,56,394,29],[245,12,395,8,"MountRegistry"],[245,26,395,21],[245,27,395,21,"MountRegistry"],[245,40,395,21],[245,41,395,22,"gestureHandlerWillMount"],[245,64,395,45],[245,65,395,45,"_this"],[245,70,395,50],[245,71,395,51],[246,10,396,6],[246,11,396,7],[246,12,396,8],[247,8,397,4],[247,9,397,5],[248,8,397,5,"_this"],[248,13,397,5],[248,14,399,12,"updateGestureHandler"],[248,34,399,32],[248,37,400,6,"newConfig"],[248,46,400,50],[248,50,401,9],[249,10,402,6,"_this"],[249,15,402,6],[249,16,402,11,"config"],[249,22,402,17],[249,25,402,20,"newConfig"],[249,34,402,29],[250,10,404,6,"RNGestureHandlerModule"],[250,32,404,28],[250,33,404,28,"default"],[250,40,404,28],[250,41,404,29,"updateGestureHandler"],[250,61,404,49],[250,62,404,50,"_this"],[250,67,404,50],[250,68,404,55,"handlerTag"],[250,78,404,65],[250,80,404,67,"newConfig"],[250,89,404,76],[250,90,404,77],[251,10,405,6],[251,14,405,6,"scheduleFlushOperations"],[251,20,405,29],[251,21,405,29,"scheduleFlushOperations"],[251,44,405,29],[251,46,405,30],[251,47,405,31],[252,8,406,4],[252,9,406,5],[253,8,199,6,"_this"],[253,13,199,6],[253,14,199,11,"config"],[253,20,199,17],[253,23,199,20],[253,24,199,21],[253,25,199,22],[254,8,200,6,"_this"],[254,13,200,6],[254,14,200,11,"propsRef"],[254,22,200,19],[254,38,200,22,"React"],[254,43,200,27],[254,44,200,28,"createRef"],[254,53,200,37],[254,54,200,38],[254,55,200,39],[255,8,201,6,"_this"],[255,13,201,6],[255,14,201,11,"isMountedRef"],[255,26,201,23],[255,42,201,26,"React"],[255,47,201,31],[255,48,201,32,"createRef"],[255,57,201,41],[255,58,201,42],[255,59,201,43],[256,8,202,6,"_this"],[256,13,202,6],[256,14,202,11,"state"],[256,19,202,16],[256,22,202,19],[257,10,202,21,"allowTouches"],[258,8,202,34],[258,9,202,35],[259,8,203,6],[259,12,203,10,"props"],[259,17,203,15],[259,18,203,16,"id"],[259,20,203,18],[259,22,203,20],[260,10,204,8],[260,14,204,12,"handlerIDToTag"],[260,31,204,26],[260,32,204,26,"handlerIDToTag"],[260,46,204,26],[260,47,204,27,"props"],[260,52,204,32],[260,53,204,33,"id"],[260,55,204,35],[260,56,204,36],[260,61,204,41,"undefined"],[260,70,204,50],[260,72,204,52],[261,12,205,10],[261,18,205,16],[261,22,205,20,"Error"],[261,27,205,25],[261,28,205,26],[261,48,205,46,"props"],[261,53,205,51],[261,54,205,52,"id"],[261,56,205,54],[261,78,205,76],[261,79,205,77],[262,10,206,8],[263,10,207,8,"handlerIDToTag"],[263,27,207,22],[263,28,207,22,"handlerIDToTag"],[263,42,207,22],[263,43,207,23,"props"],[263,48,207,28],[263,49,207,29,"id"],[263,51,207,31],[263,52,207,32],[263,55,207,35,"_this"],[263,60,207,35],[263,61,207,40,"handlerTag"],[263,71,207,50],[264,8,208,6],[265,8,208,7],[265,15,208,7,"_this"],[265,20,208,7],[266,6,209,4],[267,6,209,5],[267,10,209,5,"_inherits"],[267,19,209,5],[267,20,209,5,"default"],[267,27,209,5],[267,29,209,5,"Handler"],[267,36,209,5],[267,38,209,5,"_React$Component"],[267,54,209,5],[268,6,209,5],[268,17,209,5,"_createClass"],[268,29,209,5],[268,30,209,5,"default"],[268,37,209,5],[268,39,209,5,"Handler"],[268,46,209,5],[269,8,209,5,"key"],[269,11,209,5],[270,8,209,5,"value"],[270,13,209,5],[270,15,211,4],[270,24,211,4,"componentDidMount"],[270,41,211,21,"componentDidMount"],[270,42,211,21],[270,44,211,24],[271,10,212,6],[271,14,212,12,"props"],[271,19,212,34],[271,22,212,37],[271,26,212,41],[271,27,212,42,"props"],[271,32,212,47],[272,10,213,6],[272,14,213,10],[272,15,213,11,"isMountedRef"],[272,27,213,23],[272,28,213,24,"current"],[272,35,213,31],[272,38,213,34],[272,42,213,38],[273,10,215,6],[273,14,215,10,"DEV_ON_ANDROID"],[273,28,215,24],[273,30,215,26],[274,12,216,8],[274,16,216,12],[274,17,216,13,"inspectorToggleListener"],[274,40,216,36],[274,43,216,39,"DeviceEventEmitter"],[274,55,216,57],[274,56,216,57,"DeviceEventEmitter"],[274,74,216,57],[274,75,216,58,"addListener"],[274,86,216,69],[274,87,217,10],[274,111,217,34],[274,113,218,10],[274,119,218,16],[275,14,219,12],[275,18,219,16],[275,19,219,17,"setState"],[275,27,219,25],[275,28,219,27,"_"],[275,29,219,28],[275,34,219,34],[276,16,219,36,"allowTouches"],[277,14,219,49],[277,15,219,50],[277,16,219,51],[277,17,219,52],[278,14,220,12],[278,18,220,16],[278,19,220,17,"update"],[278,25,220,23],[278,26,220,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[278,53,220,51],[278,54,220,52],[279,12,221,10],[279,13,222,8],[279,14,222,9],[280,10,223,6],[281,10,224,6],[281,14,224,10,"hasUnresolvedRefs"],[281,31,224,27],[281,32,224,28,"props"],[281,37,224,33],[281,38,224,34],[281,40,224,36],[282,12,225,8],[283,12,226,8],[284,12,227,8],[285,12,228,8],[286,12,229,8],[287,12,230,8],[288,12,231,8],[288,16,231,8,"ghQueueMicrotask"],[288,33,231,24],[288,34,231,24,"ghQueueMicrotask"],[288,50,231,24],[288,52,231,25],[288,58,231,31],[289,14,232,10],[289,18,232,14],[289,19,232,15,"update"],[289,25,232,21],[289,26,232,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[289,53,232,49],[289,54,232,50],[290,12,233,8],[290,13,233,9],[290,14,233,10],[291,10,234,6],[292,10,236,6],[292,14,236,10],[292,15,236,11,"createGestureHandler"],[292,35,236,31],[292,36,237,8],[292,40,237,8,"filterConfig"],[292,46,237,20],[292,47,237,20,"filterConfig"],[292,59,237,20],[292,61,238,10,"transformProps"],[292,75,238,24],[292,78,238,27,"transformProps"],[292,92,238,41],[292,93,238,42],[292,97,238,46],[292,98,238,47,"props"],[292,103,238,52],[292,104,238,53],[292,107,238,56],[292,111,238,60],[292,112,238,61,"props"],[292,117,238,66],[292,119,239,10],[292,120,239,11],[292,123,239,14,"allowedProps"],[292,135,239,26],[292,137,239,28],[292,140,239,31,"customNativeProps"],[292,157,239,48],[292,158,239,49],[292,160,240,10,"config"],[292,166,241,8],[292,167,242,6],[292,168,242,7],[293,10,244,6],[293,14,244,10],[293,15,244,11],[293,19,244,15],[293,20,244,16,"viewNode"],[293,28,244,24],[293,30,244,26],[294,12,245,8],[294,18,245,14],[294,22,245,18,"Error"],[294,27,245,23],[294,28,246,10],[294,75,246,57,"Handler"],[294,82,246,64],[294,83,246,65,"displayName"],[294,94,246,76],[294,154,247,8],[294,155,247,9],[295,10,248,6],[296,10,250,6],[296,14,250,10],[296,15,250,11,"attachGestureHandler"],[296,35,250,31],[296,36,250,32],[296,40,250,32,"findNodeHandle"],[296,54,250,46],[296,55,250,46,"default"],[296,62,250,46],[296,64,250,47],[296,68,250,51],[296,69,250,52,"viewNode"],[296,77,250,60],[296,78,250,71],[296,79,250,72],[296,80,250,73],[296,81,250,74],[297,8,251,4],[298,6,251,5],[299,8,251,5,"key"],[299,11,251,5],[300,8,251,5,"value"],[300,13,251,5],[300,15,253,4],[300,24,253,4,"componentDidUpdate"],[300,42,253,22,"componentDidUpdate"],[300,43,253,22],[300,45,253,25],[301,10,254,6],[301,14,254,12,"viewTag"],[301,21,254,19],[301,24,254,22],[301,28,254,22,"findNodeHandle"],[301,42,254,36],[301,43,254,36,"default"],[301,50,254,36],[301,52,254,37],[301,56,254,41],[301,57,254,42,"viewNode"],[301,65,254,50],[301,66,254,51],[302,10,255,6],[302,14,255,10],[302,18,255,14],[302,19,255,15,"viewTag"],[302,26,255,22],[302,31,255,27,"viewTag"],[302,38,255,34],[302,40,255,36],[303,12,256,8],[303,16,256,12],[303,17,256,13,"attachGestureHandler"],[303,37,256,33],[303,38,256,34,"viewTag"],[303,45,256,51],[303,46,256,52],[303,47,256,53],[303,48,256,54],[304,10,257,6],[305,10,258,6],[305,14,258,10],[305,15,258,11,"update"],[305,21,258,17],[305,22,258,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[305,49,258,45],[305,50,258,46],[306,8,259,4],[307,6,259,5],[308,8,259,5,"key"],[308,11,259,5],[309,8,259,5,"value"],[309,13,259,5],[309,15,261,4],[309,24,261,4,"componentWillUnmount"],[309,44,261,24,"componentWillUnmount"],[309,45,261,24],[309,47,261,27],[310,10,262,6],[310,14,262,10],[310,15,262,11,"inspectorToggleListener"],[310,38,262,34],[310,40,262,36,"remove"],[310,46,262,42],[310,47,262,43],[310,48,262,44],[311,10,263,6],[311,14,263,10],[311,15,263,11,"isMountedRef"],[311,27,263,23],[311,28,263,24,"current"],[311,35,263,31],[311,38,263,34],[311,43,263,39],[312,10,264,6],[312,14,264,10,"Platform"],[312,26,264,18],[312,27,264,18,"Platform"],[312,35,264,18],[312,36,264,19,"OS"],[312,38,264,21],[312,43,264,26],[312,48,264,31],[312,50,264,33],[313,12,265,8],[313,16,265,8,"unregisterOldGestureHandler"],[313,33,265,35],[313,34,265,35,"unregisterOldGestureHandler"],[313,61,265,35],[313,63,265,36],[313,67,265,40],[313,68,265,41,"handlerTag"],[313,78,265,51],[313,79,265,52],[314,10,266,6],[315,10,267,6,"RNGestureHandlerModule"],[315,32,267,28],[315,33,267,28,"default"],[315,40,267,28],[315,41,267,29,"dropGestureHandler"],[315,59,267,47],[315,60,267,48],[315,64,267,52],[315,65,267,53,"handlerTag"],[315,75,267,63],[315,76,267,64],[316,10,268,6],[316,14,268,6,"scheduleFlushOperations"],[316,20,268,29],[316,21,268,29,"scheduleFlushOperations"],[316,44,268,29],[316,46,268,30],[316,47,268,31],[317,10,269,6],[318,10,270,6],[318,14,270,12,"handlerID"],[318,23,270,41],[318,26,270,44],[318,30,270,48],[318,31,270,49,"props"],[318,36,270,54],[318,37,270,55,"id"],[318,39,270,57],[319,10,271,6],[319,14,271,10,"handlerID"],[319,23,271,19],[319,25,271,21],[320,12,272,8],[321,12,273,8],[321,19,273,15,"handlerIDToTag"],[321,36,273,29],[321,37,273,29,"handlerIDToTag"],[321,51,273,29],[321,52,273,30,"handlerID"],[321,61,273,39],[321,62,273,40],[322,10,274,6],[323,10,276,6,"MountRegistry"],[323,24,276,19],[323,25,276,19,"MountRegistry"],[323,38,276,19],[323,39,276,20,"gestureHandlerWillUnmount"],[323,64,276,45],[323,65,276,46],[323,69,276,50],[323,70,276,51],[324,8,277,4],[325,6,277,5],[326,8,277,5,"key"],[326,11,277,5],[327,8,277,5,"value"],[327,13,277,5],[327,15,408,4],[327,24,408,12,"update"],[327,30,408,18,"update"],[327,31,408,19,"remainingTries"],[327,45,408,41],[327,47,408,43],[328,10,409,6],[328,14,409,10],[328,15,409,11],[328,19,409,15],[328,20,409,16,"isMountedRef"],[328,32,409,28],[328,33,409,29,"current"],[328,40,409,36],[328,42,409,38],[329,12,410,8],[330,10,411,6],[331,10,413,6],[331,14,413,12,"props"],[331,19,413,34],[331,22,413,37],[331,26,413,41],[331,27,413,42,"props"],[331,32,413,47],[333,10,415,6],[334,10,416,6],[335,10,417,6],[336,10,418,6],[336,14,418,10,"hasUnresolvedRefs"],[336,31,418,27],[336,32,418,28,"props"],[336,37,418,33],[336,38,418,34],[336,42,418,38,"remainingTries"],[336,56,418,52],[336,59,418,55],[336,60,418,56],[336,62,418,58],[337,12,419,8],[337,16,419,8,"ghQueueMicrotask"],[337,33,419,24],[337,34,419,24,"ghQueueMicrotask"],[337,50,419,24],[337,52,419,25],[337,58,419,31],[338,14,420,10],[338,18,420,14],[338,19,420,15,"update"],[338,25,420,21],[338,26,420,22,"remainingTries"],[338,40,420,36],[338,43,420,39],[338,44,420,40],[338,45,420,41],[339,12,421,8],[339,13,421,9],[339,14,421,10],[340,10,422,6],[340,11,422,7],[340,17,422,13],[341,12,423,8],[341,16,423,14,"newConfig"],[341,25,423,23],[341,28,423,26],[341,32,423,26,"filterConfig"],[341,38,423,38],[341,39,423,38,"filterConfig"],[341,51,423,38],[341,53,424,10,"transformProps"],[341,67,424,24],[341,70,424,27,"transformProps"],[341,84,424,41],[341,85,424,42],[341,89,424,46],[341,90,424,47,"props"],[341,95,424,52],[341,96,424,53],[341,99,424,56],[341,103,424,60],[341,104,424,61,"props"],[341,109,424,66],[341,111,425,10],[341,112,425,11],[341,115,425,14,"allowedProps"],[341,127,425,26],[341,129,425,28],[341,132,425,31,"customNativeProps"],[341,149,425,48],[341,150,425,49],[341,152,426,10,"config"],[341,158,427,8],[341,159,427,9],[342,12,428,8],[342,16,428,12],[342,17,428,13],[342,21,428,13,"deepEqual"],[342,28,428,22],[342,29,428,22,"deepEqual"],[342,38,428,22],[342,40,428,23],[342,44,428,27],[342,45,428,28,"config"],[342,51,428,34],[342,53,428,36,"newConfig"],[342,62,428,45],[342,63,428,46],[342,65,428,48],[343,14,429,10],[343,18,429,14],[343,19,429,15,"updateGestureHandler"],[343,39,429,35],[343,40,429,36,"newConfig"],[343,49,429,45],[343,50,429,46],[344,12,430,8],[345,10,431,6],[346,8,432,4],[348,8,434,4],[349,6,434,4],[350,8,434,4,"key"],[350,11,434,4],[351,8,434,4,"value"],[351,13,434,4],[351,15,435,4],[351,24,435,4,"setNativeProps"],[351,38,435,18,"setNativeProps"],[351,39,435,19,"updates"],[351,46,435,31],[351,48,435,33],[352,10,436,6],[352,14,436,12,"mergedProps"],[352,25,436,23],[352,28,436,26],[353,12,436,28],[353,15,436,31],[353,19,436,35],[353,20,436,36,"props"],[353,25,436,41],[354,12,436,43],[354,15,436,46,"updates"],[355,10,436,54],[355,11,436,55],[356,10,437,6],[356,14,437,12,"newConfig"],[356,23,437,21],[356,26,437,24],[356,30,437,24,"filterConfig"],[356,36,437,36],[356,37,437,36,"filterConfig"],[356,49,437,36],[356,51,438,8,"transformProps"],[356,65,438,22],[356,68,438,25,"transformProps"],[356,82,438,39],[356,83,438,40,"mergedProps"],[356,94,438,51],[356,95,438,52],[356,98,438,55,"mergedProps"],[356,109,438,66],[356,111,439,8],[356,112,439,9],[356,115,439,12,"allowedProps"],[356,127,439,24],[356,129,439,26],[356,132,439,29,"customNativeProps"],[356,149,439,46],[356,150,439,47],[356,152,440,8,"config"],[356,158,441,6],[356,159,441,7],[357,10,442,6],[357,14,442,10],[357,15,442,11,"updateGestureHandler"],[357,35,442,31],[357,36,442,32,"newConfig"],[357,45,442,41],[357,46,442,42],[358,8,443,4],[359,6,443,5],[360,8,443,5,"key"],[360,11,443,5],[361,8,443,5,"value"],[361,13,443,5],[361,15,445,4],[361,24,445,4,"render"],[361,30,445,10,"render"],[361,31,445,10],[361,33,445,13],[362,10,446,6],[362,14,446,10,"__DEV__"],[362,21,446,17],[362,25,446,21],[362,26,446,22],[362,30,446,26],[362,31,446,27,"context"],[362,38,446,34],[362,42,446,38],[362,43,446,39],[362,47,446,39,"isTestEnv"],[362,54,446,48],[362,55,446,48,"isTestEnv"],[362,64,446,48],[362,66,446,49],[362,67,446,50],[362,71,446,54,"Platform"],[362,83,446,62],[362,84,446,62,"Platform"],[362,92,446,62],[362,93,446,63,"OS"],[362,95,446,65],[362,100,446,70],[362,105,446,75],[362,107,446,77],[363,12,447,8],[363,18,447,14],[363,22,447,18,"Error"],[363,27,447,23],[363,28,448,10,"name"],[363,32,448,14],[363,35,449,12],[363,249,450,8],[363,250,450,9],[364,10,451,6],[365,10,453,6],[365,14,453,10,"gestureEventHandler"],[365,33,453,29],[365,36,453,32],[365,40,453,36],[365,41,453,37,"onGestureHandlerEvent"],[365,62,453,58],[366,10,454,6],[368,10,459,6],[368,14,459,6,"_this$props"],[368,25,459,6],[368,28,460,8],[368,32,460,12],[368,33,460,13,"props"],[368,38,460,18],[369,12,459,14,"onGestureEvent"],[369,26,459,28],[369,29,459,28,"_this$props"],[369,40,459,28],[369,41,459,14,"onGestureEvent"],[369,55,459,28],[370,12,459,30,"onGestureHandlerEvent"],[370,33,459,51],[370,36,459,51,"_this$props"],[370,47,459,51],[370,48,459,30,"onGestureHandlerEvent"],[370,69,459,51],[371,10,461,6],[371,14,461,10,"onGestureEvent"],[371,28,461,24],[371,32,461,28],[371,39,461,35,"onGestureEvent"],[371,53,461,49],[371,58,461,54],[371,68,461,64],[371,70,461,66],[372,12,462,8],[373,12,463,8],[374,12,464,8],[375,12,465,8],[375,16,465,12,"onGestureHandlerEvent"],[375,37,465,33],[375,39,465,35],[376,14,466,10],[376,20,466,16],[376,24,466,20,"Error"],[376,29,466,25],[376,30,467,12],[376,103,468,10],[376,104,468,11],[377,12,469,8],[378,12,470,8,"gestureEventHandler"],[378,31,470,27],[378,34,470,30,"onGestureEvent"],[378,48,470,44],[379,10,471,6],[379,11,471,7],[379,17,471,13],[380,12,472,8],[380,16,473,10,"onGestureHandlerEvent"],[380,37,473,31],[380,41,474,10],[380,48,474,17,"onGestureHandlerEvent"],[380,69,474,38],[380,74,474,43],[380,84,474,53],[380,86,475,10],[381,14,476,10],[381,20,476,16],[381,24,476,20,"Error"],[381,29,476,25],[381,30,477,12],[381,103,478,10],[381,104,478,11],[382,12,479,8],[383,10,480,6],[384,10,482,6],[384,14,482,10,"gestureStateEventHandler"],[384,38,482,34],[384,41,482,37],[384,45,482,41],[384,46,482,42,"onGestureHandlerStateChange"],[384,73,482,69],[385,10,483,6],[387,10,488,6],[387,14,488,6,"_this$props2"],[387,26,488,6],[387,29,491,40],[387,33,491,44],[387,34,491,45,"props"],[387,39,491,50],[388,12,489,8,"onHandlerStateChange"],[388,32,489,28],[388,35,489,28,"_this$props2"],[388,47,489,28],[388,48,489,8,"onHandlerStateChange"],[388,68,489,28],[389,12,490,8,"onGestureHandlerStateChange"],[389,39,490,35],[389,42,490,35,"_this$props2"],[389,54,490,35],[389,55,490,8,"onGestureHandlerStateChange"],[389,82,490,35],[390,10,492,6],[390,14,492,10,"onHandlerStateChange"],[390,34,492,30],[390,38,492,34],[390,45,492,41,"onHandlerStateChange"],[390,65,492,61],[390,70,492,66],[390,80,492,76],[390,82,492,78],[391,12,493,8],[392,12,494,8],[393,12,495,8],[394,12,496,8],[394,16,496,12,"onGestureHandlerStateChange"],[394,43,496,39],[394,45,496,41],[395,14,497,10],[395,20,497,16],[395,24,497,20,"Error"],[395,29,497,25],[395,30,498,12],[395,103,499,10],[395,104,499,11],[396,12,500,8],[397,12,501,8,"gestureStateEventHandler"],[397,36,501,32],[397,39,501,35,"onHandlerStateChange"],[397,59,501,55],[398,10,502,6],[398,11,502,7],[398,17,502,13],[399,12,503,8],[399,16,504,10,"onGestureHandlerStateChange"],[399,43,504,37],[399,47,505,10],[399,54,505,17,"onGestureHandlerStateChange"],[399,81,505,44],[399,86,505,49],[399,96,505,59],[399,98,506,10],[400,14,507,10],[400,20,507,16],[400,24,507,20,"Error"],[400,29,507,25],[400,30,508,12],[400,103,509,10],[400,104,509,11],[401,12,510,8],[402,10,511,6],[403,10,512,6],[403,14,512,12,"events"],[403,20,512,18],[403,23,512,21],[404,12,513,8,"onGestureHandlerEvent"],[404,33,513,29],[404,35,513,31],[404,39,513,35],[404,40,513,36,"state"],[404,45,513,41],[404,46,513,42,"allowTouches"],[404,58,513,54],[404,61,514,12,"gestureEventHandler"],[404,80,514,31],[404,83,515,12,"undefined"],[404,92,515,21],[405,12,516,8,"onGestureHandlerStateChange"],[405,39,516,35],[405,41,516,37],[405,45,516,41],[405,46,516,42,"state"],[405,51,516,47],[405,52,516,48,"allowTouches"],[405,64,516,60],[405,67,517,12,"gestureStateEventHandler"],[405,91,517,36],[405,94,518,12,"undefined"],[406,10,519,6],[406,11,519,7],[407,10,521,6],[407,14,521,10],[407,15,521,11,"propsRef"],[407,23,521,19],[407,24,521,20,"current"],[407,31,521,27],[407,34,521,30,"events"],[407,40,521,36],[408,10,523,6],[408,14,523,10,"child"],[408,19,523,20],[408,22,523,23],[408,26,523,27],[409,10,524,6],[409,14,524,10],[410,12,525,8,"child"],[410,17,525,13],[410,20,525,16,"React"],[410,25,525,21],[410,26,525,22,"Children"],[410,34,525,30],[410,35,525,31,"only"],[410,39,525,35],[410,40,525,36],[410,44,525,40],[410,45,525,41,"props"],[410,50,525,46],[410,51,525,47,"children"],[410,59,525,55],[410,60,525,56],[411,10,526,6],[411,11,526,7],[411,12,526,8],[411,19,526,15,"e"],[411,20,526,16],[411,22,526,18],[412,12,527,8],[412,18,527,14],[412,22,527,18,"Error"],[412,27,527,23],[412,28,528,10],[412,32,528,10,"tagMessage"],[412,39,528,20],[412,40,528,20,"tagMessage"],[412,50,528,20],[412,52,529,12],[412,55,529,15,"name"],[412,59,529,19],[412,215,530,10],[412,216,531,8],[412,217,531,9],[413,10,532,6],[414,10,534,6],[414,14,534,10,"grandChildren"],[414,27,534,23],[414,30,534,26,"child"],[414,35,534,31],[414,36,534,32,"props"],[414,41,534,37],[414,42,534,38,"children"],[414,50,534,46],[415,10,535,6],[415,14,536,8,"__DEV__"],[415,21,536,15],[415,25,537,8,"child"],[415,30,537,13],[415,31,537,14,"type"],[415,35,537,18],[415,40,538,9,"child"],[415,45,538,14],[415,46,538,15,"type"],[415,50,538,19],[415,55,538,24],[415,79,538,48],[415,83,539,10,"child"],[415,88,539,15],[415,89,539,16,"type"],[415,93,539,20],[415,94,539,21,"name"],[415,98,539,25],[415,103,539,30],[415,109,539,36],[415,113,540,10,"child"],[415,118,540,15],[415,119,540,16,"type"],[415,123,540,20],[415,124,540,21,"displayName"],[415,135,540,32],[415,140,540,37],[415,146,540,43],[415,147,540,44],[415,149,541,8],[416,12,542,8,"grandChildren"],[416,25,542,21],[416,28,542,24,"React"],[416,33,542,29],[416,34,542,30,"Children"],[416,42,542,38],[416,43,542,39,"toArray"],[416,50,542,46],[416,51,542,47,"grandChildren"],[416,64,542,60],[416,65,542,61],[417,12,543,8,"grandChildren"],[417,25,543,21],[417,26,543,22,"push"],[417,30,543,26],[417,44,544,10],[417,48,544,10,"_reactJsxDevRuntime"],[417,67,544,10],[417,68,544,10,"jsxDEV"],[417,74,544,10],[417,76,544,11,"_PressabilityDebugView"],[417,98,544,32],[417,99,544,32,"PressabilityDebugView"],[417,120,544,32],[418,14,546,12,"color"],[418,19,546,17],[418,21,546,18],[418,40,546,37],[419,14,547,12,"hitSlop"],[419,21,547,19],[419,23,547,21,"child"],[419,28,547,26],[419,29,547,27,"props"],[419,34,547,32],[419,35,547,33,"hitSlop"],[420,12,547,41],[420,15,545,16],[420,38,545,39],[421,14,545,39,"fileName"],[421,22,545,39],[421,24,545,39,"_jsxFileName"],[421,36,545,39],[422,14,545,39,"lineNumber"],[422,24,545,39],[423,14,545,39,"columnNumber"],[423,26,545,39],[424,12,545,39],[424,19,548,11],[424,20,549,8],[424,21,549,9],[425,10,550,6],[426,10,552,6],[426,30,552,13,"React"],[426,35,552,18],[426,36,552,19,"cloneElement"],[426,48,552,31],[426,49,553,8,"child"],[426,54,553,13],[426,56,554,8],[427,12,555,10,"ref"],[427,15,555,13],[427,17,555,15],[427,21,555,19],[427,22,555,20,"refHandler"],[427,32,555,30],[428,12,556,10,"collapsable"],[428,23,556,21],[428,25,556,23],[428,30,556,28],[429,12,557,10],[429,16,557,14],[429,20,557,14,"isTestEnv"],[429,27,557,23],[429,28,557,23,"isTestEnv"],[429,37,557,23],[429,39,557,24],[429,40,557,25],[429,43,558,14],[430,14,559,16,"handlerType"],[430,25,559,27],[430,27,559,29,"name"],[430,31,559,33],[431,14,560,16,"handlerTag"],[431,24,560,26],[431,26,560,28],[431,30,560,32],[431,31,560,33,"handlerTag"],[431,41,560,43],[432,14,561,16,"enabled"],[432,21,561,23],[432,23,561,25],[432,27,561,29],[432,28,561,30,"props"],[432,33,561,35],[432,34,561,36,"enabled"],[433,12,562,14],[433,13,562,15],[433,16,563,14],[433,17,563,15],[433,18,563,16],[433,19,563,17],[434,12,564,10,"testID"],[434,18,564,16],[434,20,564,18],[434,24,564,22],[434,25,564,23,"props"],[434,30,564,28],[434,31,564,29,"testID"],[434,37,564,35],[434,41,564,39,"child"],[434,46,564,44],[434,47,564,45,"props"],[434,52,564,50],[434,53,564,51,"testID"],[434,59,564,57],[435,12,565,10],[435,15,565,13,"events"],[436,10,566,8],[436,11,566,9],[436,13,567,8,"grandChildren"],[436,26,568,6],[436,27,568,7],[437,8,569,4],[438,6,569,5],[439,4,569,5],[439,6,182,24,"React"],[439,11,182,29],[439,12,182,30,"Component"],[439,21,182,39],[440,4,182,8,"Handler"],[440,11,182,15],[440,12,186,11,"displayName"],[440,23,186,22],[440,26,186,25,"name"],[440,30,186,29],[441,4,182,8,"Handler"],[441,11,182,15],[441,12,187,11,"contextType"],[441,23,187,22],[441,26,187,25,"GestureHandlerRootViewContext"],[441,55,187,54],[441,56,187,54,"default"],[441,63,187,54],[442,4,571,2],[442,11,571,9,"Handler"],[442,18,571,16],[443,2,572,0],[444,0,572,1],[444,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC2F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDY;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVW;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcG;KdQ;IeE;Kf4H;GDC;CRE"},"hasCjsExports":false},"type":"js/module"}]}