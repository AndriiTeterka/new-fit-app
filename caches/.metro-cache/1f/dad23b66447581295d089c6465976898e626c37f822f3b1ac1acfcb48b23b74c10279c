{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationBuilderContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":73,"index":120}}],"key":"vvb+tbs8cGp9hlTxgL5PZCjRz5E=","exportNames":["*"],"imports":1}},{"name":"./useClientLayoutEffect.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":121},"end":{"line":5,"column":67,"index":188}}],"key":"LhoNk5P88pw/w9+MH8FRVAlr+OQ=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useScheduleUpdate = useScheduleUpdate;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationBuilderContextJs = require(_dependencyMap[1], \"./NavigationBuilderContext.js\");\n  var _useClientLayoutEffectJs = require(_dependencyMap[2], \"./useClientLayoutEffect.js\");\n  /**\n   * When screen config changes, we want to update the navigator in the same update phase.\n   * However, navigation state is in the root component and React won't let us update it from a child.\n   * This is a workaround for that, the scheduled update is stored in the ref without actually calling setState.\n   * It lets all subsequent updates access the latest state so it stays correct.\n   * Then we call setState during after the component updates.\n   */\n  function useScheduleUpdate(callback) {\n    var _React$useContext = React.useContext(_NavigationBuilderContextJs.NavigationBuilderContext),\n      scheduleUpdate = _React$useContext.scheduleUpdate,\n      flushUpdates = _React$useContext.flushUpdates;\n\n    // FIXME: This is potentially unsafe\n    // However, since we are using sync store, it might be fine\n    scheduleUpdate(callback);\n    (0, _useClientLayoutEffectJs.useClientLayoutEffect)(flushUpdates);\n  }\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,14,0,"exports"],[16,9,14,0],[16,10,14,0,"useScheduleUpdate"],[16,27,14,0],[16,30,14,0,"useScheduleUpdate"],[16,47,14,0],[17,2,3,0],[17,6,3,0,"_react"],[17,12,3,0],[17,15,3,0,"require"],[17,22,3,0],[17,23,3,0,"_dependencyMap"],[17,37,3,0],[18,2,3,0],[18,6,3,0,"React"],[18,11,3,0],[18,14,3,0,"_interopNamespace"],[18,31,3,0],[18,32,3,0,"_react"],[18,38,3,0],[19,2,4,0],[19,6,4,0,"_NavigationBuilderContextJs"],[19,33,4,0],[19,36,4,0,"require"],[19,43,4,0],[19,44,4,0,"_dependencyMap"],[19,58,4,0],[20,2,5,0],[20,6,5,0,"_useClientLayoutEffectJs"],[20,30,5,0],[20,33,5,0,"require"],[20,40,5,0],[20,41,5,0,"_dependencyMap"],[20,55,5,0],[21,2,7,0],[22,0,8,0],[23,0,9,0],[24,0,10,0],[25,0,11,0],[26,0,12,0],[27,0,13,0],[28,2,14,7],[28,11,14,16,"useScheduleUpdate"],[28,28,14,33,"useScheduleUpdate"],[28,29,14,34,"callback"],[28,37,14,42],[28,39,14,44],[29,4,15,2],[29,8,15,2,"_React$useContext"],[29,25,15,2],[29,28,18,6,"React"],[29,33,18,11],[29,34,18,12,"useContext"],[29,44,18,22],[29,45,18,23,"NavigationBuilderContext"],[29,72,18,47],[29,73,18,47,"NavigationBuilderContext"],[29,97,18,47],[29,98,18,48],[30,6,16,4,"scheduleUpdate"],[30,20,16,18],[30,23,16,18,"_React$useContext"],[30,40,16,18],[30,41,16,4,"scheduleUpdate"],[30,55,16,18],[31,6,17,4,"flushUpdates"],[31,18,17,16],[31,21,17,16,"_React$useContext"],[31,38,17,16],[31,39,17,4,"flushUpdates"],[31,51,17,16],[33,4,20,2],[34,4,21,2],[35,4,22,2,"scheduleUpdate"],[35,18,22,16],[35,19,22,17,"callback"],[35,27,22,25],[35,28,22,26],[36,4,23,2],[36,8,23,2,"useClientLayoutEffect"],[36,32,23,23],[36,33,23,23,"useClientLayoutEffect"],[36,54,23,23],[36,56,23,24,"flushUpdates"],[36,68,23,36],[36,69,23,37],[37,2,24,0],[38,0,24,1],[38,3]],"functionMap":{"names":["<global>","useScheduleUpdate"],"mappings":"AAA;OCa;CDU"},"hasCjsExports":false},"type":"js/module"}]}