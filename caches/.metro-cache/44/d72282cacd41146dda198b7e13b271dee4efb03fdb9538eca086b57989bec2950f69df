{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"./LogBoxSymbolication","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":61}}],"key":"tnifsL40ZTtSGfTDHsrrD1NVb8k=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _LogBoxSymbolication = require(_dependencyMap[2], \"./LogBoxSymbolication\");\n  var LogBoxSymbolication = _interopNamespace(_LogBoxSymbolication);\n  function convertComponentStateToStack(componentStack) {\n    return componentStack.map(frame => ({\n      column: frame?.location?.column,\n      file: frame.fileName,\n      lineNumber: frame?.location?.row,\n      methodName: frame.content,\n      collapse: false\n    }));\n  }\n  function convertStackToComponentStack(stack) {\n    var componentStack = [];\n    for (var i = 0; i < stack.length; i++) {\n      var frame = stack[i];\n      if (frame.lineNumber != null && frame.column != null) {\n        componentStack.push({\n          fileName: frame?.file || '',\n          location: {\n            row: frame.lineNumber,\n            column: frame.column\n          },\n          content: frame.methodName,\n          collapse: false\n        });\n      }\n    }\n    return componentStack;\n  }\n  var LogBoxLog = /*#__PURE__*/function () {\n    function LogBoxLog(data) {\n      (0, _classCallCheck.default)(this, LogBoxLog);\n      this.symbolicated = {\n        error: null,\n        stack: null,\n        status: 'NONE'\n      };\n      this.symbolicatedComponentStack = {\n        error: null,\n        componentStack: null,\n        status: 'NONE'\n      };\n      this.level = data.level;\n      this.type = data.type;\n      this.message = data.message;\n      this.stack = data.stack;\n      this.category = data.category;\n      this.componentStack = data.componentStack;\n      this.componentStackType = data.componentStackType || 'legacy';\n      this.codeFrame = data.codeFrame;\n      this.isComponentError = data.isComponentError;\n      this.extraData = data.extraData;\n      this.count = 1;\n      this.onNotificationPress = data.onNotificationPress;\n    }\n    return (0, _createClass.default)(LogBoxLog, [{\n      key: \"incrementCount\",\n      value: function incrementCount() {\n        this.count += 1;\n      }\n    }, {\n      key: \"getAvailableStack\",\n      value: function getAvailableStack() {\n        return this.symbolicated.status === 'COMPLETE' ? this.symbolicated.stack : this.stack;\n      }\n    }, {\n      key: \"getAvailableComponentStack\",\n      value: function getAvailableComponentStack() {\n        if (this.componentStackType === 'legacy') {\n          return this.componentStack;\n        }\n        return this.symbolicatedComponentStack.status === 'COMPLETE' ? this.symbolicatedComponentStack.componentStack : this.componentStack;\n      }\n    }, {\n      key: \"retrySymbolicate\",\n      value: function retrySymbolicate(callback) {\n        var retry = false;\n        if (this.symbolicated.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(this.stack);\n          retry = true;\n        }\n        if (this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          LogBoxSymbolication.deleteStack(convertComponentStateToStack(this.componentStack));\n          retry = true;\n        }\n        if (retry) {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"symbolicate\",\n      value: function symbolicate(callback) {\n        if (this.symbolicated.status === 'NONE') {\n          this.handleSymbolicate(callback);\n        }\n      }\n    }, {\n      key: \"handleSymbolicate\",\n      value: function handleSymbolicate(callback) {\n        if (this.symbolicated.status !== 'PENDING' && this.symbolicated.status !== 'COMPLETE') {\n          this.updateStatus(null, null, null, callback);\n          LogBoxSymbolication.symbolicate(this.stack, this.extraData).then(data => {\n            this.updateStatus(null, data?.stack, data?.codeFrame, callback);\n          }, error => {\n            this.updateStatus(error, null, null, callback);\n          });\n        }\n        if (this.componentStack != null && this.componentStackType === 'stack' && this.symbolicatedComponentStack.status !== 'PENDING' && this.symbolicatedComponentStack.status !== 'COMPLETE') {\n          this.updateComponentStackStatus(null, null, null, callback);\n          var componentStackFrames = convertComponentStateToStack(this.componentStack);\n          LogBoxSymbolication.symbolicate(componentStackFrames, []).then(data => {\n            this.updateComponentStackStatus(null, convertStackToComponentStack(data.stack), data?.codeFrame, callback);\n          }, error => {\n            this.updateComponentStackStatus(error, null, null, callback);\n          });\n        }\n      }\n    }, {\n      key: \"updateStatus\",\n      value: function updateStatus(error, stack, codeFrame, callback) {\n        var lastStatus = this.symbolicated.status;\n        if (error != null) {\n          this.symbolicated = {\n            error,\n            stack: null,\n            status: 'FAILED'\n          };\n        } else if (stack != null) {\n          if (codeFrame) {\n            this.codeFrame = codeFrame;\n          }\n          this.symbolicated = {\n            error: null,\n            stack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicated = {\n            error: null,\n            stack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicated.status) {\n          callback(this.symbolicated.status);\n        }\n      }\n    }, {\n      key: \"updateComponentStackStatus\",\n      value: function updateComponentStackStatus(error, componentStack, codeFrame, callback) {\n        var lastStatus = this.symbolicatedComponentStack.status;\n        if (error != null) {\n          this.symbolicatedComponentStack = {\n            error,\n            componentStack: null,\n            status: 'FAILED'\n          };\n        } else if (componentStack != null) {\n          if (codeFrame) {\n            this.componentCodeFrame = codeFrame;\n          }\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack,\n            status: 'COMPLETE'\n          };\n        } else {\n          this.symbolicatedComponentStack = {\n            error: null,\n            componentStack: null,\n            status: 'PENDING'\n          };\n        }\n        if (callback && lastStatus !== this.symbolicatedComponentStack.status) {\n          callback(this.symbolicatedComponentStack.status);\n        }\n      }\n    }]);\n  }();\n  var _default = LogBoxLog;\n});","lineCount":211,"map":[[21,2,279,0,"Object"],[21,8,279,0],[21,9,279,0,"defineProperty"],[21,23,279,0],[21,24,279,0,"exports"],[21,31,279,0],[22,4,279,0,"enumerable"],[22,14,279,0],[23,4,279,0,"get"],[23,7,279,0],[23,18,279,0,"get"],[23,19,279,0],[24,6,279,0],[24,13,279,0,"_default"],[24,21,279,0],[25,4,279,0],[26,2,279,0],[27,2,279,25],[27,6,279,25,"_babelRuntimeHelpersClassCallCheck"],[27,40,279,25],[27,43,279,25,"require"],[27,50,279,25],[27,51,279,25,"_dependencyMap"],[27,65,279,25],[28,2,279,25],[28,6,279,25,"_classCallCheck"],[28,21,279,25],[28,24,279,25,"_interopDefault"],[28,39,279,25],[28,40,279,25,"_babelRuntimeHelpersClassCallCheck"],[28,74,279,25],[29,2,279,25],[29,6,279,25,"_babelRuntimeHelpersCreateClass"],[29,37,279,25],[29,40,279,25,"require"],[29,47,279,25],[29,48,279,25,"_dependencyMap"],[29,62,279,25],[30,2,279,25],[30,6,279,25,"_createClass"],[30,18,279,25],[30,21,279,25,"_interopDefault"],[30,36,279,25],[30,37,279,25,"_babelRuntimeHelpersCreateClass"],[30,68,279,25],[31,2,20,0],[31,6,20,0,"_LogBoxSymbolication"],[31,26,20,0],[31,29,20,0,"require"],[31,36,20,0],[31,37,20,0,"_dependencyMap"],[31,51,20,0],[32,2,20,0],[32,6,20,0,"LogBoxSymbolication"],[32,25,20,0],[32,28,20,0,"_interopNamespace"],[32,45,20,0],[32,46,20,0,"_LogBoxSymbolication"],[32,66,20,0],[33,2,28,0],[33,11,28,9,"convertComponentStateToStack"],[33,39,28,37,"convertComponentStateToStack"],[33,40,28,38,"componentStack"],[33,54,28,68],[33,56,28,77],[34,4,29,2],[34,11,29,9,"componentStack"],[34,25,29,23],[34,26,29,24,"map"],[34,29,29,27],[34,30,29,28,"frame"],[34,35,29,33],[34,40,29,38],[35,6,30,4,"column"],[35,12,30,10],[35,14,30,12,"frame"],[35,19,30,17],[35,21,30,19,"location"],[35,29,30,27],[35,31,30,29,"column"],[35,37,30,35],[36,6,31,4,"file"],[36,10,31,8],[36,12,31,10,"frame"],[36,17,31,15],[36,18,31,16,"fileName"],[36,26,31,24],[37,6,32,4,"lineNumber"],[37,16,32,14],[37,18,32,16,"frame"],[37,23,32,21],[37,25,32,23,"location"],[37,33,32,31],[37,35,32,33,"row"],[37,38,32,36],[38,6,33,4,"methodName"],[38,16,33,14],[38,18,33,16,"frame"],[38,23,33,21],[38,24,33,22,"content"],[38,31,33,29],[39,6,34,4,"collapse"],[39,14,34,12],[39,16,34,14],[40,4,35,2],[40,5,35,3],[40,6,35,4],[40,7,35,5],[41,2,36,0],[42,2,38,0],[42,11,38,9,"convertStackToComponentStack"],[42,39,38,37,"convertStackToComponentStack"],[42,40,38,38,"stack"],[42,45,38,50],[42,47,38,68],[43,4,39,2],[43,8,39,8,"componentStack"],[43,22,39,22],[43,25,39,25],[43,27,39,27],[44,4,40,2],[44,9,40,7],[44,13,40,11,"i"],[44,14,40,12],[44,17,40,15],[44,18,40,16],[44,20,40,18,"i"],[44,21,40,19],[44,24,40,22,"stack"],[44,29,40,27],[44,30,40,28,"length"],[44,36,40,34],[44,38,40,36,"i"],[44,39,40,37],[44,41,40,39],[44,43,40,41],[45,6,41,4],[45,10,41,10,"frame"],[45,15,41,15],[45,18,41,18,"stack"],[45,23,41,23],[45,24,41,24,"i"],[45,25,41,25],[45,26,41,26],[46,6,43,4],[46,10,43,8,"frame"],[46,15,43,13],[46,16,43,14,"lineNumber"],[46,26,43,24],[46,30,43,28],[46,34,43,32],[46,38,43,36,"frame"],[46,43,43,41],[46,44,43,42,"column"],[46,50,43,48],[46,54,43,52],[46,58,43,56],[46,60,43,58],[47,8,44,6,"componentStack"],[47,22,44,20],[47,23,44,21,"push"],[47,27,44,25],[47,28,44,26],[48,10,45,8,"fileName"],[48,18,45,16],[48,20,45,18,"frame"],[48,25,45,23],[48,27,45,25,"file"],[48,31,45,29],[48,35,45,33],[48,37,45,35],[49,10,46,8,"location"],[49,18,46,16],[49,20,46,18],[50,12,47,10,"row"],[50,15,47,13],[50,17,47,15,"frame"],[50,22,47,20],[50,23,47,21,"lineNumber"],[50,33,47,31],[51,12,48,10,"column"],[51,18,48,16],[51,20,48,18,"frame"],[51,25,48,23],[51,26,48,24,"column"],[52,10,49,8],[52,11,49,9],[53,10,50,8,"content"],[53,17,50,15],[53,19,50,17,"frame"],[53,24,50,22],[53,25,50,23,"methodName"],[53,35,50,33],[54,10,51,8,"collapse"],[54,18,51,16],[54,20,51,18],[55,8,52,6],[55,9,52,7],[55,10,52,8],[56,6,53,4],[57,4,54,2],[58,4,55,2],[58,11,55,9,"componentStack"],[58,25,55,23],[59,2,56,0],[60,2,56,1],[60,6,72,6,"LogBoxLog"],[60,15,72,15],[61,4,109,2],[61,13,109,2,"LogBoxLog"],[61,23,109,14,"data"],[61,27,109,33],[61,29,109,35],[62,6,109,35],[62,10,109,35,"_classCallCheck"],[62,25,109,35],[62,26,109,35,"default"],[62,33,109,35],[62,41,109,35,"LogBoxLog"],[62,50,109,35],[63,6,109,35],[63,11,85,2,"symbolicated"],[63,23,85,14],[63,26,89,65],[64,8,90,4,"error"],[64,13,90,9],[64,15,90,11],[64,19,90,15],[65,8,91,4,"stack"],[65,13,91,9],[65,15,91,11],[65,19,91,15],[66,8,92,4,"status"],[66,14,92,10],[66,16,92,12],[67,6,93,2],[67,7,93,3],[68,6,93,3],[68,11,94,2,"symbolicatedComponentStack"],[68,37,94,28],[68,40,102,74],[69,8,103,4,"error"],[69,13,103,9],[69,15,103,11],[69,19,103,15],[70,8,104,4,"componentStack"],[70,22,104,18],[70,24,104,20],[70,28,104,24],[71,8,105,4,"status"],[71,14,105,10],[71,16,105,12],[72,6,106,2],[72,7,106,3],[73,6,110,4],[73,10,110,8],[73,11,110,9,"level"],[73,16,110,14],[73,19,110,17,"data"],[73,23,110,21],[73,24,110,22,"level"],[73,29,110,27],[74,6,111,4],[74,10,111,8],[74,11,111,9,"type"],[74,15,111,13],[74,18,111,16,"data"],[74,22,111,20],[74,23,111,21,"type"],[74,27,111,25],[75,6,112,4],[75,10,112,8],[75,11,112,9,"message"],[75,18,112,16],[75,21,112,19,"data"],[75,25,112,23],[75,26,112,24,"message"],[75,33,112,31],[76,6,113,4],[76,10,113,8],[76,11,113,9,"stack"],[76,16,113,14],[76,19,113,17,"data"],[76,23,113,21],[76,24,113,22,"stack"],[76,29,113,27],[77,6,114,4],[77,10,114,8],[77,11,114,9,"category"],[77,19,114,17],[77,22,114,20,"data"],[77,26,114,24],[77,27,114,25,"category"],[77,35,114,33],[78,6,115,4],[78,10,115,8],[78,11,115,9,"componentStack"],[78,25,115,23],[78,28,115,26,"data"],[78,32,115,30],[78,33,115,31,"componentStack"],[78,47,115,45],[79,6,116,4],[79,10,116,8],[79,11,116,9,"componentStackType"],[79,29,116,27],[79,32,116,30,"data"],[79,36,116,34],[79,37,116,35,"componentStackType"],[79,55,116,53],[79,59,116,57],[79,67,116,65],[80,6,117,4],[80,10,117,8],[80,11,117,9,"codeFrame"],[80,20,117,18],[80,23,117,21,"data"],[80,27,117,25],[80,28,117,26,"codeFrame"],[80,37,117,35],[81,6,118,4],[81,10,118,8],[81,11,118,9,"isComponentError"],[81,27,118,25],[81,30,118,28,"data"],[81,34,118,32],[81,35,118,33,"isComponentError"],[81,51,118,49],[82,6,119,4],[82,10,119,8],[82,11,119,9,"extraData"],[82,20,119,18],[82,23,119,21,"data"],[82,27,119,25],[82,28,119,26,"extraData"],[82,37,119,35],[83,6,120,4],[83,10,120,8],[83,11,120,9,"count"],[83,16,120,14],[83,19,120,17],[83,20,120,18],[84,6,121,4],[84,10,121,8],[84,11,121,9,"onNotificationPress"],[84,30,121,28],[84,33,121,31,"data"],[84,37,121,35],[84,38,121,36,"onNotificationPress"],[84,57,121,55],[85,4,122,2],[86,4,122,3],[86,15,122,3,"_createClass"],[86,27,122,3],[86,28,122,3,"default"],[86,35,122,3],[86,37,122,3,"LogBoxLog"],[86,46,122,3],[87,6,122,3,"key"],[87,9,122,3],[88,6,122,3,"value"],[88,11,122,3],[88,13,124,2],[88,22,124,2,"incrementCount"],[88,36,124,16,"incrementCount"],[88,37,124,16],[88,39,124,25],[89,8,125,4],[89,12,125,8],[89,13,125,9,"count"],[89,18,125,14],[89,22,125,18],[89,23,125,19],[90,6,126,2],[91,4,126,3],[92,6,126,3,"key"],[92,9,126,3],[93,6,126,3,"value"],[93,11,126,3],[93,13,128,2],[93,22,128,2,"getAvailableStack"],[93,39,128,19,"getAvailableStack"],[93,40,128,19],[93,42,128,29],[94,8,129,4],[94,15,129,11],[94,19,129,15],[94,20,129,16,"symbolicated"],[94,32,129,28],[94,33,129,29,"status"],[94,39,129,35],[94,44,129,40],[94,54,129,50],[94,57,130,8],[94,61,130,12],[94,62,130,13,"symbolicated"],[94,74,130,25],[94,75,130,26,"stack"],[94,80,130,31],[94,83,131,8],[94,87,131,12],[94,88,131,13,"stack"],[94,93,131,18],[95,6,132,2],[96,4,132,3],[97,6,132,3,"key"],[97,9,132,3],[98,6,132,3,"value"],[98,11,132,3],[98,13,134,2],[98,22,134,2,"getAvailableComponentStack"],[98,48,134,28,"getAvailableComponentStack"],[98,49,134,28],[98,51,134,47],[99,8,135,4],[99,12,135,8],[99,16,135,12],[99,17,135,13,"componentStackType"],[99,35,135,31],[99,40,135,36],[99,48,135,44],[99,50,135,46],[100,10,136,6],[100,17,136,13],[100,21,136,17],[100,22,136,18,"componentStack"],[100,36,136,32],[101,8,137,4],[102,8,138,4],[102,15,138,11],[102,19,138,15],[102,20,138,16,"symbolicatedComponentStack"],[102,46,138,42],[102,47,138,43,"status"],[102,53,138,49],[102,58,138,54],[102,68,138,64],[102,71,139,8],[102,75,139,12],[102,76,139,13,"symbolicatedComponentStack"],[102,102,139,39],[102,103,139,40,"componentStack"],[102,117,139,54],[102,120,140,8],[102,124,140,12],[102,125,140,13,"componentStack"],[102,139,140,27],[103,6,141,2],[104,4,141,3],[105,6,141,3,"key"],[105,9,141,3],[106,6,141,3,"value"],[106,11,141,3],[106,13,143,2],[106,22,143,2,"retrySymbolicate"],[106,38,143,18,"retrySymbolicate"],[106,39,143,19,"callback"],[106,47,143,67],[106,49,143,75],[107,8,144,4],[107,12,144,8,"retry"],[107,17,144,13],[107,20,144,16],[107,25,144,21],[108,8,145,4],[108,12,145,8],[108,16,145,12],[108,17,145,13,"symbolicated"],[108,29,145,25],[108,30,145,26,"status"],[108,36,145,32],[108,41,145,37],[108,51,145,47],[108,53,145,49],[109,10,146,6,"LogBoxSymbolication"],[109,29,146,25],[109,30,146,26,"deleteStack"],[109,41,146,37],[109,42,146,38],[109,46,146,42],[109,47,146,43,"stack"],[109,52,146,48],[109,53,146,49],[110,10,147,6,"retry"],[110,15,147,11],[110,18,147,14],[110,22,147,18],[111,8,148,4],[112,8,149,4],[112,12,149,8],[112,16,149,12],[112,17,149,13,"symbolicatedComponentStack"],[112,43,149,39],[112,44,149,40,"status"],[112,50,149,46],[112,55,149,51],[112,65,149,61],[112,67,149,63],[113,10,150,6,"LogBoxSymbolication"],[113,29,150,25],[113,30,150,26,"deleteStack"],[113,41,150,37],[113,42,151,8,"convertComponentStateToStack"],[113,70,151,36],[113,71,151,37],[113,75,151,41],[113,76,151,42,"componentStack"],[113,90,151,56],[113,91,152,6],[113,92,152,7],[114,10,153,6,"retry"],[114,15,153,11],[114,18,153,14],[114,22,153,18],[115,8,154,4],[116,8,155,4],[116,12,155,8,"retry"],[116,17,155,13],[116,19,155,15],[117,10,156,6],[117,14,156,10],[117,15,156,11,"handleSymbolicate"],[117,32,156,28],[117,33,156,29,"callback"],[117,41,156,37],[117,42,156,38],[118,8,157,4],[119,6,158,2],[120,4,158,3],[121,6,158,3,"key"],[121,9,158,3],[122,6,158,3,"value"],[122,11,158,3],[122,13,160,2],[122,22,160,2,"symbolicate"],[122,33,160,13,"symbolicate"],[122,34,160,14,"callback"],[122,42,160,62],[122,44,160,70],[123,8,161,4],[123,12,161,8],[123,16,161,12],[123,17,161,13,"symbolicated"],[123,29,161,25],[123,30,161,26,"status"],[123,36,161,32],[123,41,161,37],[123,47,161,43],[123,49,161,45],[124,10,162,6],[124,14,162,10],[124,15,162,11,"handleSymbolicate"],[124,32,162,28],[124,33,162,29,"callback"],[124,41,162,37],[124,42,162,38],[125,8,163,4],[126,6,164,2],[127,4,164,3],[128,6,164,3,"key"],[128,9,164,3],[129,6,164,3,"value"],[129,11,164,3],[129,13,166,2],[129,22,166,2,"handleSymbolicate"],[129,39,166,19,"handleSymbolicate"],[129,40,166,20,"callback"],[129,48,166,68],[129,50,166,76],[130,8,167,4],[130,12,168,6],[130,16,168,10],[130,17,168,11,"symbolicated"],[130,29,168,23],[130,30,168,24,"status"],[130,36,168,30],[130,41,168,35],[130,50,168,44],[130,54,169,6],[130,58,169,10],[130,59,169,11,"symbolicated"],[130,71,169,23],[130,72,169,24,"status"],[130,78,169,30],[130,83,169,35],[130,93,169,45],[130,95,170,6],[131,10,171,6],[131,14,171,10],[131,15,171,11,"updateStatus"],[131,27,171,23],[131,28,171,24],[131,32,171,28],[131,34,171,30],[131,38,171,34],[131,40,171,36],[131,44,171,40],[131,46,171,42,"callback"],[131,54,171,50],[131,55,171,51],[132,10,172,6,"LogBoxSymbolication"],[132,29,172,25],[132,30,172,26,"symbolicate"],[132,41,172,37],[132,42,172,38],[132,46,172,42],[132,47,172,43,"stack"],[132,52,172,48],[132,54,172,50],[132,58,172,54],[132,59,172,55,"extraData"],[132,68,172,64],[132,69,172,65],[132,70,172,66,"then"],[132,74,172,70],[132,75,173,8,"data"],[132,79,173,12],[132,83,173,16],[133,12,174,10],[133,16,174,14],[133,17,174,15,"updateStatus"],[133,29,174,27],[133,30,174,28],[133,34,174,32],[133,36,174,34,"data"],[133,40,174,38],[133,42,174,40,"stack"],[133,47,174,45],[133,49,174,47,"data"],[133,53,174,51],[133,55,174,53,"codeFrame"],[133,64,174,62],[133,66,174,64,"callback"],[133,74,174,72],[133,75,174,73],[134,10,175,8],[134,11,175,9],[134,13,176,8,"error"],[134,18,176,13],[134,22,176,17],[135,12,177,10],[135,16,177,14],[135,17,177,15,"updateStatus"],[135,29,177,27],[135,30,177,28,"error"],[135,35,177,33],[135,37,177,35],[135,41,177,39],[135,43,177,41],[135,47,177,45],[135,49,177,47,"callback"],[135,57,177,55],[135,58,177,56],[136,10,178,8],[136,11,179,6],[136,12,179,7],[137,8,180,4],[138,8,181,4],[138,12,182,6],[138,16,182,10],[138,17,182,11,"componentStack"],[138,31,182,25],[138,35,182,29],[138,39,182,33],[138,43,183,6],[138,47,183,10],[138,48,183,11,"componentStackType"],[138,66,183,29],[138,71,183,34],[138,78,183,41],[138,82,184,6],[138,86,184,10],[138,87,184,11,"symbolicatedComponentStack"],[138,113,184,37],[138,114,184,38,"status"],[138,120,184,44],[138,125,184,49],[138,134,184,58],[138,138,185,6],[138,142,185,10],[138,143,185,11,"symbolicatedComponentStack"],[138,169,185,37],[138,170,185,38,"status"],[138,176,185,44],[138,181,185,49],[138,191,185,59],[138,193,186,6],[139,10,187,6],[139,14,187,10],[139,15,187,11,"updateComponentStackStatus"],[139,41,187,37],[139,42,187,38],[139,46,187,42],[139,48,187,44],[139,52,187,48],[139,54,187,50],[139,58,187,54],[139,60,187,56,"callback"],[139,68,187,64],[139,69,187,65],[140,10,188,6],[140,14,188,12,"componentStackFrames"],[140,34,188,32],[140,37,188,35,"convertComponentStateToStack"],[140,65,188,63],[140,66,189,8],[140,70,189,12],[140,71,189,13,"componentStack"],[140,85,190,6],[140,86,190,7],[141,10,191,6,"LogBoxSymbolication"],[141,29,191,25],[141,30,191,26,"symbolicate"],[141,41,191,37],[141,42,191,38,"componentStackFrames"],[141,62,191,58],[141,64,191,60],[141,66,191,62],[141,67,191,63],[141,68,191,64,"then"],[141,72,191,68],[141,73,192,8,"data"],[141,77,192,12],[141,81,192,16],[142,12,193,10],[142,16,193,14],[142,17,193,15,"updateComponentStackStatus"],[142,43,193,41],[142,44,194,12],[142,48,194,16],[142,50,195,12,"convertStackToComponentStack"],[142,78,195,40],[142,79,195,41,"data"],[142,83,195,45],[142,84,195,46,"stack"],[142,89,195,51],[142,90,195,52],[142,92,196,12,"data"],[142,96,196,16],[142,98,196,18,"codeFrame"],[142,107,196,27],[142,109,197,12,"callback"],[142,117,198,10],[142,118,198,11],[143,10,199,8],[143,11,199,9],[143,13,200,8,"error"],[143,18,200,13],[143,22,200,17],[144,12,201,10],[144,16,201,14],[144,17,201,15,"updateComponentStackStatus"],[144,43,201,41],[144,44,201,42,"error"],[144,49,201,47],[144,51,201,49],[144,55,201,53],[144,57,201,55],[144,61,201,59],[144,63,201,61,"callback"],[144,71,201,69],[144,72,201,70],[145,10,202,8],[145,11,203,6],[145,12,203,7],[146,8,204,4],[147,6,205,2],[148,4,205,3],[149,6,205,3,"key"],[149,9,205,3],[150,6,205,3,"value"],[150,11,205,3],[150,13,207,2],[150,22,207,2,"updateStatus"],[150,34,207,14,"updateStatus"],[150,35,208,4,"error"],[150,40,208,17],[150,42,209,4,"stack"],[150,47,209,17],[150,49,210,4,"codeFrame"],[150,58,210,25],[150,60,211,4,"callback"],[150,68,211,52],[150,70,212,10],[151,8,213,4],[151,12,213,10,"lastStatus"],[151,22,213,20],[151,25,213,23],[151,29,213,27],[151,30,213,28,"symbolicated"],[151,42,213,40],[151,43,213,41,"status"],[151,49,213,47],[152,8,214,4],[152,12,214,8,"error"],[152,17,214,13],[152,21,214,17],[152,25,214,21],[152,27,214,23],[153,10,215,6],[153,14,215,10],[153,15,215,11,"symbolicated"],[153,27,215,23],[153,30,215,26],[154,12,216,8,"error"],[154,17,216,13],[155,12,217,8,"stack"],[155,17,217,13],[155,19,217,15],[155,23,217,19],[156,12,218,8,"status"],[156,18,218,14],[156,20,218,16],[157,10,219,6],[157,11,219,7],[158,8,220,4],[158,9,220,5],[158,15,220,11],[158,19,220,15,"stack"],[158,24,220,20],[158,28,220,24],[158,32,220,28],[158,34,220,30],[159,10,221,6],[159,14,221,10,"codeFrame"],[159,23,221,19],[159,25,221,21],[160,12,222,8],[160,16,222,12],[160,17,222,13,"codeFrame"],[160,26,222,22],[160,29,222,25,"codeFrame"],[160,38,222,34],[161,10,223,6],[162,10,225,6],[162,14,225,10],[162,15,225,11,"symbolicated"],[162,27,225,23],[162,30,225,26],[163,12,226,8,"error"],[163,17,226,13],[163,19,226,15],[163,23,226,19],[164,12,227,8,"stack"],[164,17,227,13],[165,12,228,8,"status"],[165,18,228,14],[165,20,228,16],[166,10,229,6],[166,11,229,7],[167,8,230,4],[167,9,230,5],[167,15,230,11],[168,10,231,6],[168,14,231,10],[168,15,231,11,"symbolicated"],[168,27,231,23],[168,30,231,26],[169,12,232,8,"error"],[169,17,232,13],[169,19,232,15],[169,23,232,19],[170,12,233,8,"stack"],[170,17,233,13],[170,19,233,15],[170,23,233,19],[171,12,234,8,"status"],[171,18,234,14],[171,20,234,16],[172,10,235,6],[172,11,235,7],[173,8,236,4],[174,8,238,4],[174,12,238,8,"callback"],[174,20,238,16],[174,24,238,20,"lastStatus"],[174,34,238,30],[174,39,238,35],[174,43,238,39],[174,44,238,40,"symbolicated"],[174,56,238,52],[174,57,238,53,"status"],[174,63,238,59],[174,65,238,61],[175,10,239,6,"callback"],[175,18,239,14],[175,19,239,15],[175,23,239,19],[175,24,239,20,"symbolicated"],[175,36,239,32],[175,37,239,33,"status"],[175,43,239,39],[175,44,239,40],[176,8,240,4],[177,6,241,2],[178,4,241,3],[179,6,241,3,"key"],[179,9,241,3],[180,6,241,3,"value"],[180,11,241,3],[180,13,243,2],[180,22,243,2,"updateComponentStackStatus"],[180,48,243,28,"updateComponentStackStatus"],[180,49,244,4,"error"],[180,54,244,17],[180,56,245,4,"componentStack"],[180,70,245,35],[180,72,246,4,"codeFrame"],[180,81,246,25],[180,83,247,4,"callback"],[180,91,247,52],[180,93,248,10],[181,8,249,4],[181,12,249,10,"lastStatus"],[181,22,249,20],[181,25,249,23],[181,29,249,27],[181,30,249,28,"symbolicatedComponentStack"],[181,56,249,54],[181,57,249,55,"status"],[181,63,249,61],[182,8,250,4],[182,12,250,8,"error"],[182,17,250,13],[182,21,250,17],[182,25,250,21],[182,27,250,23],[183,10,251,6],[183,14,251,10],[183,15,251,11,"symbolicatedComponentStack"],[183,41,251,37],[183,44,251,40],[184,12,252,8,"error"],[184,17,252,13],[185,12,253,8,"componentStack"],[185,26,253,22],[185,28,253,24],[185,32,253,28],[186,12,254,8,"status"],[186,18,254,14],[186,20,254,16],[187,10,255,6],[187,11,255,7],[188,8,256,4],[188,9,256,5],[188,15,256,11],[188,19,256,15,"componentStack"],[188,33,256,29],[188,37,256,33],[188,41,256,37],[188,43,256,39],[189,10,257,6],[189,14,257,10,"codeFrame"],[189,23,257,19],[189,25,257,21],[190,12,258,8],[190,16,258,12],[190,17,258,13,"componentCodeFrame"],[190,35,258,31],[190,38,258,34,"codeFrame"],[190,47,258,43],[191,10,259,6],[192,10,260,6],[192,14,260,10],[192,15,260,11,"symbolicatedComponentStack"],[192,41,260,37],[192,44,260,40],[193,12,261,8,"error"],[193,17,261,13],[193,19,261,15],[193,23,261,19],[194,12,262,8,"componentStack"],[194,26,262,22],[195,12,263,8,"status"],[195,18,263,14],[195,20,263,16],[196,10,264,6],[196,11,264,7],[197,8,265,4],[197,9,265,5],[197,15,265,11],[198,10,266,6],[198,14,266,10],[198,15,266,11,"symbolicatedComponentStack"],[198,41,266,37],[198,44,266,40],[199,12,267,8,"error"],[199,17,267,13],[199,19,267,15],[199,23,267,19],[200,12,268,8,"componentStack"],[200,26,268,22],[200,28,268,24],[200,32,268,28],[201,12,269,8,"status"],[201,18,269,14],[201,20,269,16],[202,10,270,6],[202,11,270,7],[203,8,271,4],[204,8,273,4],[204,12,273,8,"callback"],[204,20,273,16],[204,24,273,20,"lastStatus"],[204,34,273,30],[204,39,273,35],[204,43,273,39],[204,44,273,40,"symbolicatedComponentStack"],[204,70,273,66],[204,71,273,67,"status"],[204,77,273,73],[204,79,273,75],[205,10,274,6,"callback"],[205,18,274,14],[205,19,274,15],[205,23,274,19],[205,24,274,20,"symbolicatedComponentStack"],[205,50,274,46],[205,51,274,47,"status"],[205,57,274,53],[205,58,274,54],[206,8,275,4],[207,6,276,2],[208,4,276,3],[209,2,276,3],[210,2,279,0],[210,6,279,0,"_default"],[210,14,279,0],[210,17,279,15,"LogBoxLog"],[210,26,279,24],[211,0,279,25],[211,3]],"functionMap":{"names":["<global>","convertComponentStateToStack","componentStack.map$argument_0","convertStackToComponentStack","LogBoxLog","constructor","incrementCount","getAvailableStack","getAvailableComponentStack","retrySymbolicate","symbolicate","handleSymbolicate","LogBoxSymbolication.symbolicate.then$argument_0","LogBoxSymbolication.symbolicate.then$argument_1","updateStatus","updateComponentStackStatus"],"mappings":"AAA;AC2B;4BCC;IDM;CDC;AGE;CHkB;AIgB;ECqC;GDa;EEE;GFE;EGE;GHI;EIE;GJO;EKE;GLe;EME;GNI;EOE;QCO;SDE;QEC;SFE;QCc;SDO;QEC;SFE;GPG;EUE;GVkC;EWE;GXiC;CJC"},"hasCjsExports":false},"type":"js/module"}]}