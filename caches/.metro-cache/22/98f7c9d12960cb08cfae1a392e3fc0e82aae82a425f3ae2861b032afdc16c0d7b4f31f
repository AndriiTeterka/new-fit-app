{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":69,"index":84}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":85},"end":{"line":4,"column":31,"index":116}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useScrollToTop = useScrollToTop;\n  var _reactNavigationCore = require(_dependencyMap[0], \"@react-navigation/core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  function getScrollableNode(ref) {\n    if (ref.current == null) {\n      return null;\n    }\n    if ('scrollToTop' in ref.current || 'scrollTo' in ref.current || 'scrollToOffset' in ref.current || 'scrollResponderScrollTo' in ref.current) {\n      // This is already a scrollable node.\n      return ref.current;\n    } else if ('getScrollResponder' in ref.current) {\n      // If the view is a wrapper like FlatList, SectionList etc.\n      // We need to use `getScrollResponder` to get access to the scroll responder\n      return ref.current.getScrollResponder();\n    } else if ('getNode' in ref.current) {\n      // When a `ScrollView` is wrapped in `Animated.createAnimatedComponent`\n      // we need to use `getNode` to get the ref to the actual scrollview.\n      // Note that `getNode` is deprecated in newer versions of react-native\n      // this is why we check if we already have a scrollable node above.\n      return ref.current.getNode();\n    } else {\n      return ref.current;\n    }\n  }\n  function useScrollToTop(ref) {\n    var navigation = React.useContext(_reactNavigationCore.NavigationContext);\n    var route = (0, _reactNavigationCore.useRoute)();\n    if (navigation === undefined) {\n      throw new Error(\"Couldn't find a navigation object. Is your component inside NavigationContainer?\");\n    }\n    React.useEffect(() => {\n      var tabNavigations = [];\n      var currentNavigation = navigation;\n      // If the screen is nested inside multiple tab navigators, we should scroll to top for any of them\n      // So we need to find all the parent tab navigators and add the listeners there\n      while (currentNavigation) {\n        if (currentNavigation.getState().type === 'tab') {\n          tabNavigations.push(currentNavigation);\n        }\n        currentNavigation = currentNavigation.getParent();\n      }\n      if (tabNavigations.length === 0) {\n        return;\n      }\n      var unsubscribers = tabNavigations.map(tab => {\n        return tab.addListener(\n        // We don't wanna import tab types here to avoid extra deps\n        // in addition, there are multiple tab implementations\n        // @ts-expect-error the `tabPress` event is only available when navigation type is tab\n        'tabPress', e => {\n          // We should scroll to top only when the screen is focused\n          var isFocused = navigation.isFocused();\n\n          // In a nested stack navigator, tab press resets the stack to first screen\n          // So we should scroll to top only when we are on first screen\n          var isFirst = tabNavigations.includes(navigation) || navigation.getState().routes[0].key === route.key;\n\n          // Run the operation in the next frame so we're sure all listeners have been run\n          // This is necessary to know if preventDefault() has been called\n          requestAnimationFrame(() => {\n            var scrollable = getScrollableNode(ref);\n            if (isFocused && isFirst && scrollable && !e.defaultPrevented) {\n              if ('scrollToTop' in scrollable) {\n                scrollable.scrollToTop();\n              } else if ('scrollTo' in scrollable) {\n                scrollable.scrollTo({\n                  y: 0,\n                  animated: true\n                });\n              } else if ('scrollToOffset' in scrollable) {\n                scrollable.scrollToOffset({\n                  offset: 0,\n                  animated: true\n                });\n              } else if ('scrollResponderScrollTo' in scrollable) {\n                scrollable.scrollResponderScrollTo({\n                  y: 0,\n                  animated: true\n                });\n              }\n            }\n          });\n        });\n      });\n      return () => {\n        unsubscribers.forEach(unsubscribe => unsubscribe());\n      };\n    }, [navigation, ref, route.key]);\n  }\n});","lineCount":106,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,26,0,"exports"],[16,9,26,0],[16,10,26,0,"useScrollToTop"],[16,24,26,0],[16,27,26,0,"useScrollToTop"],[16,41,26,0],[17,2,3,0],[17,6,3,0,"_reactNavigationCore"],[17,26,3,0],[17,29,3,0,"require"],[17,36,3,0],[17,37,3,0,"_dependencyMap"],[17,51,3,0],[18,2,4,0],[18,6,4,0,"_react"],[18,12,4,0],[18,15,4,0,"require"],[18,22,4,0],[18,23,4,0,"_dependencyMap"],[18,37,4,0],[19,2,4,0],[19,6,4,0,"React"],[19,11,4,0],[19,14,4,0,"_interopNamespace"],[19,31,4,0],[19,32,4,0,"_react"],[19,38,4,0],[20,2,5,0],[20,11,5,9,"getScrollableNode"],[20,28,5,26,"getScrollableNode"],[20,29,5,27,"ref"],[20,32,5,30],[20,34,5,32],[21,4,6,2],[21,8,6,6,"ref"],[21,11,6,9],[21,12,6,10,"current"],[21,19,6,17],[21,23,6,21],[21,27,6,25],[21,29,6,27],[22,6,7,4],[22,13,7,11],[22,17,7,15],[23,4,8,2],[24,4,9,2],[24,8,9,6],[24,21,9,19],[24,25,9,23,"ref"],[24,28,9,26],[24,29,9,27,"current"],[24,36,9,34],[24,40,9,38],[24,50,9,48],[24,54,9,52,"ref"],[24,57,9,55],[24,58,9,56,"current"],[24,65,9,63],[24,69,9,67],[24,85,9,83],[24,89,9,87,"ref"],[24,92,9,90],[24,93,9,91,"current"],[24,100,9,98],[24,104,9,102],[24,129,9,127],[24,133,9,131,"ref"],[24,136,9,134],[24,137,9,135,"current"],[24,144,9,142],[24,146,9,144],[25,6,10,4],[26,6,11,4],[26,13,11,11,"ref"],[26,16,11,14],[26,17,11,15,"current"],[26,24,11,22],[27,4,12,2],[27,5,12,3],[27,11,12,9],[27,15,12,13],[27,35,12,33],[27,39,12,37,"ref"],[27,42,12,40],[27,43,12,41,"current"],[27,50,12,48],[27,52,12,50],[28,6,13,4],[29,6,14,4],[30,6,15,4],[30,13,15,11,"ref"],[30,16,15,14],[30,17,15,15,"current"],[30,24,15,22],[30,25,15,23,"getScrollResponder"],[30,43,15,41],[30,44,15,42],[30,45,15,43],[31,4,16,2],[31,5,16,3],[31,11,16,9],[31,15,16,13],[31,24,16,22],[31,28,16,26,"ref"],[31,31,16,29],[31,32,16,30,"current"],[31,39,16,37],[31,41,16,39],[32,6,17,4],[33,6,18,4],[34,6,19,4],[35,6,20,4],[36,6,21,4],[36,13,21,11,"ref"],[36,16,21,14],[36,17,21,15,"current"],[36,24,21,22],[36,25,21,23,"getNode"],[36,32,21,30],[36,33,21,31],[36,34,21,32],[37,4,22,2],[37,5,22,3],[37,11,22,9],[38,6,23,4],[38,13,23,11,"ref"],[38,16,23,14],[38,17,23,15,"current"],[38,24,23,22],[39,4,24,2],[40,2,25,0],[41,2,26,7],[41,11,26,16,"useScrollToTop"],[41,25,26,30,"useScrollToTop"],[41,26,26,31,"ref"],[41,29,26,34],[41,31,26,36],[42,4,27,2],[42,8,27,8,"navigation"],[42,18,27,18],[42,21,27,21,"React"],[42,26,27,26],[42,27,27,27,"useContext"],[42,37,27,37],[42,38,27,38,"NavigationContext"],[42,58,27,55],[42,59,27,55,"NavigationContext"],[42,76,27,55],[42,77,27,56],[43,4,28,2],[43,8,28,8,"route"],[43,13,28,13],[43,16,28,16],[43,20,28,16,"useRoute"],[43,40,28,24],[43,41,28,24,"useRoute"],[43,49,28,24],[43,51,28,25],[43,52,28,26],[44,4,29,2],[44,8,29,6,"navigation"],[44,18,29,16],[44,23,29,21,"undefined"],[44,32,29,30],[44,34,29,32],[45,6,30,4],[45,12,30,10],[45,16,30,14,"Error"],[45,21,30,19],[45,22,30,20],[45,104,30,102],[45,105,30,103],[46,4,31,2],[47,4,32,2,"React"],[47,9,32,7],[47,10,32,8,"useEffect"],[47,19,32,17],[47,20,32,18],[47,26,32,24],[48,6,33,4],[48,10,33,10,"tabNavigations"],[48,24,33,24],[48,27,33,27],[48,29,33,29],[49,6,34,4],[49,10,34,8,"currentNavigation"],[49,27,34,25],[49,30,34,28,"navigation"],[49,40,34,38],[50,6,35,4],[51,6,36,4],[52,6,37,4],[52,13,37,11,"currentNavigation"],[52,30,37,28],[52,32,37,30],[53,8,38,6],[53,12,38,10,"currentNavigation"],[53,29,38,27],[53,30,38,28,"getState"],[53,38,38,36],[53,39,38,37],[53,40,38,38],[53,41,38,39,"type"],[53,45,38,43],[53,50,38,48],[53,55,38,53],[53,57,38,55],[54,10,39,8,"tabNavigations"],[54,24,39,22],[54,25,39,23,"push"],[54,29,39,27],[54,30,39,28,"currentNavigation"],[54,47,39,45],[54,48,39,46],[55,8,40,6],[56,8,41,6,"currentNavigation"],[56,25,41,23],[56,28,41,26,"currentNavigation"],[56,45,41,43],[56,46,41,44,"getParent"],[56,55,41,53],[56,56,41,54],[56,57,41,55],[57,6,42,4],[58,6,43,4],[58,10,43,8,"tabNavigations"],[58,24,43,22],[58,25,43,23,"length"],[58,31,43,29],[58,36,43,34],[58,37,43,35],[58,39,43,37],[59,8,44,6],[60,6,45,4],[61,6,46,4],[61,10,46,10,"unsubscribers"],[61,23,46,23],[61,26,46,26,"tabNavigations"],[61,40,46,40],[61,41,46,41,"map"],[61,44,46,44],[61,45,46,45,"tab"],[61,48,46,48],[61,52,46,52],[62,8,47,6],[62,15,47,13,"tab"],[62,18,47,16],[62,19,47,17,"addListener"],[62,30,47,28],[63,8,48,6],[64,8,49,6],[65,8,50,6],[66,8,51,6],[66,18,51,16],[66,20,51,18,"e"],[66,21,51,19],[66,25,51,23],[67,10,52,8],[68,10,53,8],[68,14,53,14,"isFocused"],[68,23,53,23],[68,26,53,26,"navigation"],[68,36,53,36],[68,37,53,37,"isFocused"],[68,46,53,46],[68,47,53,47],[68,48,53,48],[70,10,55,8],[71,10,56,8],[72,10,57,8],[72,14,57,14,"isFirst"],[72,21,57,21],[72,24,57,24,"tabNavigations"],[72,38,57,38],[72,39,57,39,"includes"],[72,47,57,47],[72,48,57,48,"navigation"],[72,58,57,58],[72,59,57,59],[72,63,57,63,"navigation"],[72,73,57,73],[72,74,57,74,"getState"],[72,82,57,82],[72,83,57,83],[72,84,57,84],[72,85,57,85,"routes"],[72,91,57,91],[72,92,57,92],[72,93,57,93],[72,94,57,94],[72,95,57,95,"key"],[72,98,57,98],[72,103,57,103,"route"],[72,108,57,108],[72,109,57,109,"key"],[72,112,57,112],[74,10,59,8],[75,10,60,8],[76,10,61,8,"requestAnimationFrame"],[76,31,61,29],[76,32,61,30],[76,38,61,36],[77,12,62,10],[77,16,62,16,"scrollable"],[77,26,62,26],[77,29,62,29,"getScrollableNode"],[77,46,62,46],[77,47,62,47,"ref"],[77,50,62,50],[77,51,62,51],[78,12,63,10],[78,16,63,14,"isFocused"],[78,25,63,23],[78,29,63,27,"isFirst"],[78,36,63,34],[78,40,63,38,"scrollable"],[78,50,63,48],[78,54,63,52],[78,55,63,53,"e"],[78,56,63,54],[78,57,63,55,"defaultPrevented"],[78,73,63,71],[78,75,63,73],[79,14,64,12],[79,18,64,16],[79,31,64,29],[79,35,64,33,"scrollable"],[79,45,64,43],[79,47,64,45],[80,16,65,14,"scrollable"],[80,26,65,24],[80,27,65,25,"scrollToTop"],[80,38,65,36],[80,39,65,37],[80,40,65,38],[81,14,66,12],[81,15,66,13],[81,21,66,19],[81,25,66,23],[81,35,66,33],[81,39,66,37,"scrollable"],[81,49,66,47],[81,51,66,49],[82,16,67,14,"scrollable"],[82,26,67,24],[82,27,67,25,"scrollTo"],[82,35,67,33],[82,36,67,34],[83,18,68,16,"y"],[83,19,68,17],[83,21,68,19],[83,22,68,20],[84,18,69,16,"animated"],[84,26,69,24],[84,28,69,26],[85,16,70,14],[85,17,70,15],[85,18,70,16],[86,14,71,12],[86,15,71,13],[86,21,71,19],[86,25,71,23],[86,41,71,39],[86,45,71,43,"scrollable"],[86,55,71,53],[86,57,71,55],[87,16,72,14,"scrollable"],[87,26,72,24],[87,27,72,25,"scrollToOffset"],[87,41,72,39],[87,42,72,40],[88,18,73,16,"offset"],[88,24,73,22],[88,26,73,24],[88,27,73,25],[89,18,74,16,"animated"],[89,26,74,24],[89,28,74,26],[90,16,75,14],[90,17,75,15],[90,18,75,16],[91,14,76,12],[91,15,76,13],[91,21,76,19],[91,25,76,23],[91,50,76,48],[91,54,76,52,"scrollable"],[91,64,76,62],[91,66,76,64],[92,16,77,14,"scrollable"],[92,26,77,24],[92,27,77,25,"scrollResponderScrollTo"],[92,50,77,48],[92,51,77,49],[93,18,78,16,"y"],[93,19,78,17],[93,21,78,19],[93,22,78,20],[94,18,79,16,"animated"],[94,26,79,24],[94,28,79,26],[95,16,80,14],[95,17,80,15],[95,18,80,16],[96,14,81,12],[97,12,82,10],[98,10,83,8],[98,11,83,9],[98,12,83,10],[99,8,84,6],[99,9,84,7],[99,10,84,8],[100,6,85,4],[100,7,85,5],[100,8,85,6],[101,6,86,4],[101,13,86,11],[101,19,86,17],[102,8,87,6,"unsubscribers"],[102,21,87,19],[102,22,87,20,"forEach"],[102,29,87,27],[102,30,87,28,"unsubscribe"],[102,41,87,39],[102,45,87,43,"unsubscribe"],[102,56,87,54],[102,57,87,55],[102,58,87,56],[102,59,87,57],[103,6,88,4],[103,7,88,5],[104,4,89,2],[104,5,89,3],[104,7,89,5],[104,8,89,6,"navigation"],[104,18,89,16],[104,20,89,18,"ref"],[104,23,89,21],[104,25,89,23,"route"],[104,30,89,28],[104,31,89,29,"key"],[104,34,89,32],[104,35,89,33],[104,36,89,34],[105,2,90,0],[106,0,90,1],[106,3]],"functionMap":{"names":["<global>","getScrollableNode","useScrollToTop","React.useEffect$argument_0","tabNavigations.map$argument_0","tab.addListener$argument_1","requestAnimationFrame$argument_0","<anonymous>","unsubscribers.forEach$argument_0"],"mappings":"AAA;ACI;CDoB;OEC;kBCM;6CCc;kBCK;8BCU;SDsB;ODC;KDC;WIC;4BCC,4BD;KJC;GDC;CFC"},"hasCjsExports":false},"type":"js/module"}]}