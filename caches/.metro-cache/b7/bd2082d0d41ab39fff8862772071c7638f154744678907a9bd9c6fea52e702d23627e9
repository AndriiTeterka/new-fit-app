{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":43},"end":{"line":2,"column":31,"index":74}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":109},"end":{"line":4,"column":44,"index":153}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"./extractOpacity","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":155},"end":{"line":6,"column":46,"index":201}}],"key":"jjgYCrYDewRsVLpQaklu9NyKLaY=","exportNames":["*"],"imports":1}},{"name":"./extractTransform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":202},"end":{"line":7,"column":50,"index":252}}],"key":"/eFg4kip4DvH5s9LoYzzDzsUESE=","exportNames":["*"],"imports":1}},{"name":"../units","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":300},"end":{"line":9,"column":29,"index":329}}],"key":"w7B29dYAP+shhz/m1xxZkm//QSw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return extractGradient;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _extractOpacity = require(_dependencyMap[2], \"./extractOpacity\");\n  var extractOpacity = _interopDefault(_extractOpacity);\n  var _extractTransform = require(_dependencyMap[3], \"./extractTransform\");\n  var extractTransform = _interopDefault(_extractTransform);\n  var _units = require(_dependencyMap[4], \"../units\");\n  var units = _interopDefault(_units);\n  var percentReg = /^([+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)(%?)$/;\n  function percentToFloat(percent) {\n    if (typeof percent === 'number') {\n      return percent;\n    }\n    if (typeof percent === 'object' && typeof percent.__getAnimatedValue === 'function') {\n      return percent.__getAnimatedValue();\n    }\n    var matched = typeof percent === 'string' && percent.match(percentReg);\n    if (!matched) {\n      console.warn(`\"${percent}\" is not a valid number or percentage string.`);\n      return 0;\n    }\n    return matched[2] ? +matched[1] / 100 : +matched[1];\n  }\n  var offsetComparator = (object, other) => object[0] - other[0];\n  function extractGradient(props, parent) {\n    var id = props.id,\n      children = props.children,\n      gradientTransform = props.gradientTransform,\n      transform = props.transform,\n      gradientUnits = props.gradientUnits;\n    if (!id) {\n      return null;\n    }\n    var stops = [];\n    var childArray = children ? _react.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, {\n      parent\n    })) : [];\n    var l = childArray.length;\n    for (var i = 0; i < l; i++) {\n      var _childArray$i$props = childArray[i].props,\n        style = _childArray$i$props.style,\n        _childArray$i$props$o = _childArray$i$props.offset,\n        offset = _childArray$i$props$o === void 0 ? style && style.offset : _childArray$i$props$o,\n        _childArray$i$props$s = _childArray$i$props.stopColor,\n        stopColor = _childArray$i$props$s === void 0 ? style && style.stopColor || '#000' : _childArray$i$props$s,\n        _childArray$i$props$s2 = _childArray$i$props.stopOpacity,\n        stopOpacity = _childArray$i$props$s2 === void 0 ? style && style.stopOpacity : _childArray$i$props$s2;\n      var offsetNumber = percentToFloat(offset || 0);\n      var color = stopColor && (0, _reactNative.processColor)(stopColor);\n      if (typeof color !== 'number' || isNaN(offsetNumber)) {\n        console.warn(`\"${stopColor}\" is not a valid color or \"${offset}\" is not a valid offset`);\n        continue;\n      }\n      var alpha = Math.round((0, extractOpacity.default)(stopOpacity) * 255);\n      stops.push([offsetNumber, color & 0x00ffffff | alpha << 24]);\n    }\n    stops.sort(offsetComparator);\n    var gradient = [];\n    var k = stops.length;\n    for (var j = 0; j < k; j++) {\n      var s = stops[j];\n      gradient.push(s[0], s[1]);\n    }\n    return {\n      name: id,\n      gradient,\n      children: childArray,\n      gradientUnits: gradientUnits && units.default[gradientUnits] || 0,\n      gradientTransform: (0, extractTransform.default)(gradientTransform || transform || props)\n    };\n  }\n});","lineCount":99,"map":[[21,2,42,15,"Object"],[21,8,42,15],[21,9,42,15,"defineProperty"],[21,23,42,15],[21,24,42,15,"exports"],[21,31,42,15],[22,4,42,15,"enumerable"],[22,14,42,15],[23,4,42,15,"get"],[23,7,42,15],[23,18,42,15,"get"],[23,19,42,15],[24,6,42,15],[24,13,42,15,"extractGradient"],[24,28,42,15],[25,4,42,15],[26,2,42,15],[27,2,2,0],[27,6,2,0,"_react"],[27,12,2,0],[27,15,2,0,"require"],[27,22,2,0],[27,23,2,0,"_dependencyMap"],[27,37,2,0],[28,2,2,0],[28,6,2,0,"React"],[28,11,2,0],[28,14,2,0,"_interopNamespace"],[28,31,2,0],[28,32,2,0,"_react"],[28,38,2,0],[29,2,4,0],[29,6,4,0,"_reactNative"],[29,18,4,0],[29,21,4,0,"require"],[29,28,4,0],[29,29,4,0,"_dependencyMap"],[29,43,4,0],[30,2,6,0],[30,6,6,0,"_extractOpacity"],[30,21,6,0],[30,24,6,0,"require"],[30,31,6,0],[30,32,6,0,"_dependencyMap"],[30,46,6,0],[31,2,6,0],[31,6,6,0,"extractOpacity"],[31,20,6,0],[31,23,6,0,"_interopDefault"],[31,38,6,0],[31,39,6,0,"_extractOpacity"],[31,54,6,0],[32,2,7,0],[32,6,7,0,"_extractTransform"],[32,23,7,0],[32,26,7,0,"require"],[32,33,7,0],[32,34,7,0,"_dependencyMap"],[32,48,7,0],[33,2,7,0],[33,6,7,0,"extractTransform"],[33,22,7,0],[33,25,7,0,"_interopDefault"],[33,40,7,0],[33,41,7,0,"_extractTransform"],[33,58,7,0],[34,2,9,0],[34,6,9,0,"_units"],[34,12,9,0],[34,15,9,0,"require"],[34,22,9,0],[34,23,9,0,"_dependencyMap"],[34,37,9,0],[35,2,9,0],[35,6,9,0,"units"],[35,11,9,0],[35,14,9,0,"_interopDefault"],[35,29,9,0],[35,30,9,0,"_units"],[35,36,9,0],[36,2,11,0],[36,6,11,6,"percentReg"],[36,16,11,16],[36,19,11,19],[36,64,11,64],[37,2,13,0],[37,11,13,9,"percentToFloat"],[37,25,13,23,"percentToFloat"],[37,26,14,2,"percent"],[37,33,19,7],[37,35,20,10],[38,4,21,2],[38,8,21,6],[38,15,21,13,"percent"],[38,22,21,20],[38,27,21,25],[38,35,21,33],[38,37,21,35],[39,6,22,4],[39,13,22,11,"percent"],[39,20,22,18],[40,4,23,2],[41,4,24,2],[41,8,25,4],[41,15,25,11,"percent"],[41,22,25,18],[41,27,25,23],[41,35,25,31],[41,39,26,4],[41,46,26,11,"percent"],[41,53,26,18],[41,54,26,19,"__getAnimatedValue"],[41,72,26,37],[41,77,26,42],[41,87,26,52],[41,89,27,4],[42,6,28,4],[42,13,28,11,"percent"],[42,20,28,18],[42,21,28,19,"__getAnimatedValue"],[42,39,28,37],[42,40,28,38],[42,41,28,39],[43,4,29,2],[44,4,30,2],[44,8,30,8,"matched"],[44,15,30,15],[44,18,30,18],[44,25,30,25,"percent"],[44,32,30,32],[44,37,30,37],[44,45,30,45],[44,49,30,49,"percent"],[44,56,30,56],[44,57,30,57,"match"],[44,62,30,62],[44,63,30,63,"percentReg"],[44,73,30,73],[44,74,30,74],[45,4,31,2],[45,8,31,6],[45,9,31,7,"matched"],[45,16,31,14],[45,18,31,16],[46,6,32,4,"console"],[46,13,32,11],[46,14,32,12,"warn"],[46,18,32,16],[46,19,32,17],[46,23,32,21,"percent"],[46,30,32,28],[46,77,32,75],[46,78,32,76],[47,6,33,4],[47,13,33,11],[47,14,33,12],[48,4,34,2],[49,4,36,2],[49,11,36,9,"matched"],[49,18,36,16],[49,19,36,17],[49,20,36,18],[49,21,36,19],[49,24,36,22],[49,25,36,23,"matched"],[49,32,36,30],[49,33,36,31],[49,34,36,32],[49,35,36,33],[49,38,36,36],[49,41,36,39],[49,44,36,42],[49,45,36,43,"matched"],[49,52,36,50],[49,53,36,51],[49,54,36,52],[49,55,36,53],[50,2,37,0],[51,2,39,0],[51,6,39,6,"offsetComparator"],[51,22,39,22],[51,25,39,25,"offsetComparator"],[51,26,39,26,"object"],[51,32,39,42],[51,34,39,44,"other"],[51,39,39,59],[51,44,40,2,"object"],[51,50,40,8],[51,51,40,9],[51,52,40,10],[51,53,40,11],[51,56,40,14,"other"],[51,61,40,19],[51,62,40,20],[51,63,40,21],[51,64,40,22],[52,2,42,15],[52,11,42,24,"extractGradient"],[52,26,42,39,"extractGradient"],[52,27,43,2,"props"],[52,32,49,20],[52,34,50,2,"parent"],[52,40,50,17],[52,42,51,2],[53,4,52,2],[53,8,52,10,"id"],[53,10,52,12],[53,13,52,72,"props"],[53,18,52,77],[53,19,52,10,"id"],[53,21,52,12],[54,6,52,14,"children"],[54,14,52,22],[54,17,52,72,"props"],[54,22,52,77],[54,23,52,14,"children"],[54,31,52,22],[55,6,52,24,"gradientTransform"],[55,23,52,41],[55,26,52,72,"props"],[55,31,52,77],[55,32,52,24,"gradientTransform"],[55,49,52,41],[56,6,52,43,"transform"],[56,15,52,52],[56,18,52,72,"props"],[56,23,52,77],[56,24,52,43,"transform"],[56,33,52,52],[57,6,52,54,"gradientUnits"],[57,19,52,67],[57,22,52,72,"props"],[57,27,52,77],[57,28,52,54,"gradientUnits"],[57,41,52,67],[58,4,53,2],[58,8,53,6],[58,9,53,7,"id"],[58,11,53,9],[58,13,53,11],[59,6,54,4],[59,13,54,11],[59,17,54,15],[60,4,55,2],[61,4,57,2],[61,8,57,8,"stops"],[61,13,57,13],[61,16,57,16],[61,18,57,18],[62,4,58,2],[62,8,58,8,"childArray"],[62,18,58,18],[62,21,58,21,"children"],[62,29,58,29],[62,32,59,6,"Children"],[62,38,59,14],[62,39,59,14,"Children"],[62,47,59,14],[62,48,59,15,"map"],[62,51,59,18],[62,52,59,19,"children"],[62,60,59,27],[62,62,59,30,"child"],[62,67,59,35],[62,84,60,8,"React"],[62,89,60,13],[62,90,60,14,"cloneElement"],[62,102,60,26],[62,103,60,27,"child"],[62,108,60,32],[62,110,60,34],[63,6,61,10,"parent"],[64,4,62,8],[64,5,62,9],[64,6,63,6],[64,7,63,7],[64,10,64,6],[64,12,64,8],[65,4,65,2],[65,8,65,8,"l"],[65,9,65,9],[65,12,65,12,"childArray"],[65,22,65,22],[65,23,65,23,"length"],[65,29,65,29],[66,4,66,2],[66,9,66,7],[66,13,66,11,"i"],[66,14,66,12],[66,17,66,15],[66,18,66,16],[66,20,66,18,"i"],[66,21,66,19],[66,24,66,22,"l"],[66,25,66,23],[66,27,66,25,"i"],[66,28,66,26],[66,30,66,28],[66,32,66,30],[67,6,67,4],[67,10,67,4,"_childArray$i$props"],[67,29,67,4],[67,32,74,8,"childArray"],[67,42,74,18],[67,43,74,19,"i"],[67,44,74,20],[67,45,74,21],[67,46,68,6,"props"],[67,51,68,11],[68,8,69,8,"style"],[68,13,69,13],[68,16,69,13,"_childArray$i$props"],[68,35,69,13],[68,36,69,8,"style"],[68,41,69,13],[69,8,69,13,"_childArray$i$props$o"],[69,29,69,13],[69,32,69,13,"_childArray$i$props"],[69,51,69,13],[69,52,70,8,"offset"],[69,58,70,14],[70,8,70,8,"offset"],[70,14,70,14],[70,17,70,14,"_childArray$i$props$o"],[70,38,70,14],[70,52,70,17,"style"],[70,57,70,22],[70,61,70,26,"style"],[70,66,70,31],[70,67,70,32,"offset"],[70,73,70,38],[70,76,70,38,"_childArray$i$props$o"],[70,97,70,38],[71,8,70,38,"_childArray$i$props$s"],[71,29,70,38],[71,32,70,38,"_childArray$i$props"],[71,51,70,38],[71,52,71,8,"stopColor"],[71,61,71,17],[72,8,71,8,"stopColor"],[72,17,71,17],[72,20,71,17,"_childArray$i$props$s"],[72,41,71,17],[72,55,71,21,"style"],[72,60,71,26],[72,64,71,30,"style"],[72,69,71,35],[72,70,71,36,"stopColor"],[72,79,71,45],[72,83,71,50],[72,89,71,56],[72,92,71,56,"_childArray$i$props$s"],[72,113,71,56],[73,8,71,56,"_childArray$i$props$s2"],[73,30,71,56],[73,33,71,56,"_childArray$i$props"],[73,52,71,56],[73,53,72,8,"stopOpacity"],[73,64,72,19],[74,8,72,8,"stopOpacity"],[74,19,72,19],[74,22,72,19,"_childArray$i$props$s2"],[74,44,72,19],[74,58,72,22,"style"],[74,63,72,27],[74,67,72,31,"style"],[74,72,72,36],[74,73,72,37,"stopOpacity"],[74,84,72,48],[74,87,72,48,"_childArray$i$props$s2"],[74,109,72,48],[75,6,75,4],[75,10,75,10,"offsetNumber"],[75,22,75,22],[75,25,75,25,"percentToFloat"],[75,39,75,39],[75,40,75,40,"offset"],[75,46,75,46],[75,50,75,50],[75,51,75,51],[75,52,75,52],[76,6,76,4],[76,10,76,10,"color"],[76,15,76,15],[76,18,76,18,"stopColor"],[76,27,76,27],[76,31,76,31],[76,35,76,31,"processColor"],[76,47,76,43],[76,48,76,43,"processColor"],[76,60,76,43],[76,62,76,44,"stopColor"],[76,71,76,53],[76,72,76,54],[77,6,77,4],[77,10,77,8],[77,17,77,15,"color"],[77,22,77,20],[77,27,77,25],[77,35,77,33],[77,39,77,37,"isNaN"],[77,44,77,42],[77,45,77,43,"offsetNumber"],[77,57,77,55],[77,58,77,56],[77,60,77,58],[78,8,78,6,"console"],[78,15,78,13],[78,16,78,14,"warn"],[78,20,78,18],[78,21,79,8],[78,25,79,12,"stopColor"],[78,34,79,21],[78,64,79,51,"offset"],[78,70,79,57],[78,95,80,6],[78,96,80,7],[79,8,81,6],[80,6,82,4],[81,6,83,4],[81,10,83,10,"alpha"],[81,15,83,15],[81,18,83,18,"Math"],[81,22,83,22],[81,23,83,23,"round"],[81,28,83,28],[81,29,83,29],[81,33,83,29,"extractOpacity"],[81,47,83,43],[81,48,83,43,"default"],[81,55,83,43],[81,57,83,44,"stopOpacity"],[81,68,83,55],[81,69,83,56],[81,72,83,59],[81,75,83,62],[81,76,83,63],[82,6,84,4,"stops"],[82,11,84,9],[82,12,84,10,"push"],[82,16,84,14],[82,17,84,15],[82,18,84,16,"offsetNumber"],[82,30,84,28],[82,32,84,31,"color"],[82,37,84,36],[82,40,84,39],[82,50,84,49],[82,53,84,54,"alpha"],[82,58,84,59],[82,62,84,63],[82,64,84,66],[82,65,84,67],[82,66,84,68],[83,4,85,2],[84,4,86,2,"stops"],[84,9,86,7],[84,10,86,8,"sort"],[84,14,86,12],[84,15,86,13,"offsetComparator"],[84,31,86,29],[84,32,86,30],[85,4,88,2],[85,8,88,8,"gradient"],[85,16,88,16],[85,19,88,19],[85,21,88,21],[86,4,89,2],[86,8,89,8,"k"],[86,9,89,9],[86,12,89,12,"stops"],[86,17,89,17],[86,18,89,18,"length"],[86,24,89,24],[87,4,90,2],[87,9,90,7],[87,13,90,11,"j"],[87,14,90,12],[87,17,90,15],[87,18,90,16],[87,20,90,18,"j"],[87,21,90,19],[87,24,90,22,"k"],[87,25,90,23],[87,27,90,25,"j"],[87,28,90,26],[87,30,90,28],[87,32,90,30],[88,6,91,4],[88,10,91,10,"s"],[88,11,91,11],[88,14,91,14,"stops"],[88,19,91,19],[88,20,91,20,"j"],[88,21,91,21],[88,22,91,22],[89,6,92,4,"gradient"],[89,14,92,12],[89,15,92,13,"push"],[89,19,92,17],[89,20,92,18,"s"],[89,21,92,19],[89,22,92,20],[89,23,92,21],[89,24,92,22],[89,26,92,24,"s"],[89,27,92,25],[89,28,92,26],[89,29,92,27],[89,30,92,28],[89,31,92,29],[90,4,93,2],[91,4,95,2],[91,11,95,9],[92,6,96,4,"name"],[92,10,96,8],[92,12,96,10,"id"],[92,14,96,12],[93,6,97,4,"gradient"],[93,14,97,12],[94,6,98,4,"children"],[94,14,98,12],[94,16,98,14,"childArray"],[94,26,98,24],[95,6,99,4,"gradientUnits"],[95,19,99,17],[95,21,99,20,"gradientUnits"],[95,34,99,33],[95,38,99,37,"units"],[95,43,99,42],[95,44,99,42,"default"],[95,51,99,42],[95,52,99,43,"gradientUnits"],[95,65,99,56],[95,66,99,57],[95,70,99,62],[95,71,99,63],[96,6,100,4,"gradientTransform"],[96,23,100,21],[96,25,100,23],[96,29,100,23,"extractTransform"],[96,45,100,39],[96,46,100,39,"default"],[96,53,100,39],[96,55,101,6,"gradientTransform"],[96,72,101,23],[96,76,101,27,"transform"],[96,85,101,36],[96,89,101,40,"props"],[96,94,102,4],[97,4,103,2],[97,5,103,3],[98,2,104,0],[99,0,104,1],[99,3]],"functionMap":{"names":["<global>","percentToFloat","offsetComparator","extractGradient","Children.map$argument_1"],"mappings":"AAA;ACY;CDwB;yBEE;sBFC;eGE;6BCiB;UDG;CH0C"},"hasCjsExports":false},"type":"js/module"}]}