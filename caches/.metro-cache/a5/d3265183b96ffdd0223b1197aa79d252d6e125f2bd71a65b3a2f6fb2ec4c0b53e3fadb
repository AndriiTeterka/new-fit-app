{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./NavigationContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":59,"index":106}}],"key":"RM0XoJ1uy5+hqq85ZlLNt6FYuco=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useFocusEvents = useFocusEvents;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _NavigationContextJs = require(_dependencyMap[1], \"./NavigationContext.js\");\n  /**\n   * Hook to take care of emitting `focus` and `blur` events.\n   */\n  function useFocusEvents(_ref) {\n    var state = _ref.state,\n      emitter = _ref.emitter;\n    var navigation = React.useContext(_NavigationContextJs.NavigationContext);\n    var lastFocusedKeyRef = React.useRef(undefined);\n    var currentFocusedKey = state.routes[state.index].key;\n\n    // When the parent screen changes its focus state, we also need to change child's focus\n    // Coz the child screen can't be focused if the parent screen is out of focus\n    React.useEffect(() => navigation?.addListener('focus', () => {\n      lastFocusedKeyRef.current = currentFocusedKey;\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => navigation?.addListener('blur', () => {\n      lastFocusedKeyRef.current = undefined;\n      emitter.emit({\n        type: 'blur',\n        target: currentFocusedKey\n      });\n    }), [currentFocusedKey, emitter, navigation]);\n    React.useEffect(() => {\n      var lastFocusedKey = lastFocusedKeyRef.current;\n      lastFocusedKeyRef.current = currentFocusedKey;\n\n      // We wouldn't have `lastFocusedKey` on initial mount\n      // Fire focus event for the current route on mount if there's no parent navigator\n      if (lastFocusedKey === undefined && !navigation) {\n        emitter.emit({\n          type: 'focus',\n          target: currentFocusedKey\n        });\n      }\n\n      // We should only emit events when the focused key changed and navigator is focused\n      // When navigator is not focused, screens inside shouldn't receive focused status either\n      if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {\n        return;\n      }\n      if (lastFocusedKey === undefined) {\n        // Only fire events after initial mount\n        return;\n      }\n      emitter.emit({\n        type: 'blur',\n        target: lastFocusedKey\n      });\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }, [currentFocusedKey, emitter, navigation]);\n  }\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,8,0,"exports"],[16,9,8,0],[16,10,8,0,"useFocusEvents"],[16,24,8,0],[16,27,8,0,"useFocusEvents"],[16,41,8,0],[17,2,3,0],[17,6,3,0,"_react"],[17,12,3,0],[17,15,3,0,"require"],[17,22,3,0],[17,23,3,0,"_dependencyMap"],[17,37,3,0],[18,2,3,0],[18,6,3,0,"React"],[18,11,3,0],[18,14,3,0,"_interopNamespace"],[18,31,3,0],[18,32,3,0,"_react"],[18,38,3,0],[19,2,4,0],[19,6,4,0,"_NavigationContextJs"],[19,26,4,0],[19,29,4,0,"require"],[19,36,4,0],[19,37,4,0,"_dependencyMap"],[19,51,4,0],[20,2,5,0],[21,0,6,0],[22,0,7,0],[23,2,8,7],[23,11,8,16,"useFocusEvents"],[23,25,8,30,"useFocusEvents"],[23,26,8,30,"_ref"],[23,30,8,30],[23,32,11,3],[24,4,11,3],[24,8,9,2,"state"],[24,13,9,7],[24,16,9,7,"_ref"],[24,20,9,7],[24,21,9,2,"state"],[24,26,9,7],[25,6,10,2,"emitter"],[25,13,10,9],[25,16,10,9,"_ref"],[25,20,10,9],[25,21,10,2,"emitter"],[25,28,10,9],[26,4,12,2],[26,8,12,8,"navigation"],[26,18,12,18],[26,21,12,21,"React"],[26,26,12,26],[26,27,12,27,"useContext"],[26,37,12,37],[26,38,12,38,"NavigationContext"],[26,58,12,55],[26,59,12,55,"NavigationContext"],[26,76,12,55],[26,77,12,56],[27,4,13,2],[27,8,13,8,"lastFocusedKeyRef"],[27,25,13,25],[27,28,13,28,"React"],[27,33,13,33],[27,34,13,34,"useRef"],[27,40,13,40],[27,41,13,41,"undefined"],[27,50,13,50],[27,51,13,51],[28,4,14,2],[28,8,14,8,"currentFocusedKey"],[28,25,14,25],[28,28,14,28,"state"],[28,33,14,33],[28,34,14,34,"routes"],[28,40,14,40],[28,41,14,41,"state"],[28,46,14,46],[28,47,14,47,"index"],[28,52,14,52],[28,53,14,53],[28,54,14,54,"key"],[28,57,14,57],[30,4,16,2],[31,4,17,2],[32,4,18,2,"React"],[32,9,18,7],[32,10,18,8,"useEffect"],[32,19,18,17],[32,20,18,18],[32,26,18,24,"navigation"],[32,36,18,34],[32,38,18,36,"addListener"],[32,49,18,47],[32,50,18,48],[32,57,18,55],[32,59,18,57],[32,65,18,63],[33,6,19,4,"lastFocusedKeyRef"],[33,23,19,21],[33,24,19,22,"current"],[33,31,19,29],[33,34,19,32,"currentFocusedKey"],[33,51,19,49],[34,6,20,4,"emitter"],[34,13,20,11],[34,14,20,12,"emit"],[34,18,20,16],[34,19,20,17],[35,8,21,6,"type"],[35,12,21,10],[35,14,21,12],[35,21,21,19],[36,8,22,6,"target"],[36,14,22,12],[36,16,22,14,"currentFocusedKey"],[37,6,23,4],[37,7,23,5],[37,8,23,6],[38,4,24,2],[38,5,24,3],[38,6,24,4],[38,8,24,6],[38,9,24,7,"currentFocusedKey"],[38,26,24,24],[38,28,24,26,"emitter"],[38,35,24,33],[38,37,24,35,"navigation"],[38,47,24,45],[38,48,24,46],[38,49,24,47],[39,4,25,2,"React"],[39,9,25,7],[39,10,25,8,"useEffect"],[39,19,25,17],[39,20,25,18],[39,26,25,24,"navigation"],[39,36,25,34],[39,38,25,36,"addListener"],[39,49,25,47],[39,50,25,48],[39,56,25,54],[39,58,25,56],[39,64,25,62],[40,6,26,4,"lastFocusedKeyRef"],[40,23,26,21],[40,24,26,22,"current"],[40,31,26,29],[40,34,26,32,"undefined"],[40,43,26,41],[41,6,27,4,"emitter"],[41,13,27,11],[41,14,27,12,"emit"],[41,18,27,16],[41,19,27,17],[42,8,28,6,"type"],[42,12,28,10],[42,14,28,12],[42,20,28,18],[43,8,29,6,"target"],[43,14,29,12],[43,16,29,14,"currentFocusedKey"],[44,6,30,4],[44,7,30,5],[44,8,30,6],[45,4,31,2],[45,5,31,3],[45,6,31,4],[45,8,31,6],[45,9,31,7,"currentFocusedKey"],[45,26,31,24],[45,28,31,26,"emitter"],[45,35,31,33],[45,37,31,35,"navigation"],[45,47,31,45],[45,48,31,46],[45,49,31,47],[46,4,32,2,"React"],[46,9,32,7],[46,10,32,8,"useEffect"],[46,19,32,17],[46,20,32,18],[46,26,32,24],[47,6,33,4],[47,10,33,10,"lastFocusedKey"],[47,24,33,24],[47,27,33,27,"lastFocusedKeyRef"],[47,44,33,44],[47,45,33,45,"current"],[47,52,33,52],[48,6,34,4,"lastFocusedKeyRef"],[48,23,34,21],[48,24,34,22,"current"],[48,31,34,29],[48,34,34,32,"currentFocusedKey"],[48,51,34,49],[50,6,36,4],[51,6,37,4],[52,6,38,4],[52,10,38,8,"lastFocusedKey"],[52,24,38,22],[52,29,38,27,"undefined"],[52,38,38,36],[52,42,38,40],[52,43,38,41,"navigation"],[52,53,38,51],[52,55,38,53],[53,8,39,6,"emitter"],[53,15,39,13],[53,16,39,14,"emit"],[53,20,39,18],[53,21,39,19],[54,10,40,8,"type"],[54,14,40,12],[54,16,40,14],[54,23,40,21],[55,10,41,8,"target"],[55,16,41,14],[55,18,41,16,"currentFocusedKey"],[56,8,42,6],[56,9,42,7],[56,10,42,8],[57,6,43,4],[59,6,45,4],[60,6,46,4],[61,6,47,4],[61,10,47,8,"lastFocusedKey"],[61,24,47,22],[61,29,47,27,"currentFocusedKey"],[61,46,47,44],[61,50,47,48],[61,52,47,50,"navigation"],[61,62,47,60],[61,65,47,63,"navigation"],[61,75,47,73],[61,76,47,74,"isFocused"],[61,85,47,83],[61,86,47,84],[61,87,47,85],[61,90,47,88],[61,94,47,92],[61,95,47,93],[61,97,47,95],[62,8,48,6],[63,6,49,4],[64,6,50,4],[64,10,50,8,"lastFocusedKey"],[64,24,50,22],[64,29,50,27,"undefined"],[64,38,50,36],[64,40,50,38],[65,8,51,6],[66,8,52,6],[67,6,53,4],[68,6,54,4,"emitter"],[68,13,54,11],[68,14,54,12,"emit"],[68,18,54,16],[68,19,54,17],[69,8,55,6,"type"],[69,12,55,10],[69,14,55,12],[69,20,55,18],[70,8,56,6,"target"],[70,14,56,12],[70,16,56,14,"lastFocusedKey"],[71,6,57,4],[71,7,57,5],[71,8,57,6],[72,6,58,4,"emitter"],[72,13,58,11],[72,14,58,12,"emit"],[72,18,58,16],[72,19,58,17],[73,8,59,6,"type"],[73,12,59,10],[73,14,59,12],[73,21,59,19],[74,8,60,6,"target"],[74,14,60,12],[74,16,60,14,"currentFocusedKey"],[75,6,61,4],[75,7,61,5],[75,8,61,6],[76,4,62,2],[76,5,62,3],[76,7,62,5],[76,8,62,6,"currentFocusedKey"],[76,25,62,23],[76,27,62,25,"emitter"],[76,34,62,32],[76,36,62,34,"navigation"],[76,46,62,44],[76,47,62,45],[76,48,62,46],[77,2,63,0],[78,0,63,1],[78,3]],"functionMap":{"names":["<global>","useFocusEvents","React.useEffect$argument_0","navigation.addListener$argument_1"],"mappings":"AAA;OCO;kBCU,uCC;GDM,CD;kBCC,sCC;GDM,CD;kBCC;GD8B;CDC"},"hasCjsExports":false},"type":"js/module"}]}