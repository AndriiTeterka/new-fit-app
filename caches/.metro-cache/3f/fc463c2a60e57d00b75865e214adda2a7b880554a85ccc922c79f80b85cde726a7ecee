{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA=","exportNames":["*"],"imports":1}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0=","exportNames":["*"],"imports":1}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE=","exportNames":["*"],"imports":1}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _jsxFileName = \"C:\\\\Users\\\\ateterka\\\\new-fit-app\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\components\\\\DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return DrawerLayout;\n    }\n  });\n  var _babelRuntimeHelpersClassCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _classCallCheck = _interopDefault(_babelRuntimeHelpersClassCallCheck);\n  var _babelRuntimeHelpersCreateClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var _createClass = _interopDefault(_babelRuntimeHelpersCreateClass);\n  var _babelRuntimeHelpersCallSuper = require(_dependencyMap[2], \"@babel/runtime/helpers/callSuper\");\n  var _callSuper = _interopDefault(_babelRuntimeHelpersCallSuper);\n  var _babelRuntimeHelpersInherits = require(_dependencyMap[3], \"@babel/runtime/helpers/inherits\");\n  var _inherits = _interopDefault(_babelRuntimeHelpersInherits);\n  var _react = require(_dependencyMap[4], \"react\");\n  var React = _interopNamespace(_react);\n  var _invariant = require(_dependencyMap[5], \"invariant\");\n  var invariant = _interopDefault(_invariant);\n  var _reactNative = require(_dependencyMap[6], \"react-native\");\n  var _handlersPanGestureHandler = require(_dependencyMap[7], \"../handlers/PanGestureHandler\");\n  var _handlersTapGestureHandler = require(_dependencyMap[8], \"../handlers/TapGestureHandler\");\n  var _State = require(_dependencyMap[9], \"../State\");\n  var _reactJsxDevRuntime = require(_dependencyMap[10], \"react/jsx-dev-runtime\");\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n\n  /**\n   * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n   */\n  /**\n   * @deprecated use Reanimated version of DrawerLayout instead\n   */\n  var DrawerLayout = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck.default)(this, DrawerLayout);\n      _this = (0, _callSuper.default)(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === _State.State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === _State.State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === _State.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      // eslint-disable-next-line @eslint-react/no-unused-class-component-members\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersTapGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits.default)(DrawerLayout, _Component);\n    return (0, _createClass.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _reactJsxDevRuntime.jsxDEV)(_handlersPanGestureHandler.PanGestureHandler // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":592,"map":[[4,136,1,0],[5,2,2,0],[6,2,3,0],[7,2,4,0],[8,2,5,0],[9,2,6,0],[10,2,7,0],[11,2,7,0,"Object"],[11,8,7,0],[11,9,7,0,"defineProperty"],[11,23,7,0],[11,24,7,0,"exports"],[11,31,7,0],[12,4,7,0,"value"],[12,9,7,0],[13,2,7,0],[14,2,7,0],[14,11,7,0,"_interopDefault"],[14,27,7,0,"e"],[14,28,7,0],[15,4,7,0],[15,11,7,0,"e"],[15,12,7,0],[15,16,7,0,"e"],[15,17,7,0],[15,18,7,0,"__esModule"],[15,28,7,0],[15,31,7,0,"e"],[15,32,7,0],[16,6,7,0,"default"],[16,13,7,0],[16,15,7,0,"e"],[17,4,7,0],[18,2,7,0],[19,2,7,0],[19,11,7,0,"_interopNamespace"],[19,29,7,0,"e"],[19,30,7,0],[20,4,7,0],[20,8,7,0,"e"],[20,9,7,0],[20,13,7,0,"e"],[20,14,7,0],[20,15,7,0,"__esModule"],[20,25,7,0],[20,34,7,0,"e"],[20,35,7,0],[21,4,7,0],[21,8,7,0,"n"],[21,9,7,0],[22,4,7,0],[22,8,7,0,"e"],[22,9,7,0],[22,11,7,0,"Object"],[22,17,7,0],[22,18,7,0,"keys"],[22,22,7,0],[22,23,7,0,"e"],[22,24,7,0],[22,26,7,0,"forEach"],[22,33,7,0],[22,44,7,0,"k"],[22,45,7,0],[23,6,7,0,"n"],[23,7,7,0],[23,8,7,0,"k"],[23,9,7,0],[23,13,7,0,"e"],[23,14,7,0],[23,15,7,0,"k"],[23,16,7,0],[24,4,7,0],[25,4,7,0,"n"],[25,5,7,0],[25,6,7,0,"default"],[25,13,7,0],[25,16,7,0,"e"],[25,17,7,0],[26,4,7,0],[26,11,7,0,"n"],[26,12,7,0],[27,2,7,0],[28,2,7,0,"Object"],[28,8,7,0],[28,9,7,0,"defineProperty"],[28,23,7,0],[28,24,7,0,"exports"],[28,31,7,0],[29,4,7,0,"enumerable"],[29,14,7,0],[30,4,7,0,"get"],[30,7,7,0],[30,18,7,0,"get"],[30,19,7,0],[31,6,7,0],[31,13,231,21,"DrawerLayout"],[31,25,231,33],[32,4,231,33],[33,2,231,33],[34,2,231,33],[34,6,231,33,"_babelRuntimeHelpersClassCallCheck"],[34,40,231,33],[34,43,231,33,"require"],[34,50,231,33],[34,51,231,33,"_dependencyMap"],[34,65,231,33],[35,2,231,33],[35,6,231,33,"_classCallCheck"],[35,21,231,33],[35,24,231,33,"_interopDefault"],[35,39,231,33],[35,40,231,33,"_babelRuntimeHelpersClassCallCheck"],[35,74,231,33],[36,2,231,33],[36,6,231,33,"_babelRuntimeHelpersCreateClass"],[36,37,231,33],[36,40,231,33,"require"],[36,47,231,33],[36,48,231,33,"_dependencyMap"],[36,62,231,33],[37,2,231,33],[37,6,231,33,"_createClass"],[37,18,231,33],[37,21,231,33,"_interopDefault"],[37,36,231,33],[37,37,231,33,"_babelRuntimeHelpersCreateClass"],[37,68,231,33],[38,2,231,33],[38,6,231,33,"_babelRuntimeHelpersCallSuper"],[38,35,231,33],[38,38,231,33,"require"],[38,45,231,33],[38,46,231,33,"_dependencyMap"],[38,60,231,33],[39,2,231,33],[39,6,231,33,"_callSuper"],[39,16,231,33],[39,19,231,33,"_interopDefault"],[39,34,231,33],[39,35,231,33,"_babelRuntimeHelpersCallSuper"],[39,64,231,33],[40,2,231,33],[40,6,231,33,"_babelRuntimeHelpersInherits"],[40,34,231,33],[40,37,231,33,"require"],[40,44,231,33],[40,45,231,33,"_dependencyMap"],[40,59,231,33],[41,2,231,33],[41,6,231,33,"_inherits"],[41,15,231,33],[41,18,231,33,"_interopDefault"],[41,33,231,33],[41,34,231,33,"_babelRuntimeHelpersInherits"],[41,62,231,33],[42,2,9,0],[42,6,9,0,"_react"],[42,12,9,0],[42,15,9,0,"require"],[42,22,9,0],[42,23,9,0,"_dependencyMap"],[42,37,9,0],[43,2,9,0],[43,6,9,0,"React"],[43,11,9,0],[43,14,9,0,"_interopNamespace"],[43,31,9,0],[43,32,9,0,"_react"],[43,38,9,0],[44,2,11,0],[44,6,11,0,"_invariant"],[44,16,11,0],[44,19,11,0,"require"],[44,26,11,0],[44,27,11,0,"_dependencyMap"],[44,41,11,0],[45,2,11,0],[45,6,11,0,"invariant"],[45,15,11,0],[45,18,11,0,"_interopDefault"],[45,33,11,0],[45,34,11,0,"_invariant"],[45,44,11,0],[46,2,12,0],[46,6,12,0,"_reactNative"],[46,18,12,0],[46,21,12,0,"require"],[46,28,12,0],[46,29,12,0,"_dependencyMap"],[46,43,12,0],[47,2,33,0],[47,6,33,0,"_handlersPanGestureHandler"],[47,32,33,0],[47,35,33,0,"require"],[47,42,33,0],[47,43,33,0,"_dependencyMap"],[47,57,33,0],[48,2,38,0],[48,6,38,0,"_handlersTapGestureHandler"],[48,32,38,0],[48,35,38,0,"require"],[48,42,38,0],[48,43,38,0,"_dependencyMap"],[48,57,38,0],[49,2,39,0],[49,6,39,0,"_State"],[49,12,39,0],[49,15,39,0,"require"],[49,22,39,0],[49,23,39,0,"_dependencyMap"],[49,37,39,0],[50,2,39,33],[50,6,39,33,"_reactJsxDevRuntime"],[50,25,39,33],[50,28,39,33,"require"],[50,35,39,33],[50,36,39,33,"_dependencyMap"],[50,50,39,33],[51,2,41,0],[51,6,41,6,"DRAG_TOSS"],[51,15,41,15],[51,18,41,18],[51,22,41,22],[52,2,43,0],[52,6,43,6,"IDLE"],[52,10,43,23],[52,13,43,26],[52,19,43,32],[53,2,44,0],[53,6,44,6,"DRAGGING"],[53,14,44,27],[53,17,44,30],[53,27,44,40],[54,2,45,0],[54,6,45,6,"SETTLING"],[54,14,45,27],[54,17,45,30],[54,27,45,40],[56,2,47,0],[57,0,48,0],[58,0,49,0],[60,2,52,0],[61,0,53,0],[62,0,54,0],[64,2,57,0],[65,0,58,0],[66,0,59,0],[68,2,62,0],[69,0,63,0],[70,0,64,0],[72,2,67,0],[73,0,68,0],[74,0,69,0],[76,2,72,0],[77,2,73,0],[78,2,74,0],[80,2,77,0],[81,0,78,0],[82,0,79,0],[84,2,208,0],[85,0,209,0],[86,0,210,0],[88,2,220,0],[89,0,221,0],[90,0,222,0],[91,2,228,0],[92,0,229,0],[93,0,230,0],[94,2,228,0],[94,6,231,21,"DrawerLayout"],[94,18,231,33],[94,44,231,33,"_Component"],[94,54,231,33],[95,4,247,2],[95,13,247,2,"DrawerLayout"],[95,26,247,14,"props"],[95,32,247,38],[95,34,247,40],[96,6,247,40],[96,10,247,40,"_this"],[96,15,247,40],[97,6,247,40],[97,10,247,40,"_classCallCheck"],[97,25,247,40],[97,26,247,40,"default"],[97,33,247,40],[97,41,247,40,"DrawerLayout"],[97,53,247,40],[98,6,248,4,"_this"],[98,11,248,4],[98,18,248,4,"_callSuper"],[98,28,248,4],[98,29,248,4,"default"],[98,36,248,4],[98,44,248,4,"DrawerLayout"],[98,56,248,4],[98,59,248,10,"props"],[98,65,248,15],[99,6,248,17,"_this"],[99,11,248,17],[99,12,283,10,"accessibilityIsModalView"],[99,36,283,34],[99,52,284,4,"React"],[99,57,284,9],[99,58,284,10,"createRef"],[99,67,284,19],[99,68,284,53],[99,69,284,54],[100,6,284,54,"_this"],[100,11,284,54],[100,12,285,10,"pointerEventsView"],[100,29,285,27],[100,45,286,4,"React"],[100,50,286,9],[100,51,286,10,"createRef"],[100,60,286,19],[100,61,286,53],[100,62,286,54],[101,6,286,54,"_this"],[101,11,286,54],[101,12,287,10,"panGestureHandler"],[101,29,287,27],[101,45,287,30,"React"],[101,50,287,35],[101,51,287,36,"createRef"],[101,60,287,45],[101,61,287,72],[101,62,287,73],[102,6,287,73,"_this"],[102,11,287,73],[102,12,288,10,"drawerShown"],[102,23,288,21],[102,26,288,24],[102,31,288,29],[103,6,288,29,"_this"],[103,11,288,29],[103,12,295,10,"updateAnimatedEvent"],[103,31,295,29],[103,34,295,32],[103,35,296,4,"props"],[103,40,296,28],[103,42,297,4,"state"],[103,47,297,28],[103,52,298,7],[104,8,299,4],[105,8,300,4],[105,12,300,12,"drawerPosition"],[105,26,300,26],[105,29,300,56,"props"],[105,34,300,61],[105,35,300,12,"drawerPosition"],[105,49,300,26],[106,10,300,28,"drawerWidth"],[106,21,300,39],[106,24,300,56,"props"],[106,29,300,61],[106,30,300,28,"drawerWidth"],[106,41,300,39],[107,10,300,41,"drawerType"],[107,20,300,51],[107,23,300,56,"props"],[107,28,300,61],[107,29,300,41,"drawerType"],[107,39,300,51],[108,8,301,4],[108,12,302,13,"dragXValue"],[108,22,302,23],[108,25,306,8,"state"],[108,30,306,13],[108,31,302,6,"dragX"],[108,36,302,11],[109,10,303,14,"touchXValue"],[109,21,303,25],[109,24,306,8,"state"],[109,29,306,13],[109,30,303,6,"touchX"],[109,36,303,12],[110,10,304,6,"drawerTranslation"],[110,27,304,23],[110,30,306,8,"state"],[110,35,306,13],[110,36,304,6,"drawerTranslation"],[110,53,304,23],[111,10,305,6,"containerWidth"],[111,24,305,20],[111,27,306,8,"state"],[111,32,306,13],[111,33,305,6,"containerWidth"],[111,47,305,20],[112,8,308,4],[112,12,308,8,"dragX"],[112,17,308,13],[112,20,308,16,"dragXValue"],[112,30,308,26],[113,8,309,4],[113,12,309,8,"touchX"],[113,18,309,14],[113,21,309,17,"touchXValue"],[113,32,309,28],[114,8,311,4],[114,12,311,8,"drawerPosition"],[114,26,311,22],[114,31,311,27],[114,37,311,33],[114,39,311,35],[115,10,312,6],[116,10,313,6],[117,10,314,6],[118,10,315,6],[119,10,316,6],[120,10,317,6],[121,10,318,6,"dragX"],[121,15,318,11],[121,18,318,14,"Animated"],[121,30,318,22],[121,31,318,22,"Animated"],[121,39,318,22],[121,40,318,23,"multiply"],[121,48,318,31],[121,49,319,8],[121,53,319,12,"Animated"],[121,65,319,20],[121,66,319,20,"Animated"],[121,74,319,20],[121,75,319,21,"Value"],[121,80,319,26],[121,81,319,27],[121,82,319,28],[121,83,319,29],[121,84,319,30],[121,86,320,8,"dragXValue"],[121,96,321,6],[121,97,321,25],[121,98,321,26],[121,99,321,27],[122,10,322,6,"touchX"],[122,16,322,12],[122,19,322,15,"Animated"],[122,31,322,23],[122,32,322,23,"Animated"],[122,40,322,23],[122,41,322,24,"add"],[122,44,322,27],[122,45,323,8],[122,49,323,12,"Animated"],[122,61,323,20],[122,62,323,20,"Animated"],[122,70,323,20],[122,71,323,21,"Value"],[122,76,323,26],[122,77,323,27,"containerWidth"],[122,91,323,41],[122,92,323,42],[122,94,324,8,"Animated"],[122,106,324,16],[122,107,324,16,"Animated"],[122,115,324,16],[122,116,324,17,"multiply"],[122,124,324,25],[122,125,324,26],[122,129,324,30,"Animated"],[122,141,324,38],[122,142,324,38,"Animated"],[122,150,324,38],[122,151,324,39,"Value"],[122,156,324,44],[122,157,324,45],[122,158,324,46],[122,159,324,47],[122,160,324,48],[122,162,324,50,"touchXValue"],[122,173,324,61],[122,174,325,6],[122,175,325,25],[122,176,325,26],[122,177,325,27],[123,10,326,6,"touchXValue"],[123,21,326,17],[123,22,326,18,"setValue"],[123,30,326,26],[123,31,326,27,"containerWidth"],[123,45,326,41],[123,46,326,42],[124,8,327,4],[124,9,327,5],[124,15,327,11],[125,10,328,6,"touchXValue"],[125,21,328,17],[125,22,328,18,"setValue"],[125,30,328,26],[125,31,328,27],[125,32,328,28],[125,33,328,29],[126,8,329,4],[128,8,331,4],[129,8,332,4],[130,8,333,4],[131,8,334,4],[132,8,335,4],[133,8,336,4],[134,8,337,4],[135,8,338,4],[136,8,339,4],[137,8,340,4],[138,8,341,4],[139,8,342,4],[140,8,343,4],[141,8,344,4],[142,8,345,4],[143,8,346,4],[144,8,347,4],[145,8,348,4],[146,8,349,4],[147,8,350,4],[148,8,351,4],[149,8,352,4],[150,8,353,4],[151,8,354,4],[152,8,355,4],[153,8,356,4],[153,12,356,8,"translationX"],[153,24,356,20],[153,27,356,23,"dragX"],[153,32,356,28],[154,8,357,4],[154,12,357,8,"drawerType"],[154,22,357,18],[154,27,357,23],[154,34,357,30],[154,36,357,32],[155,10,358,6],[155,14,358,12,"startPositionX"],[155,28,358,26],[155,31,358,29,"Animated"],[155,43,358,37],[155,44,358,37,"Animated"],[155,52,358,37],[155,53,358,38,"add"],[155,56,358,41],[155,57,359,8,"touchX"],[155,63,359,14],[155,65,360,8,"Animated"],[155,77,360,16],[155,78,360,16,"Animated"],[155,86,360,16],[155,87,360,17,"multiply"],[155,95,360,25],[155,96,360,26],[155,100,360,30,"Animated"],[155,112,360,38],[155,113,360,38,"Animated"],[155,121,360,38],[155,122,360,39,"Value"],[155,127,360,44],[155,128,360,45],[155,129,360,46],[155,130,360,47],[155,131,360,48],[155,133,360,50,"dragX"],[155,138,360,55],[155,139,361,6],[155,140,361,7],[156,10,363,6],[156,14,363,12,"dragOffsetFromOnStartPosition"],[156,43,363,41],[156,46,363,44,"startPositionX"],[156,60,363,58],[156,61,363,59,"interpolate"],[156,72,363,70],[156,73,363,71],[157,12,364,8,"inputRange"],[157,22,364,18],[157,24,364,20],[157,25,364,21,"drawerWidth"],[157,36,364,32],[157,39,364,36],[157,40,364,37],[157,42,364,39,"drawerWidth"],[157,53,364,50],[157,55,364,53,"drawerWidth"],[157,66,364,64],[157,69,364,68],[157,70,364,69],[157,71,364,70],[158,12,365,8,"outputRange"],[158,23,365,19],[158,25,365,21],[158,26,365,22],[158,27,365,23],[158,29,365,25],[158,30,365,26],[158,32,365,28],[158,33,365,29],[159,10,366,6],[159,11,366,7],[159,12,366,8],[160,10,367,6,"translationX"],[160,22,367,18],[160,25,367,21,"Animated"],[160,37,367,29],[160,38,367,29,"Animated"],[160,46,367,29],[160,47,367,30,"add"],[160,50,367,33],[160,51,368,8,"dragX"],[160,56,368,13],[160,58,369,8,"dragOffsetFromOnStartPosition"],[160,87,370,6],[160,88,370,25],[160,89,370,26],[160,90,370,27],[161,8,371,4],[162,8,373,4,"_this"],[162,13,373,4],[162,14,373,9,"openValue"],[162,23,373,18],[162,26,373,21,"Animated"],[162,38,373,29],[162,39,373,29,"Animated"],[162,47,373,29],[162,48,373,30,"add"],[162,51,373,33],[162,52,373,34,"translationX"],[162,64,373,46],[162,66,373,48,"drawerTranslation"],[162,83,373,65],[162,84,373,66],[162,85,373,67,"interpolate"],[162,96,373,78],[162,97,373,79],[163,10,374,6,"inputRange"],[163,20,374,16],[163,22,374,18],[163,23,374,19],[163,24,374,20],[163,26,374,22,"drawerWidth"],[163,37,374,33],[163,38,374,35],[164,10,375,6,"outputRange"],[164,21,375,17],[164,23,375,19],[164,24,375,20],[164,25,375,21],[164,27,375,23],[164,28,375,24],[164,29,375,25],[165,10,376,6,"extrapolate"],[165,21,376,17],[165,23,376,19],[166,8,377,4],[166,9,377,5],[166,10,377,6],[167,8,379,4],[167,12,379,10,"gestureOptions"],[167,26,385,5],[167,29,385,8],[168,10,386,6,"useNativeDriver"],[168,25,386,21],[168,27,386,23,"props"],[168,32,386,28],[168,33,386,29,"useNativeAnimations"],[169,8,387,4],[169,9,387,5],[170,8,389,4],[170,12,389,8,"_this"],[170,17,389,8],[170,18,389,13,"props"],[170,23,389,18],[170,24,389,19,"onDrawerSlide"],[170,37,389,32],[170,39,389,34],[171,10,390,6,"gestureOptions"],[171,24,390,20],[171,25,390,21,"listener"],[171,33,390,29],[171,36,390,33,"ev"],[171,38,390,35],[171,42,390,40],[172,12,391,8],[172,16,391,14,"translationX"],[172,28,391,26],[172,31,391,29,"Math"],[172,35,391,33],[172,36,391,34,"floor"],[172,41,391,39],[172,42,391,40,"Math"],[172,46,391,44],[172,47,391,45,"abs"],[172,50,391,48],[172,51,391,49,"ev"],[172,53,391,51],[172,54,391,52,"nativeEvent"],[172,65,391,63],[172,66,391,64,"translationX"],[172,78,391,76],[172,79,391,77],[172,80,391,78],[173,12,392,8],[173,16,392,14,"position"],[173,24,392,22],[173,27,392,25,"translationX"],[173,39,392,37],[173,42,392,40,"_this"],[173,47,392,40],[173,48,392,45,"state"],[173,53,392,50],[173,54,392,51,"containerWidth"],[173,68,392,65],[174,12,394,8,"_this"],[174,17,394,8],[174,18,394,13,"props"],[174,23,394,18],[174,24,394,19,"onDrawerSlide"],[174,37,394,32],[174,40,394,35,"position"],[174,48,394,43],[174,49,394,44],[175,10,395,6],[175,11,395,7],[176,8,396,4],[177,8,398,4,"_this"],[177,13,398,4],[177,14,398,9,"onGestureEvent"],[177,28,398,23],[177,31,398,26,"Animated"],[177,43,398,34],[177,44,398,34,"Animated"],[177,52,398,34],[177,53,398,35,"event"],[177,58,398,40],[177,59,399,6],[177,60,399,7],[178,10,399,9,"nativeEvent"],[178,21,399,20],[178,23,399,22],[179,12,399,24,"translationX"],[179,24,399,36],[179,26,399,38,"dragXValue"],[179,36,399,48],[180,12,399,50,"x"],[180,13,399,51],[180,15,399,53,"touchXValue"],[181,10,399,65],[182,8,399,67],[182,9,399,68],[182,10,399,69],[182,12,400,6,"gestureOptions"],[182,26,401,4],[182,27,401,5],[183,6,402,2],[183,7,402,3],[184,6,402,3,"_this"],[184,11,402,3],[184,12,404,10,"handleContainerLayout"],[184,33,404,31],[184,36,404,34,"_ref"],[184,40,404,34],[184,44,404,74],[185,8,404,74],[185,12,404,37,"nativeEvent"],[185,23,404,48],[185,26,404,48,"_ref"],[185,30,404,48],[185,31,404,37,"nativeEvent"],[185,42,404,48],[186,8,405,4,"_this"],[186,13,405,4],[186,14,405,9,"setState"],[186,22,405,17],[186,23,405,18],[187,10,405,20,"containerWidth"],[187,24,405,34],[187,26,405,36,"nativeEvent"],[187,37,405,47],[187,38,405,48,"layout"],[187,44,405,54],[187,45,405,55,"width"],[188,8,405,61],[188,9,405,62],[188,10,405,63],[189,6,406,2],[189,7,406,3],[190,6,406,3,"_this"],[190,11,406,3],[190,12,408,10,"emitStateChanged"],[190,28,408,26],[190,31,408,29],[190,32,409,4,"newState"],[190,40,409,25],[190,42,410,4,"drawerWillShow"],[190,56,410,27],[190,61,411,7],[191,8,412,4,"_this"],[191,13,412,4],[191,14,412,9,"props"],[191,19,412,14],[191,20,412,15,"onDrawerStateChanged"],[191,40,412,35],[191,43,412,38,"newState"],[191,51,412,46],[191,53,412,48,"drawerWillShow"],[191,67,412,62],[191,68,412,63],[192,6,413,2],[192,7,413,3],[193,6,413,3,"_this"],[193,11,413,3],[193,12,415,10,"openingHandlerStateChange"],[193,37,415,35],[193,40,415,38,"_ref2"],[193,45,415,38],[193,49,417,64],[194,8,417,64],[194,12,416,4,"nativeEvent"],[194,23,416,15],[194,26,416,15,"_ref2"],[194,31,416,15],[194,32,416,4,"nativeEvent"],[194,43,416,15],[195,8,418,4],[195,12,418,8,"nativeEvent"],[195,23,418,19],[195,24,418,20,"oldState"],[195,32,418,28],[195,37,418,33,"State"],[195,43,418,38],[195,44,418,38,"State"],[195,49,418,38],[195,50,418,39,"ACTIVE"],[195,56,418,45],[195,58,418,47],[196,10,419,6,"_this"],[196,15,419,6],[196,16,419,11,"handleRelease"],[196,29,419,24],[196,30,419,25],[197,12,419,27,"nativeEvent"],[198,10,419,39],[198,11,419,40],[198,12,419,41],[199,8,420,4],[199,9,420,5],[199,15,420,11],[199,19,420,15,"nativeEvent"],[199,30,420,26],[199,31,420,27,"state"],[199,36,420,32],[199,41,420,37,"State"],[199,47,420,42],[199,48,420,42,"State"],[199,53,420,42],[199,54,420,43,"ACTIVE"],[199,60,420,49],[199,62,420,51],[200,10,421,6,"_this"],[200,15,421,6],[200,16,421,11,"emitStateChanged"],[200,32,421,27],[200,33,421,28,"DRAGGING"],[200,41,421,36],[200,43,421,38],[200,48,421,43],[200,49,421,44],[201,10,422,6,"_this"],[201,15,422,6],[201,16,422,11,"setState"],[201,24,422,19],[201,25,422,20],[202,12,422,22,"drawerState"],[202,23,422,33],[202,25,422,35,"DRAGGING"],[203,10,422,44],[203,11,422,45],[203,12,422,46],[204,10,423,6],[204,14,423,10,"_this"],[204,19,423,10],[204,20,423,15,"props"],[204,25,423,20],[204,26,423,21,"keyboardDismissMode"],[204,45,423,40],[204,50,423,45],[204,59,423,54],[204,61,423,56],[205,12,424,8,"Keyboard"],[205,24,424,16],[205,25,424,16,"Keyboard"],[205,33,424,16],[205,34,424,17,"dismiss"],[205,41,424,24],[205,42,424,25],[205,43,424,26],[206,10,425,6],[207,10,426,6],[207,14,426,10,"_this"],[207,19,426,10],[207,20,426,15,"props"],[207,25,426,20],[207,26,426,21,"hideStatusBar"],[207,39,426,34],[207,41,426,36],[208,12,427,8,"StatusBar"],[208,24,427,17],[208,25,427,17,"StatusBar"],[208,34,427,17],[208,35,427,18,"setHidden"],[208,44,427,27],[208,45,427,28],[208,49,427,32],[208,51,427,34,"_this"],[208,56,427,34],[208,57,427,39,"props"],[208,62,427,44],[208,63,427,45,"statusBarAnimation"],[208,81,427,63],[208,85,427,67],[208,92,427,74],[208,93,427,75],[209,10,428,6],[210,8,429,4],[211,6,430,2],[211,7,430,3],[212,6,430,3,"_this"],[212,11,430,3],[212,12,432,10,"onTapHandlerStateChange"],[212,35,432,33],[212,38,432,36,"_ref3"],[212,43,432,36],[212,47,434,64],[213,8,434,64],[213,12,433,4,"nativeEvent"],[213,23,433,15],[213,26,433,15,"_ref3"],[213,31,433,15],[213,32,433,4,"nativeEvent"],[213,43,433,15],[214,8,435,4],[214,12,436,6,"_this"],[214,17,436,6],[214,18,436,11,"drawerShown"],[214,29,436,22],[214,33,437,6,"nativeEvent"],[214,44,437,17],[214,45,437,18,"oldState"],[214,53,437,26],[214,58,437,31,"State"],[214,64,437,36],[214,65,437,36,"State"],[214,70,437,36],[214,71,437,37,"ACTIVE"],[214,77,437,43],[214,81,438,6,"_this"],[214,86,438,6],[214,87,438,11,"props"],[214,92,438,16],[214,93,438,17,"drawerLockMode"],[214,107,438,31],[214,112,438,36],[214,125,438,49],[214,127,439,6],[215,10,440,6,"_this"],[215,15,440,6],[215,16,440,11,"closeDrawer"],[215,27,440,22],[215,28,440,23],[215,29,440,24],[216,8,441,4],[217,6,442,2],[217,7,442,3],[218,6,442,3,"_this"],[218,11,442,3],[218,12,444,10,"handleRelease"],[218,25,444,23],[218,28,444,26,"_ref4"],[218,33,444,26],[218,37,446,64],[219,8,446,64],[219,12,445,4,"nativeEvent"],[219,23,445,15],[219,26,445,15,"_ref4"],[219,31,445,15],[219,32,445,4,"nativeEvent"],[219,43,445,15],[220,8,447,4],[220,12,447,4,"_this$props"],[220,23,447,4],[220,26,447,56,"_this"],[220,31,447,56],[220,32,447,61,"props"],[220,37,447,66],[221,10,447,12,"drawerWidth"],[221,21,447,23],[221,24,447,23,"_this$props"],[221,35,447,23],[221,36,447,12,"drawerWidth"],[221,47,447,23],[222,10,447,25,"drawerPosition"],[222,24,447,39],[222,27,447,39,"_this$props"],[222,38,447,39],[222,39,447,25,"drawerPosition"],[222,53,447,39],[223,10,447,41,"drawerType"],[223,20,447,51],[223,23,447,51,"_this$props"],[223,34,447,51],[223,35,447,41,"drawerType"],[223,45,447,51],[224,8,448,4],[224,12,448,12,"containerWidth"],[224,26,448,26],[224,29,448,31,"_this"],[224,34,448,31],[224,35,448,36,"state"],[224,40,448,41],[224,41,448,12,"containerWidth"],[224,55,448,26],[225,8,449,4],[225,12,449,24,"dragX"],[225,17,449,29],[225,20,449,56,"nativeEvent"],[225,31,449,67],[225,32,449,10,"translationX"],[225,44,449,22],[226,10,449,31,"velocityX"],[226,19,449,40],[226,22,449,56,"nativeEvent"],[226,33,449,67],[226,34,449,31,"velocityX"],[226,43,449,40],[227,10,449,45,"touchX"],[227,16,449,51],[227,19,449,56,"nativeEvent"],[227,30,449,67],[227,31,449,42,"x"],[227,32,449,43],[228,8,451,4],[228,12,451,8,"drawerPosition"],[228,26,451,22],[228,31,451,27],[228,37,451,33],[228,39,451,35],[229,10,452,6],[230,10,453,6],[231,10,454,6,"dragX"],[231,15,454,11],[231,18,454,14],[231,19,454,15,"dragX"],[231,24,454,20],[232,10,455,6,"touchX"],[232,16,455,12],[232,19,455,15,"containerWidth"],[232,33,455,29],[232,36,455,32,"touchX"],[232,42,455,38],[233,10,456,6,"velocityX"],[233,19,456,15],[233,22,456,18],[233,23,456,19,"velocityX"],[233,32,456,28],[234,8,457,4],[235,8,459,4],[235,12,459,10,"gestureStartX"],[235,25,459,23],[235,28,459,26,"touchX"],[235,34,459,32],[235,37,459,35,"dragX"],[235,42,459,40],[236,8,460,4],[236,12,460,8,"dragOffsetBasedOnStart"],[236,34,460,30],[236,37,460,33],[236,38,460,34],[237,8,462,4],[237,12,462,8,"drawerType"],[237,22,462,18],[237,27,462,23],[237,34,462,30],[237,36,462,32],[238,10,463,6,"dragOffsetBasedOnStart"],[238,32,463,28],[238,35,464,8,"gestureStartX"],[238,48,464,21],[238,51,464,24,"drawerWidth"],[238,62,464,36],[238,65,464,39,"gestureStartX"],[238,78,464,52],[238,81,464,55,"drawerWidth"],[238,92,464,67],[238,95,464,70],[238,96,464,71],[239,8,465,4],[240,8,467,4],[240,12,467,10,"startOffsetX"],[240,24,467,22],[240,27,468,6,"dragX"],[240,32,468,11],[240,35,468,14,"dragOffsetBasedOnStart"],[240,57,468,36],[240,61,468,40,"_this"],[240,66,468,40],[240,67,468,45,"drawerShown"],[240,78,468,56],[240,81,468,59,"drawerWidth"],[240,92,468,70],[240,95,468,74],[240,96,468,75],[240,97,468,76],[241,8,469,4],[241,12,469,10,"projOffsetX"],[241,23,469,21],[241,26,469,24,"startOffsetX"],[241,38,469,36],[241,41,469,39,"DRAG_TOSS"],[241,50,469,48],[241,53,469,51,"velocityX"],[241,62,469,60],[242,8,471,4],[242,12,471,10,"shouldOpen"],[242,22,471,20],[242,25,471,23,"projOffsetX"],[242,36,471,34],[242,39,471,37,"drawerWidth"],[242,50,471,48],[242,53,471,52],[242,54,471,53],[243,8,473,4],[243,12,473,8,"shouldOpen"],[243,22,473,18],[243,24,473,20],[244,10,474,6,"_this"],[244,15,474,6],[244,16,474,11,"animateDrawer"],[244,29,474,24],[244,30,474,25,"startOffsetX"],[244,42,474,37],[244,44,474,39,"drawerWidth"],[244,55,474,50],[244,57,474,53,"velocityX"],[244,66,474,62],[244,67,474,63],[245,8,475,4],[245,9,475,5],[245,15,475,11],[246,10,476,6,"_this"],[246,15,476,6],[246,16,476,11,"animateDrawer"],[246,29,476,24],[246,30,476,25,"startOffsetX"],[246,42,476,37],[246,44,476,39],[246,45,476,40],[246,47,476,42,"velocityX"],[246,56,476,51],[246,57,476,52],[247,8,477,4],[248,6,478,2],[248,7,478,3],[249,6,478,3,"_this"],[249,11,478,3],[249,12,480,10,"updateShowing"],[249,25,480,23],[249,28,480,27,"showing"],[249,35,480,43],[249,39,480,48],[250,8,481,4,"_this"],[250,13,481,4],[250,14,481,9,"drawerShown"],[250,25,481,20],[250,28,481,23,"showing"],[250,35,481,30],[251,8,482,4,"_this"],[251,13,482,4],[251,14,482,9,"accessibilityIsModalView"],[251,38,482,33],[251,39,482,34,"current"],[251,46,482,41],[251,48,482,43,"setNativeProps"],[251,62,482,57],[251,63,482,58],[252,10,483,6,"accessibilityViewIsModal"],[252,34,483,30],[252,36,483,32,"showing"],[253,8,484,4],[253,9,484,5],[253,10,484,6],[254,8,485,4,"_this"],[254,13,485,4],[254,14,485,9,"pointerEventsView"],[254,31,485,26],[254,32,485,27,"current"],[254,39,485,34],[254,41,485,36,"setNativeProps"],[254,55,485,50],[254,56,485,51],[255,10,486,6,"pointerEvents"],[255,23,486,19],[255,25,486,21,"showing"],[255,32,486,28],[255,35,486,31],[255,41,486,37],[255,44,486,40],[256,8,487,4],[256,9,487,5],[256,10,487,6],[257,8,488,4],[257,12,488,4,"_this$props2"],[257,24,488,4],[257,27,488,60,"_this"],[257,32,488,60],[257,33,488,65,"props"],[257,38,488,70],[258,10,488,12,"drawerPosition"],[258,24,488,26],[258,27,488,26,"_this$props2"],[258,39,488,26],[258,40,488,12,"drawerPosition"],[258,54,488,26],[259,10,488,28,"minSwipeDistance"],[259,26,488,44],[259,29,488,44,"_this$props2"],[259,41,488,44],[259,42,488,28,"minSwipeDistance"],[259,58,488,44],[260,10,488,46,"edgeWidth"],[260,19,488,55],[260,22,488,55,"_this$props2"],[260,34,488,55],[260,35,488,46,"edgeWidth"],[260,44,488,55],[261,8,489,4],[261,12,489,10,"fromLeft"],[261,20,489,18],[261,23,489,21,"drawerPosition"],[261,37,489,35],[261,42,489,40],[261,48,489,46],[262,8,490,4],[263,8,491,4],[264,8,492,4],[265,8,493,4],[265,12,493,10,"gestureOrientation"],[265,30,493,28],[265,33,494,6],[265,34,494,7,"fromLeft"],[265,42,494,15],[265,45,494,18],[265,46,494,19],[265,49,494,22],[265,50,494,23],[265,51,494,24],[265,56,494,29,"_this"],[265,61,494,29],[265,62,494,34,"drawerShown"],[265,73,494,45],[265,76,494,48],[265,77,494,49],[265,78,494,50],[265,81,494,53],[265,82,494,54],[265,83,494,55],[266,8,495,4],[267,8,496,4],[268,8,497,4],[269,8,498,4],[269,12,498,10,"hitSlop"],[269,19,498,17],[269,22,498,20,"fromLeft"],[269,30,498,28],[269,33,499,8],[270,10,499,10,"left"],[270,14,499,14],[270,16,499,16],[270,17,499,17],[271,10,499,19,"width"],[271,15,499,24],[271,17,499,26,"showing"],[271,24,499,33],[271,27,499,36,"undefined"],[271,36,499,45],[271,39,499,48,"edgeWidth"],[272,8,499,58],[272,9,499,59],[272,12,500,8],[273,10,500,10,"right"],[273,15,500,15],[273,17,500,17],[273,18,500,18],[274,10,500,20,"width"],[274,15,500,25],[274,17,500,27,"showing"],[274,24,500,34],[274,27,500,37,"undefined"],[274,36,500,46],[274,39,500,49,"edgeWidth"],[275,8,500,59],[275,9,500,60],[276,8,501,4],[277,8,502,4,"_this"],[277,13,502,4],[277,14,502,9,"panGestureHandler"],[277,31,502,26],[277,32,502,27,"current"],[277,39,502,34],[277,41,502,36,"setNativeProps"],[277,55,502,50],[277,56,502,51],[278,10,503,6,"hitSlop"],[278,17,503,13],[279,10,504,6,"activeOffsetX"],[279,23,504,19],[279,25,504,21,"gestureOrientation"],[279,43,504,39],[279,46,504,42,"minSwipeDistance"],[280,8,505,4],[280,9,505,5],[280,10,505,6],[281,6,506,2],[281,7,506,3],[282,6,506,3,"_this"],[282,11,506,3],[282,12,508,10,"animateDrawer"],[282,25,508,23],[282,28,508,26],[282,29,509,4,"fromValue"],[282,38,509,40],[282,40,510,4,"toValue"],[282,47,510,19],[282,49,511,4,"velocity"],[282,57,511,20],[282,59,512,4,"speed"],[282,64,512,18],[282,69,513,7],[283,8,514,4,"_this"],[283,13,514,4],[283,14,514,9,"state"],[283,19,514,14],[283,20,514,15,"dragX"],[283,25,514,20],[283,26,514,21,"setValue"],[283,34,514,29],[283,35,514,30],[283,36,514,31],[283,37,514,32],[284,8,515,4,"_this"],[284,13,515,4],[284,14,515,9,"state"],[284,19,515,14],[284,20,515,15,"touchX"],[284,26,515,21],[284,27,515,22,"setValue"],[284,35,515,30],[284,36,516,6,"_this"],[284,41,516,6],[284,42,516,11,"props"],[284,47,516,16],[284,48,516,17,"drawerPosition"],[284,62,516,31],[284,67,516,36],[284,73,516,42],[284,76,516,45],[284,77,516,46],[284,80,516,49,"_this"],[284,85,516,49],[284,86,516,54,"state"],[284,91,516,59],[284,92,516,60,"containerWidth"],[284,106,517,4],[284,107,517,5],[285,8,519,4],[285,12,519,8,"fromValue"],[285,21,519,17],[285,25,519,21],[285,29,519,25],[285,31,519,27],[286,10,520,6],[286,14,520,10,"nextFramePosition"],[286,31,520,27],[286,34,520,30,"fromValue"],[286,43,520,39],[287,10,521,6],[287,14,521,10,"_this"],[287,19,521,10],[287,20,521,15,"props"],[287,25,521,20],[287,26,521,21,"useNativeAnimations"],[287,45,521,40],[287,47,521,42],[288,12,522,8],[289,12,523,8],[290,12,524,8],[291,12,525,8],[292,12,526,8],[292,16,526,12,"fromValue"],[292,25,526,21],[292,28,526,24,"toValue"],[292,35,526,31],[292,39,526,35,"velocity"],[292,47,526,43],[292,50,526,46],[292,51,526,47],[292,53,526,49],[293,14,527,10,"nextFramePosition"],[293,31,527,27],[293,34,527,30,"Math"],[293,38,527,34],[293,39,527,35,"min"],[293,42,527,38],[293,43,527,39,"fromValue"],[293,52,527,48],[293,55,527,51,"velocity"],[293,63,527,59],[293,66,527,62],[293,70,527,66],[293,72,527,68,"toValue"],[293,79,527,75],[293,80,527,76],[294,12,528,8],[294,13,528,9],[294,19,528,15],[294,23,528,19,"fromValue"],[294,32,528,28],[294,35,528,31,"toValue"],[294,42,528,38],[294,46,528,42,"velocity"],[294,54,528,50],[294,57,528,53],[294,58,528,54],[294,60,528,56],[295,14,529,10,"nextFramePosition"],[295,31,529,27],[295,34,529,30,"Math"],[295,38,529,34],[295,39,529,35,"max"],[295,42,529,38],[295,43,529,39,"fromValue"],[295,52,529,48],[295,55,529,51,"velocity"],[295,63,529,59],[295,66,529,62],[295,70,529,66],[295,72,529,68,"toValue"],[295,79,529,75],[295,80,529,76],[296,12,530,8],[297,10,531,6],[298,10,532,6,"_this"],[298,15,532,6],[298,16,532,11,"state"],[298,21,532,16],[298,22,532,17,"drawerTranslation"],[298,39,532,34],[298,40,532,35,"setValue"],[298,48,532,43],[298,49,532,44,"nextFramePosition"],[298,66,532,61],[298,67,532,62],[299,8,533,4],[300,8,535,4],[300,12,535,10,"willShow"],[300,20,535,18],[300,23,535,21,"toValue"],[300,30,535,28],[300,35,535,33],[300,36,535,34],[301,8,536,4,"_this"],[301,13,536,4],[301,14,536,9,"updateShowing"],[301,27,536,22],[301,28,536,23,"willShow"],[301,36,536,31],[301,37,536,32],[302,8,537,4,"_this"],[302,13,537,4],[302,14,537,9,"emitStateChanged"],[302,30,537,25],[302,31,537,26,"SETTLING"],[302,39,537,34],[302,41,537,36,"willShow"],[302,49,537,44],[302,50,537,45],[303,8,538,4,"_this"],[303,13,538,4],[303,14,538,9,"setState"],[303,22,538,17],[303,23,538,18],[304,10,538,20,"drawerState"],[304,21,538,31],[304,23,538,33,"SETTLING"],[305,8,538,42],[305,9,538,43],[305,10,538,44],[306,8,539,4],[306,12,539,8,"_this"],[306,17,539,8],[306,18,539,13,"props"],[306,23,539,18],[306,24,539,19,"hideStatusBar"],[306,37,539,32],[306,39,539,34],[307,10,540,6,"StatusBar"],[307,22,540,15],[307,23,540,15,"StatusBar"],[307,32,540,15],[307,33,540,16,"setHidden"],[307,42,540,25],[307,43,540,26,"willShow"],[307,51,540,34],[307,53,540,36,"_this"],[307,58,540,36],[307,59,540,41,"props"],[307,64,540,46],[307,65,540,47,"statusBarAnimation"],[307,83,540,65],[307,87,540,69],[307,94,540,76],[307,95,540,77],[308,8,541,4],[309,8,542,4,"Animated"],[309,20,542,12],[309,21,542,12,"Animated"],[309,29,542,12],[309,30,542,13,"spring"],[309,36,542,19],[309,37,542,20,"_this"],[309,42,542,20],[309,43,542,25,"state"],[309,48,542,30],[309,49,542,31,"drawerTranslation"],[309,66,542,48],[309,68,542,50],[310,10,543,6,"velocity"],[310,18,543,14],[311,10,544,6,"bounciness"],[311,20,544,16],[311,22,544,18],[311,23,544,19],[312,10,545,6,"toValue"],[312,17,545,13],[313,10,546,6,"useNativeDriver"],[313,25,546,21],[313,27,546,23,"_this"],[313,32,546,23],[313,33,546,28,"props"],[313,38,546,33],[313,39,546,34,"useNativeAnimations"],[313,58,546,54],[314,10,547,6,"speed"],[314,15,547,11],[314,17,547,13,"speed"],[314,22,547,18],[314,26,547,22,"undefined"],[315,8,548,4],[315,9,548,5],[315,10,548,6],[315,11,548,7,"start"],[315,16,548,12],[315,17,548,13,"_ref5"],[315,22,548,13],[315,26,548,31],[316,10,548,31],[316,14,548,16,"finished"],[316,22,548,24],[316,25,548,24,"_ref5"],[316,30,548,24],[316,31,548,16,"finished"],[316,39,548,24],[317,10,549,6],[317,14,549,10,"finished"],[317,22,549,18],[317,24,549,20],[318,12,550,8,"_this"],[318,17,550,8],[318,18,550,13,"emitStateChanged"],[318,34,550,29],[318,35,550,30,"IDLE"],[318,39,550,34],[318,41,550,36,"willShow"],[318,49,550,44],[318,50,550,45],[319,12,551,8,"_this"],[319,17,551,8],[319,18,551,13,"setState"],[319,26,551,21],[319,27,551,22],[320,14,551,24,"drawerOpened"],[320,26,551,36],[320,28,551,38,"willShow"],[321,12,551,47],[321,13,551,48],[321,14,551,49],[322,12,552,8],[322,16,552,12,"_this"],[322,21,552,12],[322,22,552,17,"state"],[322,27,552,22],[322,28,552,23,"drawerState"],[322,39,552,34],[322,44,552,39,"DRAGGING"],[322,52,552,47],[322,54,552,49],[323,14,553,10],[324,14,554,10],[325,14,555,10,"_this"],[325,19,555,10],[325,20,555,15,"setState"],[325,28,555,23],[325,29,555,24],[326,16,555,26,"drawerState"],[326,27,555,37],[326,29,555,39,"IDLE"],[327,14,555,44],[327,15,555,45],[327,16,555,46],[328,12,556,8],[329,12,557,8],[329,16,557,12,"willShow"],[329,24,557,20],[329,26,557,22],[330,14,558,10,"_this"],[330,19,558,10],[330,20,558,15,"props"],[330,25,558,20],[330,26,558,21,"onDrawerOpen"],[330,38,558,33],[330,41,558,36],[330,42,558,37],[331,12,559,8],[331,13,559,9],[331,19,559,15],[332,14,560,10,"_this"],[332,19,560,10],[332,20,560,15,"props"],[332,25,560,20],[332,26,560,21,"onDrawerClose"],[332,39,560,34],[332,42,560,37],[332,43,560,38],[333,12,561,8],[334,10,562,6],[335,8,563,4],[335,9,563,5],[335,10,563,6],[336,6,564,2],[336,7,564,3],[337,6,566,2],[338,6,566,2,"_this"],[338,11,566,2],[338,12,567,2,"openDrawer"],[338,22,567,12],[338,25,567,15],[338,37,567,55],[339,8,567,55],[339,12,567,16,"options"],[339,19,567,45],[339,22,567,45,"arguments"],[339,31,567,45],[339,32,567,45,"length"],[339,38,567,45],[339,46,567,45,"arguments"],[339,55,567,45],[339,63,567,45,"undefined"],[339,72,567,45],[339,75,567,45,"arguments"],[339,84,567,45],[339,90,567,48],[339,91,567,49],[339,92,567,50],[340,8,568,4,"_this"],[340,13,568,4],[340,14,568,9,"animateDrawer"],[340,27,568,22],[341,8,569,6],[342,8,570,6,"undefined"],[342,17,570,15],[342,19,571,6,"_this"],[342,24,571,6],[342,25,571,11,"props"],[342,30,571,16],[342,31,571,17,"drawerWidth"],[342,42,571,28],[342,44,572,6,"options"],[342,51,572,13],[342,52,572,14,"velocity"],[342,60,572,22],[342,63,572,25,"options"],[342,70,572,32],[342,71,572,33,"velocity"],[342,79,572,41],[342,82,572,44],[342,83,572,45],[342,85,573,6,"options"],[342,92,573,13],[342,93,573,14,"speed"],[342,98,574,4],[342,99,574,5],[344,8,576,4],[345,8,577,4],[346,8,578,4,"_this"],[346,13,578,4],[346,14,578,9,"forceUpdate"],[346,25,578,20],[346,26,578,21],[346,27,578,22],[347,6,579,2],[347,7,579,3],[348,6,579,3,"_this"],[348,11,579,3],[348,12,581,2,"closeDrawer"],[348,23,581,13],[348,26,581,16],[348,38,581,56],[349,8,581,56],[349,12,581,17,"options"],[349,19,581,46],[349,22,581,46,"arguments"],[349,31,581,46],[349,32,581,46,"length"],[349,38,581,46],[349,46,581,46,"arguments"],[349,55,581,46],[349,63,581,46,"undefined"],[349,72,581,46],[349,75,581,46,"arguments"],[349,84,581,46],[349,90,581,49],[349,91,581,50],[349,92,581,51],[350,8,582,4],[351,8,583,4,"_this"],[351,13,583,4],[351,14,583,9,"animateDrawer"],[351,27,583,22],[351,28,584,6,"undefined"],[351,37,584,15],[351,39,585,6],[351,40,585,7],[351,42,586,6,"options"],[351,49,586,13],[351,50,586,14,"velocity"],[351,58,586,22],[351,61,586,25,"options"],[351,68,586,32],[351,69,586,33,"velocity"],[351,77,586,41],[351,80,586,44],[351,81,586,45],[351,83,587,6,"options"],[351,90,587,13],[351,91,587,14,"speed"],[351,96,588,4],[351,97,588,5],[353,8,590,4],[354,8,591,4],[355,8,592,4,"_this"],[355,13,592,4],[355,14,592,9,"forceUpdate"],[355,25,592,20],[355,26,592,21],[355,27,592,22],[356,6,593,2],[356,7,593,3],[357,6,593,3,"_this"],[357,11,593,3],[357,12,595,10,"renderOverlay"],[357,25,595,23],[357,28,595,26],[357,34,595,32],[358,8,596,4],[359,8,597,4],[359,12,597,4,"invariant"],[359,21,597,13],[359,22,597,13,"default"],[359,29,597,13],[359,31,597,14,"_this"],[359,36,597,14],[359,37,597,19,"openValue"],[359,46,597,28],[359,48,597,30],[359,63,597,45],[359,64,597,46],[360,8,598,4],[360,12,598,8,"overlayOpacity"],[360,26,598,22],[361,8,600,4],[361,12,600,8,"_this"],[361,17,600,8],[361,18,600,13,"state"],[361,23,600,18],[361,24,600,19,"drawerState"],[361,35,600,30],[361,40,600,35,"IDLE"],[361,44,600,39],[361,46,600,41],[362,10,601,6,"overlayOpacity"],[362,24,601,20],[362,27,601,23,"_this"],[362,32,601,23],[362,33,601,28,"openValue"],[362,42,601,37],[363,8,602,4],[363,9,602,5],[363,15,602,11],[364,10,603,6,"overlayOpacity"],[364,24,603,20],[364,27,603,23,"_this"],[364,32,603,23],[364,33,603,28,"state"],[364,38,603,33],[364,39,603,34,"drawerOpened"],[364,51,603,46],[364,54,603,49],[364,55,603,50],[364,58,603,53],[364,59,603,54],[365,8,604,4],[366,8,606,4],[366,12,606,10,"dynamicOverlayStyles"],[366,32,606,30],[366,35,606,33],[367,10,607,6,"opacity"],[367,17,607,13],[367,19,607,15,"overlayOpacity"],[367,33,607,29],[368,10,608,6,"backgroundColor"],[368,25,608,21],[368,27,608,23,"_this"],[368,32,608,23],[368,33,608,28,"props"],[368,38,608,33],[368,39,608,34,"overlayColor"],[369,8,609,4],[369,9,609,5],[370,8,611,4],[370,28,612,6],[370,32,612,6,"_reactJsxDevRuntime"],[370,51,612,6],[370,52,612,6,"jsxDEV"],[370,58,612,6],[370,60,612,7,"_handlersTapGestureHandler"],[370,86,612,24],[370,87,612,24,"TapGestureHandler"],[370,104,612,24],[371,10,612,25,"onHandlerStateChange"],[371,30,612,45],[371,32,612,47,"_this"],[371,37,612,47],[371,38,612,52,"onTapHandlerStateChange"],[371,61,612,76],[372,10,612,76,"children"],[372,18,612,76],[372,33,613,8],[372,37,613,8,"_reactJsxDevRuntime"],[372,56,613,8],[372,57,613,8,"jsxDEV"],[372,63,613,8],[372,65,613,9,"_reactNative"],[372,77,613,17],[372,78,613,17,"Animated"],[372,86,613,17],[372,87,613,18,"View"],[372,91,613,22],[373,12,614,10,"pointerEvents"],[373,25,614,23],[373,27,614,25,"_this"],[373,32,614,25],[373,33,614,30,"drawerShown"],[373,44,614,41],[373,47,614,44],[373,53,614,50],[373,56,614,53],[373,62,614,60],[374,12,615,10,"ref"],[374,15,615,13],[374,17,615,15,"_this"],[374,22,615,15],[374,23,615,20,"pointerEventsView"],[374,40,615,38],[375,12,616,10,"style"],[375,17,616,15],[375,19,616,17],[375,20,616,18,"styles"],[375,26,616,24],[375,27,616,25,"overlay"],[375,34,616,32],[375,36,616,34,"dynamicOverlayStyles"],[375,56,616,54],[376,10,616,56],[377,12,616,56,"fileName"],[377,20,616,56],[377,22,616,56,"_jsxFileName"],[377,34,616,56],[378,12,616,56,"lineNumber"],[378,22,616,56],[379,12,616,56,"columnNumber"],[379,24,616,56],[380,10,616,56],[380,13,616,56,"_this"],[380,18,617,9],[381,8,617,10],[382,10,617,10,"fileName"],[382,18,617,10],[382,20,617,10,"_jsxFileName"],[382,32,617,10],[383,10,617,10,"lineNumber"],[383,20,617,10],[384,10,617,10,"columnNumber"],[384,22,617,10],[385,8,617,10],[385,11,617,10,"_this"],[385,16,618,25],[385,17,618,26],[386,6,620,2],[386,7,620,3],[387,6,620,3,"_this"],[387,11,620,3],[387,12,622,10,"renderDrawer"],[387,24,622,22],[387,27,622,25],[387,33,622,31],[388,8,623,4],[388,12,623,4,"_this$props3"],[388,24,623,4],[388,27,630,8,"_this"],[388,32,630,8],[388,33,630,13,"props"],[388,38,630,18],[389,10,624,6,"drawerBackgroundColor"],[389,31,624,27],[389,34,624,27,"_this$props3"],[389,46,624,27],[389,47,624,6,"drawerBackgroundColor"],[389,68,624,27],[390,10,625,6,"drawerWidth"],[390,21,625,17],[390,24,625,17,"_this$props3"],[390,36,625,17],[390,37,625,6,"drawerWidth"],[390,48,625,17],[391,10,626,6,"drawerPosition"],[391,24,626,20],[391,27,626,20,"_this$props3"],[391,39,626,20],[391,40,626,6,"drawerPosition"],[391,54,626,20],[392,10,627,6,"drawerType"],[392,20,627,16],[392,23,627,16,"_this$props3"],[392,35,627,16],[392,36,627,6,"drawerType"],[392,46,627,16],[393,10,628,6,"drawerContainerStyle"],[393,30,628,26],[393,33,628,26,"_this$props3"],[393,45,628,26],[393,46,628,6,"drawerContainerStyle"],[393,66,628,26],[394,10,629,6,"contentContainerStyle"],[394,31,629,27],[394,34,629,27,"_this$props3"],[394,46,629,27],[394,47,629,6,"contentContainerStyle"],[394,68,629,27],[395,8,632,4],[395,12,632,10,"fromLeft"],[395,20,632,18],[395,23,632,21,"drawerPosition"],[395,37,632,35],[395,42,632,40],[395,48,632,46],[396,8,633,4],[396,12,633,10,"drawerSlide"],[396,23,633,21],[396,26,633,24,"drawerType"],[396,36,633,34],[396,41,633,39],[396,47,633,45],[397,8,634,4],[397,12,634,10,"containerSlide"],[397,26,634,24],[397,29,634,27,"drawerType"],[397,39,634,37],[397,44,634,42],[397,51,634,49],[399,8,636,4],[400,8,637,4],[401,8,638,4],[402,8,639,4],[403,8,640,4],[403,12,640,10,"reverseContentDirection"],[403,35,640,33],[403,38,640,36,"I18nManager"],[403,50,640,47],[403,51,640,47,"I18nManager"],[403,62,640,47],[403,63,640,48,"isRTL"],[403,68,640,53],[403,71,640,56,"fromLeft"],[403,79,640,64],[403,82,640,67],[403,83,640,68,"fromLeft"],[403,91,640,76],[404,8,642,4],[404,12,642,10,"dynamicDrawerStyles"],[404,31,642,29],[404,34,642,32],[405,10,643,6,"backgroundColor"],[405,25,643,21],[405,27,643,23,"drawerBackgroundColor"],[405,48,643,44],[406,10,644,6,"width"],[406,15,644,11],[406,17,644,13,"drawerWidth"],[407,8,645,4],[407,9,645,5],[408,8,646,4],[408,12,646,10,"openValue"],[408,21,646,19],[408,24,646,22,"_this"],[408,29,646,22],[408,30,646,27,"openValue"],[408,39,646,36],[409,8,647,4],[409,12,647,4,"invariant"],[409,21,647,13],[409,22,647,13,"default"],[409,29,647,13],[409,31,647,14,"openValue"],[409,40,647,23],[409,42,647,25],[409,57,647,40],[409,58,647,41],[410,8,649,4],[410,12,649,8,"containerStyles"],[410,27,649,23],[411,8,650,4],[411,12,650,8,"containerSlide"],[411,26,650,22],[411,28,650,24],[412,10,651,6],[412,14,651,12,"containerTranslateX"],[412,33,651,31],[412,36,651,34,"openValue"],[412,45,651,43],[412,46,651,44,"interpolate"],[412,57,651,55],[412,58,651,56],[413,12,652,8,"inputRange"],[413,22,652,18],[413,24,652,20],[413,25,652,21],[413,26,652,22],[413,28,652,24],[413,29,652,25],[413,30,652,26],[414,12,653,8,"outputRange"],[414,23,653,19],[414,25,653,21,"fromLeft"],[414,33,653,29],[414,36,653,32],[414,37,653,33],[414,38,653,34],[414,40,653,36,"drawerWidth"],[414,51,653,47],[414,52,653,49],[414,55,653,52],[414,56,653,53],[414,57,653,54],[414,59,653,56],[414,60,653,57,"drawerWidth"],[414,71,653,69],[414,72,653,70],[415,12,654,8,"extrapolate"],[415,23,654,19],[415,25,654,21],[416,10,655,6],[416,11,655,7],[416,12,655,8],[417,10,656,6,"containerStyles"],[417,25,656,21],[417,28,656,24],[418,12,657,8,"transform"],[418,21,657,17],[418,23,657,19],[418,24,657,20],[419,14,657,22,"translateX"],[419,24,657,32],[419,26,657,34,"containerTranslateX"],[420,12,657,54],[420,13,657,55],[421,10,658,6],[421,11,658,7],[422,8,659,4],[423,8,661,4],[423,12,661,8,"drawerTranslateX"],[423,28,661,56],[423,31,661,59],[423,32,661,60],[424,8,662,4],[424,12,662,8,"drawerSlide"],[424,23,662,19],[424,25,662,21],[425,10,663,6],[425,14,663,12,"closedDrawerOffset"],[425,32,663,30],[425,35,663,33,"fromLeft"],[425,43,663,41],[425,46,663,44],[425,47,663,45,"drawerWidth"],[425,58,663,57],[425,61,663,60,"drawerWidth"],[425,72,663,72],[426,10,664,6],[426,14,664,10,"_this"],[426,19,664,10],[426,20,664,15,"state"],[426,25,664,20],[426,26,664,21,"drawerState"],[426,37,664,32],[426,42,664,37,"IDLE"],[426,46,664,41],[426,48,664,43],[427,12,665,8,"drawerTranslateX"],[427,28,665,24],[427,31,665,27,"openValue"],[427,40,665,36],[427,41,665,37,"interpolate"],[427,52,665,48],[427,53,665,49],[428,14,666,10,"inputRange"],[428,24,666,20],[428,26,666,22],[428,27,666,23],[428,28,666,24],[428,30,666,26],[428,31,666,27],[428,32,666,28],[429,14,667,10,"outputRange"],[429,25,667,21],[429,27,667,23],[429,28,667,24,"closedDrawerOffset"],[429,46,667,42],[429,48,667,44],[429,49,667,45],[429,50,667,46],[430,14,668,10,"extrapolate"],[430,25,668,21],[430,27,668,23],[431,12,669,8],[431,13,669,9],[431,14,669,10],[432,10,670,6],[432,11,670,7],[432,17,670,13],[433,12,671,8,"drawerTranslateX"],[433,28,671,24],[433,31,671,27,"_this"],[433,36,671,27],[433,37,671,32,"state"],[433,42,671,37],[433,43,671,38,"drawerOpened"],[433,55,671,50],[433,58,671,53],[433,59,671,54],[433,62,671,57,"closedDrawerOffset"],[433,80,671,75],[434,10,672,6],[435,8,673,4],[436,8,674,4],[436,12,674,10,"drawerStyles"],[436,24,677,5],[436,27,677,8],[437,10,678,6,"transform"],[437,19,678,15],[437,21,678,17],[437,22,678,18],[438,12,678,20,"translateX"],[438,22,678,30],[438,24,678,32,"drawerTranslateX"],[439,10,678,49],[439,11,678,50],[439,12,678,51],[440,10,679,6,"flexDirection"],[440,23,679,19],[440,25,679,21,"reverseContentDirection"],[440,48,679,44],[440,51,679,47],[440,64,679,60],[440,67,679,63],[441,8,680,4],[441,9,680,5],[442,8,682,4],[442,28,683,6],[442,32,683,6,"_reactJsxDevRuntime"],[442,51,683,6],[442,52,683,6,"jsxDEV"],[442,58,683,6],[442,60,683,7,"_reactNative"],[442,72,683,15],[442,73,683,15,"Animated"],[442,81,683,15],[442,82,683,16,"View"],[442,86,683,20],[443,10,683,21,"style"],[443,15,683,26],[443,17,683,28,"styles"],[443,23,683,34],[443,24,683,35,"main"],[443,28,683,40],[444,10,683,41,"onLayout"],[444,18,683,49],[444,20,683,51,"_this"],[444,25,683,51],[444,26,683,56,"handleContainerLayout"],[444,47,683,78],[445,10,683,78,"children"],[445,18,683,78],[445,34,684,8],[445,38,684,8,"_reactJsxDevRuntime"],[445,57,684,8],[445,58,684,8,"jsxDEV"],[445,64,684,8],[445,66,684,9,"_reactNative"],[445,78,684,17],[445,79,684,17,"Animated"],[445,87,684,17],[445,88,684,18,"View"],[445,92,684,22],[446,12,685,10,"style"],[446,17,685,15],[446,19,685,17],[446,20,686,12,"drawerType"],[446,30,686,22],[446,35,686,27],[446,42,686,34],[446,45,687,16,"styles"],[446,51,687,22],[446,52,687,23,"containerOnBack"],[446,67,687,38],[446,70,688,16,"styles"],[446,76,688,22],[446,77,688,23,"containerInFront"],[446,93,688,39],[446,95,689,12,"containerStyles"],[446,110,689,27],[446,112,690,12,"contentContainerStyle"],[446,133,690,33],[446,134,691,12],[447,12,692,10,"importantForAccessibility"],[447,37,692,35],[447,39,693,12,"_this"],[447,44,693,12],[447,45,693,17,"drawerShown"],[447,56,693,28],[447,59,693,31],[447,80,693,52],[447,83,693,55],[447,88,694,11],[448,12,694,11,"children"],[448,20,694,11],[448,23,695,11],[448,30,695,18,"_this"],[448,35,695,18],[448,36,695,23,"props"],[448,41,695,28],[448,42,695,29,"children"],[448,50,695,37],[448,55,695,42],[448,65,695,52],[448,68,696,14,"_this"],[448,73,696,14],[448,74,696,19,"props"],[448,79,696,24],[448,80,696,25,"children"],[448,88,696,33],[448,89,696,34,"_this"],[448,94,696,34],[448,95,696,39,"openValue"],[448,104,696,48],[448,105,696,49],[448,108,697,14,"_this"],[448,113,697,14],[448,114,697,19,"props"],[448,119,697,24],[448,120,697,25,"children"],[448,128,697,33],[448,130,698,11,"_this"],[448,135,698,11],[448,136,698,16,"renderOverlay"],[448,149,698,29],[448,150,698,30],[448,151,698,31],[449,10,698,31],[450,12,698,31,"fileName"],[450,20,698,31],[450,22,698,31,"_jsxFileName"],[450,34,698,31],[451,12,698,31,"lineNumber"],[451,22,698,31],[452,12,698,31,"columnNumber"],[452,24,698,31],[453,10,698,31],[453,13,698,31,"_this"],[453,18,699,23],[453,19,699,24],[453,34,700,8],[453,38,700,8,"_reactJsxDevRuntime"],[453,57,700,8],[453,58,700,8,"jsxDEV"],[453,64,700,8],[453,66,700,9,"_reactNative"],[453,78,700,17],[453,79,700,17,"Animated"],[453,87,700,17],[453,88,700,18,"View"],[453,92,700,22],[454,12,701,10,"pointerEvents"],[454,25,701,23],[454,27,701,24],[454,37,701,34],[455,12,702,10,"ref"],[455,15,702,13],[455,17,702,15,"_this"],[455,22,702,15],[455,23,702,20,"accessibilityIsModalView"],[455,47,702,45],[456,12,703,10,"accessibilityViewIsModal"],[456,36,703,34],[456,38,703,36,"_this"],[456,43,703,36],[456,44,703,41,"drawerShown"],[456,55,703,53],[457,12,704,10,"style"],[457,17,704,15],[457,19,704,17],[457,20,704,18,"styles"],[457,26,704,24],[457,27,704,25,"drawerContainer"],[457,42,704,40],[457,44,704,42,"drawerStyles"],[457,56,704,54],[457,58,704,56,"drawerContainerStyle"],[457,78,704,76],[457,79,704,78],[458,12,704,78,"children"],[458,20,704,78],[458,35,705,10],[458,39,705,10,"_reactJsxDevRuntime"],[458,58,705,10],[458,59,705,10,"jsxDEV"],[458,65,705,10],[458,67,705,11,"_reactNative"],[458,79,705,15],[458,80,705,15,"View"],[458,84,705,15],[459,14,705,16,"style"],[459,19,705,21],[459,21,705,23,"dynamicDrawerStyles"],[459,40,705,43],[460,14,705,43,"children"],[460,22,705,43],[460,24,706,13,"_this"],[460,29,706,13],[460,30,706,18,"props"],[460,35,706,23],[460,36,706,24,"renderNavigationView"],[460,56,706,44],[460,57,706,45,"_this"],[460,62,706,45],[460,63,706,50,"openValue"],[460,72,706,77],[461,12,706,78],[462,14,706,78,"fileName"],[462,22,706,78],[462,24,706,78,"_jsxFileName"],[462,36,706,78],[463,14,706,78,"lineNumber"],[463,24,706,78],[464,14,706,78,"columnNumber"],[464,26,706,78],[465,12,706,78],[465,15,706,78,"_this"],[465,20,707,16],[466,10,707,17],[467,12,707,17,"fileName"],[467,20,707,17],[467,22,707,17,"_jsxFileName"],[467,34,707,17],[468,12,707,17,"lineNumber"],[468,22,707,17],[469,12,707,17,"columnNumber"],[469,24,707,17],[470,10,707,17],[470,13,707,17,"_this"],[470,18,708,23],[470,19,708,24],[471,8,708,24],[472,10,708,24,"fileName"],[472,18,708,24],[472,20,708,24,"_jsxFileName"],[472,32,708,24],[473,10,708,24,"lineNumber"],[473,20,708,24],[474,10,708,24,"columnNumber"],[474,22,708,24],[475,8,708,24],[475,11,708,24,"_this"],[475,16,709,21],[475,17,709,22],[476,6,711,2],[476,7,711,3],[477,6,711,3,"_this"],[477,11,711,3],[477,12,713,10,"setPanGestureRef"],[477,28,713,26],[477,31,713,30,"ref"],[477,34,713,52],[477,38,713,57],[478,8,714,4],[479,8,715,4],[480,8,717,6,"_this"],[480,13,717,6],[480,14,717,11,"panGestureHandler"],[480,31,717,28],[480,32,718,6,"current"],[480,39,718,13],[480,42,718,16,"ref"],[480,45,718,19],[481,8,719,4,"_this"],[481,13,719,4],[481,14,719,9,"props"],[481,19,719,14],[481,20,719,15,"onGestureRef"],[481,32,719,27],[481,35,719,30,"ref"],[481,38,719,33],[481,39,719,34],[482,6,720,2],[482,7,720,3],[483,6,250,4],[483,10,250,10,"dragX"],[483,16,250,15],[483,19,250,18],[483,23,250,22,"Animated"],[483,35,250,30],[483,36,250,30,"Animated"],[483,44,250,30],[483,45,250,31,"Value"],[483,50,250,36],[483,51,250,37],[483,52,250,38],[483,53,250,39],[484,6,251,4],[484,10,251,10,"touchX"],[484,17,251,16],[484,20,251,19],[484,24,251,23,"Animated"],[484,36,251,31],[484,37,251,31,"Animated"],[484,45,251,31],[484,46,251,32,"Value"],[484,51,251,37],[484,52,251,38],[484,53,251,39],[484,54,251,40],[485,6,252,4],[485,10,252,10,"drawerTranslation"],[485,28,252,27],[485,31,252,30],[485,35,252,34,"Animated"],[485,47,252,42],[485,48,252,42,"Animated"],[485,56,252,42],[485,57,252,43,"Value"],[485,62,252,48],[485,63,252,49],[485,64,252,50],[485,65,252,51],[486,6,254,4,"_this"],[486,11,254,4],[486,12,254,9,"state"],[486,17,254,14],[486,20,254,17],[487,8,255,6,"dragX"],[487,13,255,11],[487,15,255,6,"dragX"],[487,21,255,11],[488,8,256,6,"touchX"],[488,14,256,12],[488,16,256,6,"touchX"],[488,23,256,12],[489,8,257,6,"drawerTranslation"],[489,25,257,23],[489,27,257,6,"drawerTranslation"],[489,45,257,23],[490,8,258,6,"containerWidth"],[490,22,258,20],[490,24,258,22],[490,25,258,23],[491,8,259,6,"drawerState"],[491,19,259,17],[491,21,259,19,"IDLE"],[491,25,259,23],[492,8,260,6,"drawerOpened"],[492,20,260,18],[492,22,260,20],[493,6,261,4],[493,7,261,5],[494,6,263,4,"_this"],[494,11,263,4],[494,12,263,9,"updateAnimatedEvent"],[494,31,263,28],[494,32,263,29,"props"],[494,38,263,34],[494,40,263,36,"_this"],[494,45,263,36],[494,46,263,41,"state"],[494,51,263,46],[494,52,263,47],[495,6,263,48],[495,13,263,48,"_this"],[495,18,263,48],[496,4,264,2],[497,4,264,3],[497,8,264,3,"_inherits"],[497,17,264,3],[497,18,264,3,"default"],[497,25,264,3],[497,27,264,3,"DrawerLayout"],[497,39,264,3],[497,41,264,3,"_Component"],[497,51,264,3],[498,4,264,3],[498,15,264,3,"_createClass"],[498,27,264,3],[498,28,264,3,"default"],[498,35,264,3],[498,37,264,3,"DrawerLayout"],[498,49,264,3],[499,6,264,3,"key"],[499,9,264,3],[500,6,264,3,"value"],[500,11,264,3],[500,13,266,2],[500,22,266,2,"shouldComponentUpdate"],[500,43,266,23,"shouldComponentUpdate"],[500,44,266,24,"props"],[500,49,266,48],[500,51,266,50,"state"],[500,56,266,74],[500,58,266,76],[501,8,267,4],[501,12,268,6],[501,16,268,10],[501,17,268,11,"props"],[501,22,268,16],[501,23,268,17,"drawerPosition"],[501,37,268,31],[501,42,268,36,"props"],[501,47,268,41],[501,48,268,42,"drawerPosition"],[501,62,268,56],[501,66,269,6],[501,70,269,10],[501,71,269,11,"props"],[501,76,269,16],[501,77,269,17,"drawerWidth"],[501,88,269,28],[501,93,269,33,"props"],[501,98,269,38],[501,99,269,39,"drawerWidth"],[501,110,269,50],[501,114,270,6],[501,118,270,10],[501,119,270,11,"props"],[501,124,270,16],[501,125,270,17,"drawerType"],[501,135,270,27],[501,140,270,32,"props"],[501,145,270,37],[501,146,270,38,"drawerType"],[501,156,270,48],[501,160,271,6],[501,164,271,10],[501,165,271,11,"state"],[501,170,271,16],[501,171,271,17,"containerWidth"],[501,185,271,31],[501,190,271,36,"state"],[501,195,271,41],[501,196,271,42,"containerWidth"],[501,210,271,56],[501,212,272,6],[502,10,273,6],[502,14,273,10],[502,15,273,11,"updateAnimatedEvent"],[502,34,273,30],[502,35,273,31,"props"],[502,40,273,36],[502,42,273,38,"state"],[502,47,273,43],[502,48,273,44],[503,8,274,4],[504,8,276,4],[504,15,276,11],[504,19,276,15],[505,6,277,2],[506,4,277,3],[507,6,277,3,"key"],[507,9,277,3],[508,6,277,3,"value"],[508,11,277,3],[508,13,722,2],[508,22,722,2,"render"],[508,28,722,8,"render"],[508,29,722,8],[508,31,722,11],[509,8,723,4],[509,12,723,4,"_this$props4"],[509,24,723,4],[509,27,724,6],[509,31,724,10],[509,32,724,11,"props"],[509,37,724,16],[510,10,723,12,"drawerPosition"],[510,24,723,26],[510,27,723,26,"_this$props4"],[510,39,723,26],[510,40,723,12,"drawerPosition"],[510,54,723,26],[511,10,723,28,"drawerLockMode"],[511,24,723,42],[511,27,723,42,"_this$props4"],[511,39,723,42],[511,40,723,28,"drawerLockMode"],[511,54,723,42],[512,10,723,44,"edgeWidth"],[512,19,723,53],[512,22,723,53,"_this$props4"],[512,34,723,53],[512,35,723,44,"edgeWidth"],[512,44,723,53],[513,10,723,55,"minSwipeDistance"],[513,26,723,71],[513,29,723,71,"_this$props4"],[513,41,723,71],[513,42,723,55,"minSwipeDistance"],[513,58,723,71],[514,8,726,4],[514,12,726,10,"fromLeft"],[514,20,726,18],[514,23,726,21,"drawerPosition"],[514,37,726,35],[514,42,726,40],[514,48,726,46],[516,8,728,4],[517,8,729,4],[518,8,730,4],[519,8,731,4],[519,12,731,10,"gestureOrientation"],[519,30,731,28],[519,33,732,6],[519,34,732,7,"fromLeft"],[519,42,732,15],[519,45,732,18],[519,46,732,19],[519,49,732,22],[519,50,732,23],[519,51,732,24],[519,56,732,29],[519,60,732,33],[519,61,732,34,"drawerShown"],[519,72,732,45],[519,75,732,48],[519,76,732,49],[519,77,732,50],[519,80,732,53],[519,81,732,54],[519,82,732,55],[521,8,734,4],[522,8,735,4],[523,8,736,4],[524,8,737,4],[524,12,737,10,"hitSlop"],[524,19,737,17],[524,22,737,20,"fromLeft"],[524,30,737,28],[524,33,738,8],[525,10,738,10,"left"],[525,14,738,14],[525,16,738,16],[525,17,738,17],[526,10,738,19,"width"],[526,15,738,24],[526,17,738,26],[526,21,738,30],[526,22,738,31,"drawerShown"],[526,33,738,42],[526,36,738,45,"undefined"],[526,45,738,54],[526,48,738,57,"edgeWidth"],[527,8,738,67],[527,9,738,68],[527,12,739,8],[528,10,739,10,"right"],[528,15,739,15],[528,17,739,17],[528,18,739,18],[529,10,739,20,"width"],[529,15,739,25],[529,17,739,27],[529,21,739,31],[529,22,739,32,"drawerShown"],[529,33,739,43],[529,36,739,46,"undefined"],[529,45,739,55],[529,48,739,58,"edgeWidth"],[530,8,739,68],[530,9,739,69],[531,8,741,4],[531,28,742,6],[531,32,742,6,"_reactJsxDevRuntime"],[531,51,742,6],[531,52,742,6,"jsxDEV"],[531,58,742,6],[531,60,742,7,"_handlersPanGestureHandler"],[531,86,742,24],[531,87,742,24,"PanGestureHandler"],[531,104,742,24],[531,105,743,8],[532,8,743,8],[533,10,744,8,"userSelect"],[533,20,744,18],[533,22,744,20],[533,26,744,24],[533,27,744,25,"props"],[533,32,744,30],[533,33,744,31,"userSelect"],[533,43,744,42],[534,10,745,8,"activeCursor"],[534,22,745,20],[534,24,745,22],[534,28,745,26],[534,29,745,27,"props"],[534,34,745,32],[534,35,745,33,"activeCursor"],[534,47,745,46],[535,10,746,8,"mouseButton"],[535,21,746,19],[535,23,746,21],[535,27,746,25],[535,28,746,26,"props"],[535,33,746,31],[535,34,746,32,"mouseButton"],[535,45,746,44],[536,10,747,8,"enableContextMenu"],[536,27,747,25],[536,29,747,27],[536,33,747,31],[536,34,747,32,"props"],[536,39,747,37],[536,40,747,38,"enableContextMenu"],[536,57,747,56],[537,10,748,8,"ref"],[537,13,748,11],[537,15,748,13],[537,19,748,17],[537,20,748,18,"setPanGestureRef"],[537,36,748,35],[538,10,749,8,"hitSlop"],[538,17,749,15],[538,19,749,17,"hitSlop"],[538,26,749,25],[539,10,750,8,"activeOffsetX"],[539,23,750,21],[539,25,750,23,"gestureOrientation"],[539,43,750,41],[539,46,750,44,"minSwipeDistance"],[539,62,750,62],[540,10,751,8,"failOffsetY"],[540,21,751,19],[540,23,751,21],[540,24,751,22],[540,25,751,23],[540,27,751,25],[540,29,751,27],[540,31,751,29],[540,32,751,31],[541,10,752,8,"onGestureEvent"],[541,24,752,22],[541,26,752,24],[541,30,752,28],[541,31,752,29,"onGestureEvent"],[541,45,752,44],[542,10,753,8,"onHandlerStateChange"],[542,30,753,28],[542,32,753,30],[542,36,753,34],[542,37,753,35,"openingHandlerStateChange"],[542,62,753,61],[543,10,754,8,"enableTrackpadTwoFingerGesture"],[543,40,754,38],[543,42,755,10],[543,46,755,14],[543,47,755,15,"props"],[543,52,755,20],[543,53,755,21,"enableTrackpadTwoFingerGesture"],[543,83,756,9],[544,10,757,8,"enabled"],[544,17,757,15],[544,19,758,10,"drawerLockMode"],[544,33,758,24],[544,38,758,29],[544,53,758,44],[544,57,758,48,"drawerLockMode"],[544,71,758,62],[544,76,758,67],[544,89,759,9],[545,10,759,9,"children"],[545,18,759,9],[545,20,760,9],[545,24,760,13],[545,25,760,14,"renderDrawer"],[545,37,760,26],[545,38,760,27],[546,8,760,28],[547,10,760,28,"fileName"],[547,18,760,28],[547,20,760,28,"_jsxFileName"],[547,32,760,28],[548,10,760,28,"lineNumber"],[548,20,760,28],[549,10,760,28,"columnNumber"],[549,22,760,28],[550,8,760,28],[550,15,761,25],[550,16,761,26],[551,6,763,2],[552,4,763,3],[553,2,763,3],[553,4,231,42,"Component"],[553,10,231,51],[553,11,231,51,"Component"],[553,20,231,51],[554,2,231,21,"DrawerLayout"],[554,14,231,33],[554,15,235,9,"defaultProps"],[554,27,235,21],[554,30,235,24],[555,4,236,4,"drawerWidth"],[555,15,236,15],[555,17,236,17],[555,20,236,20],[556,4,237,4,"drawerPosition"],[556,18,237,18],[556,20,237,20],[556,26,237,26],[557,4,238,4,"useNativeAnimations"],[557,23,238,23],[557,25,238,25],[557,29,238,29],[558,4,239,4,"drawerType"],[558,14,239,14],[558,16,239,16],[558,23,239,23],[559,4,240,4,"edgeWidth"],[559,13,240,13],[559,15,240,15],[559,17,240,17],[560,4,241,4,"minSwipeDistance"],[560,20,241,20],[560,22,241,22],[560,23,241,23],[561,4,242,4,"overlayColor"],[561,16,242,16],[561,18,242,18],[561,38,242,38],[562,4,243,4,"drawerLockMode"],[562,18,243,18],[562,20,243,20],[562,30,243,30],[563,4,244,4,"enableTrackpadTwoFingerGesture"],[563,34,244,34],[563,36,244,36],[564,2,245,2],[564,3,245,3],[565,2,231,21,"DrawerLayout"],[565,14,231,33],[565,15,290,9,"positions"],[565,24,290,18],[565,27,290,21],[566,4,291,4,"Left"],[566,8,291,8],[566,10,291,10],[566,16,291,16],[567,4,292,4,"Right"],[567,9,292,9],[567,11,292,11],[568,2,293,2],[568,3,293,3],[569,2,766,0],[569,6,766,6,"styles"],[569,12,766,12],[569,15,766,15,"StyleSheet"],[569,27,766,25],[569,28,766,25,"StyleSheet"],[569,38,766,25],[569,39,766,26,"create"],[569,45,766,32],[569,46,766,33],[570,4,767,2,"drawerContainer"],[570,19,767,17],[570,21,767,19],[571,6,768,4],[571,9,768,7,"StyleSheet"],[571,21,768,17],[571,22,768,17,"StyleSheet"],[571,32,768,17],[571,33,768,18,"absoluteFillObject"],[571,51,768,36],[572,6,769,4,"zIndex"],[572,12,769,10],[572,14,769,12],[572,18,769,16],[573,6,770,4,"flexDirection"],[573,19,770,17],[573,21,770,19],[574,4,771,2],[574,5,771,3],[575,4,772,2,"containerInFront"],[575,20,772,18],[575,22,772,20],[576,6,773,4],[576,9,773,7,"StyleSheet"],[576,21,773,17],[576,22,773,17,"StyleSheet"],[576,32,773,17],[576,33,773,18,"absoluteFillObject"],[576,51,773,36],[577,6,774,4,"zIndex"],[577,12,774,10],[577,14,774,12],[578,4,775,2],[578,5,775,3],[579,4,776,2,"containerOnBack"],[579,19,776,17],[579,21,776,19],[580,6,777,4],[580,9,777,7,"StyleSheet"],[580,21,777,17],[580,22,777,17,"StyleSheet"],[580,32,777,17],[580,33,777,18,"absoluteFillObject"],[581,4,778,2],[581,5,778,3],[582,4,779,2,"main"],[582,8,779,6],[582,10,779,8],[583,6,780,4,"flex"],[583,10,780,8],[583,12,780,10],[583,13,780,11],[584,6,781,4,"zIndex"],[584,12,781,10],[584,14,781,12],[584,15,781,13],[585,6,782,4,"overflow"],[585,14,782,12],[585,16,782,14],[586,4,783,2],[586,5,783,3],[587,4,784,2,"overlay"],[587,11,784,9],[587,13,784,11],[588,6,785,4],[588,9,785,7,"StyleSheet"],[588,21,785,17],[588,22,785,17,"StyleSheet"],[588,32,785,17],[588,33,785,18,"absoluteFillObject"],[588,51,785,36],[589,6,786,4,"zIndex"],[589,12,786,10],[589,14,786,12],[590,4,787,2],[591,2,788,0],[591,3,788,1],[591,4,788,2],[592,0,788,3],[592,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCsO;ECgB;GDiB;EEE;GFW;gCGkB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaG;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"},"hasCjsExports":false},"type":"js/module"}]}