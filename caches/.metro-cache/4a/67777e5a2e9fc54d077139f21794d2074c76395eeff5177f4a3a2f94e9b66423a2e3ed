{"dependencies":[{"name":"@react-navigation/core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":196,"index":211}}],"key":"Wm75LgE4xYscVWo0KoLFlflJQCo=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":212},"end":{"line":4,"column":31,"index":243}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./LinkingContext.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":244},"end":{"line":5,"column":53,"index":297}}],"key":"r/0Yvi+HouDAqn4vN4m4I6AMfEI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useLinkBuilder = useLinkBuilder;\n  var _reactNavigationCore = require(_dependencyMap[0], \"@react-navigation/core\");\n  var _react = require(_dependencyMap[1], \"react\");\n  var React = _interopNamespace(_react);\n  var _LinkingContextJs = require(_dependencyMap[2], \"./LinkingContext.js\");\n  /**\n   * Helpers to build href or action based on the linking options.\n   *\n   * @returns `buildHref` to build an `href` for screen and `buildAction` to build an action from an `href`.\n   */\n  function useLinkBuilder() {\n    var navigation = React.useContext(_reactNavigationCore.NavigationHelpersContext);\n    var route = React.useContext(_reactNavigationCore.NavigationRouteContext);\n    var _React$useContext = React.useContext(_LinkingContextJs.LinkingContext),\n      options = _React$useContext.options;\n    var focusedRouteState = (0, _reactNavigationCore.useStateForPath)();\n    var getPathFromStateHelper = options?.getPathFromState ?? _reactNavigationCore.getPathFromState;\n    var getStateFromPathHelper = options?.getStateFromPath ?? _reactNavigationCore.getStateFromPath;\n    var getActionFromStateHelper = options?.getActionFromState ?? _reactNavigationCore.getActionFromState;\n    var buildHref = React.useCallback((name, params) => {\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      // Check that we're inside:\n      // - navigator's context\n      // - route context of the navigator (could be a screen, tab, etc.)\n      // - route matches the state for path (from the screen's context)\n      // This ensures that we're inside a screen\n      var isScreen = navigation && route?.key && focusedRouteState ? route.key === (0, _reactNavigationCore.findFocusedRoute)(focusedRouteState)?.key && navigation.getState().routes.some(r => r.key === route.key) : false;\n      var stateForRoute = {\n        routes: [{\n          name,\n          params\n        }]\n      };\n      var constructState = state => {\n        if (state) {\n          var _route = state.routes[0];\n\n          // If we're inside a screen and at the innermost route\n          // We need to replace the state with the provided one\n          // This assumes that we're navigating to a sibling route\n          if (isScreen && !_route.state) {\n            return stateForRoute;\n          }\n\n          // Otherwise, dive into the nested state of the route\n          return {\n            routes: [{\n              ..._route,\n              state: constructState(_route.state)\n            }]\n          };\n        }\n\n        // Once there is no more nested state, we're at the innermost route\n        // We can add a state based on provided parameters\n        // This assumes that we're navigating to a child of this route\n        // In this case, the helper is used in a navigator for its routes\n        return stateForRoute;\n      };\n      var state = constructState(focusedRouteState);\n      var path = getPathFromStateHelper(state, options?.config);\n      return path;\n    }, [options?.enabled, options?.config, route?.key, navigation, focusedRouteState, getPathFromStateHelper]);\n    var buildAction = React.useCallback(href => {\n      if (!href.startsWith('/')) {\n        throw new Error(`The href must start with '/' (${href}).`);\n      }\n      var state = getStateFromPathHelper(href, options?.config);\n      if (state) {\n        var action = getActionFromStateHelper(state, options?.config);\n        return action ?? _reactNavigationCore.CommonActions.reset(state);\n      } else {\n        throw new Error('Failed to parse the href to a navigation state.');\n      }\n    }, [options?.config, getStateFromPathHelper, getActionFromStateHelper]);\n    return {\n      buildHref,\n      buildAction\n    };\n  }\n});","lineCount":99,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,11,0,"exports"],[16,9,11,0],[16,10,11,0,"useLinkBuilder"],[16,24,11,0],[16,27,11,0,"useLinkBuilder"],[16,41,11,0],[17,2,3,0],[17,6,3,0,"_reactNavigationCore"],[17,26,3,0],[17,29,3,0,"require"],[17,36,3,0],[17,37,3,0,"_dependencyMap"],[17,51,3,0],[18,2,4,0],[18,6,4,0,"_react"],[18,12,4,0],[18,15,4,0,"require"],[18,22,4,0],[18,23,4,0,"_dependencyMap"],[18,37,4,0],[19,2,4,0],[19,6,4,0,"React"],[19,11,4,0],[19,14,4,0,"_interopNamespace"],[19,31,4,0],[19,32,4,0,"_react"],[19,38,4,0],[20,2,5,0],[20,6,5,0,"_LinkingContextJs"],[20,23,5,0],[20,26,5,0,"require"],[20,33,5,0],[20,34,5,0,"_dependencyMap"],[20,48,5,0],[21,2,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[25,0,10,0],[26,2,11,7],[26,11,11,16,"useLinkBuilder"],[26,25,11,30,"useLinkBuilder"],[26,26,11,30],[26,28,11,33],[27,4,12,2],[27,8,12,8,"navigation"],[27,18,12,18],[27,21,12,21,"React"],[27,26,12,26],[27,27,12,27,"useContext"],[27,37,12,37],[27,38,12,38,"NavigationHelpersContext"],[27,58,12,62],[27,59,12,62,"NavigationHelpersContext"],[27,83,12,62],[27,84,12,63],[28,4,13,2],[28,8,13,8,"route"],[28,13,13,13],[28,16,13,16,"React"],[28,21,13,21],[28,22,13,22,"useContext"],[28,32,13,32],[28,33,13,33,"NavigationRouteContext"],[28,53,13,55],[28,54,13,55,"NavigationRouteContext"],[28,76,13,55],[28,77,13,56],[29,4,14,2],[29,8,14,2,"_React$useContext"],[29,25,14,2],[29,28,16,6,"React"],[29,33,16,11],[29,34,16,12,"useContext"],[29,44,16,22],[29,45,16,23,"LinkingContext"],[29,62,16,37],[29,63,16,37,"LinkingContext"],[29,77,16,37],[29,78,16,38],[30,6,15,4,"options"],[30,13,15,11],[30,16,15,11,"_React$useContext"],[30,33,15,11],[30,34,15,4,"options"],[30,41,15,11],[31,4,17,2],[31,8,17,8,"focusedRouteState"],[31,25,17,25],[31,28,17,28],[31,32,17,28,"useStateForPath"],[31,52,17,43],[31,53,17,43,"useStateForPath"],[31,68,17,43],[31,70,17,44],[31,71,17,45],[32,4,18,2],[32,8,18,8,"getPathFromStateHelper"],[32,30,18,30],[32,33,18,33,"options"],[32,40,18,40],[32,42,18,42,"getPathFromState"],[32,58,18,58],[32,62,18,62,"getPathFromState"],[32,82,18,78],[32,83,18,78,"getPathFromState"],[32,99,18,78],[33,4,19,2],[33,8,19,8,"getStateFromPathHelper"],[33,30,19,30],[33,33,19,33,"options"],[33,40,19,40],[33,42,19,42,"getStateFromPath"],[33,58,19,58],[33,62,19,62,"getStateFromPath"],[33,82,19,78],[33,83,19,78,"getStateFromPath"],[33,99,19,78],[34,4,20,2],[34,8,20,8,"getActionFromStateHelper"],[34,32,20,32],[34,35,20,35,"options"],[34,42,20,42],[34,44,20,44,"getActionFromState"],[34,62,20,62],[34,66,20,66,"getActionFromState"],[34,86,20,84],[34,87,20,84,"getActionFromState"],[34,105,20,84],[35,4,21,2],[35,8,21,8,"buildHref"],[35,17,21,17],[35,20,21,20,"React"],[35,25,21,25],[35,26,21,26,"useCallback"],[35,37,21,37],[35,38,21,38],[35,39,21,39,"name"],[35,43,21,43],[35,45,21,45,"params"],[35,51,21,51],[35,56,21,56],[36,6,22,4],[36,10,22,8,"options"],[36,17,22,15],[36,19,22,17,"enabled"],[36,26,22,24],[36,31,22,29],[36,36,22,34],[36,38,22,36],[37,8,23,6],[37,15,23,13,"undefined"],[37,24,23,22],[38,6,24,4],[40,6,26,4],[41,6,27,4],[42,6,28,4],[43,6,29,4],[44,6,30,4],[45,6,31,4],[45,10,31,10,"isScreen"],[45,18,31,18],[45,21,31,21,"navigation"],[45,31,31,31],[45,35,31,35,"route"],[45,40,31,40],[45,42,31,42,"key"],[45,45,31,45],[45,49,31,49,"focusedRouteState"],[45,66,31,66],[45,69,31,69,"route"],[45,74,31,74],[45,75,31,75,"key"],[45,78,31,78],[45,83,31,83],[45,87,31,83,"findFocusedRoute"],[45,107,31,99],[45,108,31,99,"findFocusedRoute"],[45,124,31,99],[45,126,31,100,"focusedRouteState"],[45,143,31,117],[45,144,31,118],[45,146,31,120,"key"],[45,149,31,123],[45,153,31,127,"navigation"],[45,163,31,137],[45,164,31,138,"getState"],[45,172,31,146],[45,173,31,147],[45,174,31,148],[45,175,31,149,"routes"],[45,181,31,155],[45,182,31,156,"some"],[45,186,31,160],[45,187,31,161,"r"],[45,188,31,162],[45,192,31,166,"r"],[45,193,31,167],[45,194,31,168,"key"],[45,197,31,171],[45,202,31,176,"route"],[45,207,31,181],[45,208,31,182,"key"],[45,211,31,185],[45,212,31,186],[45,215,31,189],[45,220,31,194],[46,6,32,4],[46,10,32,10,"stateForRoute"],[46,23,32,23],[46,26,32,26],[47,8,33,6,"routes"],[47,14,33,12],[47,16,33,14],[47,17,33,15],[48,10,34,8,"name"],[48,14,34,12],[49,10,35,8,"params"],[50,8,36,6],[50,9,36,7],[51,6,37,4],[51,7,37,5],[52,6,38,4],[52,10,38,10,"constructState"],[52,24,38,24],[52,27,38,27,"state"],[52,32,38,32],[52,36,38,36],[53,8,39,6],[53,12,39,10,"state"],[53,17,39,15],[53,19,39,17],[54,10,40,8],[54,14,40,14,"route"],[54,20,40,19],[54,23,40,22,"state"],[54,28,40,27],[54,29,40,28,"routes"],[54,35,40,34],[54,36,40,35],[54,37,40,36],[54,38,40,37],[56,10,42,8],[57,10,43,8],[58,10,44,8],[59,10,45,8],[59,14,45,12,"isScreen"],[59,22,45,20],[59,26,45,24],[59,27,45,25,"route"],[59,33,45,30],[59,34,45,31,"state"],[59,39,45,36],[59,41,45,38],[60,12,46,10],[60,19,46,17,"stateForRoute"],[60,32,46,30],[61,10,47,8],[63,10,49,8],[64,10,50,8],[64,17,50,15],[65,12,51,10,"routes"],[65,18,51,16],[65,20,51,18],[65,21,51,19],[66,14,52,12],[66,17,52,15,"route"],[66,23,52,20],[67,14,53,12,"state"],[67,19,53,17],[67,21,53,19,"constructState"],[67,35,53,33],[67,36,53,34,"route"],[67,42,53,39],[67,43,53,40,"state"],[67,48,53,45],[68,12,54,10],[68,13,54,11],[69,10,55,8],[69,11,55,9],[70,8,56,6],[72,8,58,6],[73,8,59,6],[74,8,60,6],[75,8,61,6],[76,8,62,6],[76,15,62,13,"stateForRoute"],[76,28,62,26],[77,6,63,4],[77,7,63,5],[78,6,64,4],[78,10,64,10,"state"],[78,15,64,15],[78,18,64,18,"constructState"],[78,32,64,32],[78,33,64,33,"focusedRouteState"],[78,50,64,50],[78,51,64,51],[79,6,65,4],[79,10,65,10,"path"],[79,14,65,14],[79,17,65,17,"getPathFromStateHelper"],[79,39,65,39],[79,40,65,40,"state"],[79,45,65,45],[79,47,65,47,"options"],[79,54,65,54],[79,56,65,56,"config"],[79,62,65,62],[79,63,65,63],[80,6,66,4],[80,13,66,11,"path"],[80,17,66,15],[81,4,67,2],[81,5,67,3],[81,7,67,5],[81,8,67,6,"options"],[81,15,67,13],[81,17,67,15,"enabled"],[81,24,67,22],[81,26,67,24,"options"],[81,33,67,31],[81,35,67,33,"config"],[81,41,67,39],[81,43,67,41,"route"],[81,48,67,46],[81,50,67,48,"key"],[81,53,67,51],[81,55,67,53,"navigation"],[81,65,67,63],[81,67,67,65,"focusedRouteState"],[81,84,67,82],[81,86,67,84,"getPathFromStateHelper"],[81,108,67,106],[81,109,67,107],[81,110,67,108],[82,4,68,2],[82,8,68,8,"buildAction"],[82,19,68,19],[82,22,68,22,"React"],[82,27,68,27],[82,28,68,28,"useCallback"],[82,39,68,39],[82,40,68,40,"href"],[82,44,68,44],[82,48,68,48],[83,6,69,4],[83,10,69,8],[83,11,69,9,"href"],[83,15,69,13],[83,16,69,14,"startsWith"],[83,26,69,24],[83,27,69,25],[83,30,69,28],[83,31,69,29],[83,33,69,31],[84,8,70,6],[84,14,70,12],[84,18,70,16,"Error"],[84,23,70,21],[84,24,70,22],[84,57,70,55,"href"],[84,61,70,59],[84,65,70,63],[84,66,70,64],[85,6,71,4],[86,6,72,4],[86,10,72,10,"state"],[86,15,72,15],[86,18,72,18,"getStateFromPathHelper"],[86,40,72,40],[86,41,72,41,"href"],[86,45,72,45],[86,47,72,47,"options"],[86,54,72,54],[86,56,72,56,"config"],[86,62,72,62],[86,63,72,63],[87,6,73,4],[87,10,73,8,"state"],[87,15,73,13],[87,17,73,15],[88,8,74,6],[88,12,74,12,"action"],[88,18,74,18],[88,21,74,21,"getActionFromStateHelper"],[88,45,74,45],[88,46,74,46,"state"],[88,51,74,51],[88,53,74,53,"options"],[88,60,74,60],[88,62,74,62,"config"],[88,68,74,68],[88,69,74,69],[89,8,75,6],[89,15,75,13,"action"],[89,21,75,19],[89,25,75,23,"CommonActions"],[89,45,75,36],[89,46,75,36,"CommonActions"],[89,59,75,36],[89,60,75,37,"reset"],[89,65,75,42],[89,66,75,43,"state"],[89,71,75,48],[89,72,75,49],[90,6,76,4],[90,7,76,5],[90,13,76,11],[91,8,77,6],[91,14,77,12],[91,18,77,16,"Error"],[91,23,77,21],[91,24,77,22],[91,73,77,71],[91,74,77,72],[92,6,78,4],[93,4,79,2],[93,5,79,3],[93,7,79,5],[93,8,79,6,"options"],[93,15,79,13],[93,17,79,15,"config"],[93,23,79,21],[93,25,79,23,"getStateFromPathHelper"],[93,47,79,45],[93,49,79,47,"getActionFromStateHelper"],[93,73,79,71],[93,74,79,72],[93,75,79,73],[94,4,80,2],[94,11,80,9],[95,6,81,4,"buildHref"],[95,15,81,13],[96,6,82,4,"buildAction"],[97,4,83,2],[97,5,83,3],[98,2,84,0],[99,0,84,1],[99,3]],"functionMap":{"names":["<global>","useLinkBuilder","buildHref","navigation.getState.routes.some$argument_0","constructState","buildAction"],"mappings":"AAA;OCU;sCCU;iKCU,wBD;2BEO;KFyB;GDI;wCIC;GJW;CDK"},"hasCjsExports":false},"type":"js/module"}]}