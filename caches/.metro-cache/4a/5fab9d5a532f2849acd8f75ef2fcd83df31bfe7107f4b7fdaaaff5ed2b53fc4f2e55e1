{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":31,"index":46}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"./useNavigation.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":47},"end":{"line":4,"column":51,"index":98}}],"key":"QYUBGacr5qSJ4R+u3laZK0wRG3s=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      n[k] = e[k];\n    });\n    n.default = e;\n    return n;\n  }\n  exports.useFocusEffect = useFocusEffect;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _useNavigationJs = require(_dependencyMap[1], \"./useNavigation.js\");\n  /**\n   * Hook to run an effect in a focused screen, similar to `React.useEffect`.\n   * This can be used to perform side-effects such as fetching data or subscribing to events.\n   * The passed callback should be wrapped in `React.useCallback` to avoid running the effect too often.\n   *\n   * @param callback Memoized callback containing the effect, should optionally return a cleanup function.\n   */\n  function useFocusEffect(effect) {\n    var navigation = (0, _useNavigationJs.useNavigation)();\n\n    // eslint-disable-next-line prefer-rest-params\n    if (arguments[1] !== undefined) {\n      var message = \"You passed a second argument to 'useFocusEffect', but it only accepts one argument. \" + \"If you want to pass a dependency array, you can use 'React.useCallback':\\n\\n\" + 'useFocusEffect(\\n' + '  React.useCallback(() => {\\n' + '    // Your code here\\n' + '  }, [depA, depB])\\n' + ');\\n\\n' + 'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n      console.error(message);\n    }\n    React.useEffect(() => {\n      var isFocused = false;\n      var cleanup;\n      var callback = () => {\n        var destroy = effect();\n        if (destroy === undefined || typeof destroy === 'function') {\n          return destroy;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          var _message = 'An effect function must not return anything besides a function, which is used for clean-up.';\n          if (destroy === null) {\n            _message += \" You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).\";\n          } else if (typeof destroy.then === 'function') {\n            _message += \"\\n\\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. \" + 'Instead, write the async function inside your effect ' + 'and call it immediately:\\n\\n' + 'useFocusEffect(\\n' + '  React.useCallback(() => {\\n' + '    async function fetchData() {\\n' + '      // You can await here\\n' + '      const response = await MyAPI.getData(someId);\\n' + '      // ...\\n' + '    }\\n\\n' + '    fetchData();\\n' + '  }, [someId])\\n' + ');\\n\\n' + 'See usage guide: https://reactnavigation.org/docs/use-focus-effect';\n          } else {\n            _message += ` You returned '${JSON.stringify(destroy)}'.`;\n          }\n          console.error(_message);\n        }\n      };\n\n      // We need to run the effect on initial render/dep changes if the screen is focused\n      if (navigation.isFocused()) {\n        cleanup = callback();\n        isFocused = true;\n      }\n      var unsubscribeFocus = navigation.addListener('focus', () => {\n        // If callback was already called for focus, avoid calling it again\n        // The focus event may also fire on initial render, so we guard against running the effect twice\n        if (isFocused) {\n          return;\n        }\n        if (cleanup !== undefined) {\n          cleanup();\n        }\n        cleanup = callback();\n        isFocused = true;\n      });\n      var unsubscribeBlur = navigation.addListener('blur', () => {\n        if (cleanup !== undefined) {\n          cleanup();\n        }\n        cleanup = undefined;\n        isFocused = false;\n      });\n      return () => {\n        if (cleanup !== undefined) {\n          cleanup();\n        }\n        unsubscribeFocus();\n        unsubscribeBlur();\n      };\n    }, [effect, navigation]);\n  }\n});","lineCount":89,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13],[7,11,1,13,"_interopNamespace"],[7,29,1,13,"e"],[7,30,1,13],[8,4,1,13],[8,8,1,13,"e"],[8,9,1,13],[8,13,1,13,"e"],[8,14,1,13],[8,15,1,13,"__esModule"],[8,25,1,13],[8,34,1,13,"e"],[8,35,1,13],[9,4,1,13],[9,8,1,13,"n"],[9,9,1,13],[10,4,1,13],[10,8,1,13,"e"],[10,9,1,13],[10,11,1,13,"Object"],[10,17,1,13],[10,18,1,13,"keys"],[10,22,1,13],[10,23,1,13,"e"],[10,24,1,13],[10,26,1,13,"forEach"],[10,33,1,13],[10,44,1,13,"k"],[10,45,1,13],[11,6,1,13,"n"],[11,7,1,13],[11,8,1,13,"k"],[11,9,1,13],[11,13,1,13,"e"],[11,14,1,13],[11,15,1,13,"k"],[11,16,1,13],[12,4,1,13],[13,4,1,13,"n"],[13,5,1,13],[13,6,1,13,"default"],[13,13,1,13],[13,16,1,13,"e"],[13,17,1,13],[14,4,1,13],[14,11,1,13,"n"],[14,12,1,13],[15,2,1,13],[16,2,12,0,"exports"],[16,9,12,0],[16,10,12,0,"useFocusEffect"],[16,24,12,0],[16,27,12,0,"useFocusEffect"],[16,41,12,0],[17,2,3,0],[17,6,3,0,"_react"],[17,12,3,0],[17,15,3,0,"require"],[17,22,3,0],[17,23,3,0,"_dependencyMap"],[17,37,3,0],[18,2,3,0],[18,6,3,0,"React"],[18,11,3,0],[18,14,3,0,"_interopNamespace"],[18,31,3,0],[18,32,3,0,"_react"],[18,38,3,0],[19,2,4,0],[19,6,4,0,"_useNavigationJs"],[19,22,4,0],[19,25,4,0,"require"],[19,32,4,0],[19,33,4,0,"_dependencyMap"],[19,47,4,0],[20,2,5,0],[21,0,6,0],[22,0,7,0],[23,0,8,0],[24,0,9,0],[25,0,10,0],[26,0,11,0],[27,2,12,7],[27,11,12,16,"useFocusEffect"],[27,25,12,30,"useFocusEffect"],[27,26,12,31,"effect"],[27,32,12,37],[27,34,12,39],[28,4,13,2],[28,8,13,8,"navigation"],[28,18,13,18],[28,21,13,21],[28,25,13,21,"useNavigation"],[28,41,13,34],[28,42,13,34,"useNavigation"],[28,55,13,34],[28,57,13,35],[28,58,13,36],[30,4,15,2],[31,4,16,2],[31,8,16,6,"arguments"],[31,17,16,15],[31,18,16,16],[31,19,16,17],[31,20,16,18],[31,25,16,23,"undefined"],[31,34,16,32],[31,36,16,34],[32,6,17,4],[32,10,17,10,"message"],[32,17,17,17],[32,20,17,20],[32,106,17,106],[32,109,17,109],[32,187,17,187],[32,190,17,190],[32,209,17,209],[32,212,17,212],[32,243,17,243],[32,246,17,246],[32,271,17,271],[32,274,17,274],[32,296,17,296],[32,299,17,299],[32,307,17,307],[32,310,17,310],[32,378,17,378],[33,6,18,4,"console"],[33,13,18,11],[33,14,18,12,"error"],[33,19,18,17],[33,20,18,18,"message"],[33,27,18,25],[33,28,18,26],[34,4,19,2],[35,4,20,2,"React"],[35,9,20,7],[35,10,20,8,"useEffect"],[35,19,20,17],[35,20,20,18],[35,26,20,24],[36,6,21,4],[36,10,21,8,"isFocused"],[36,19,21,17],[36,22,21,20],[36,27,21,25],[37,6,22,4],[37,10,22,8,"cleanup"],[37,17,22,15],[38,6,23,4],[38,10,23,10,"callback"],[38,18,23,18],[38,21,23,21,"callback"],[38,22,23,21],[38,27,23,27],[39,8,24,6],[39,12,24,12,"destroy"],[39,19,24,19],[39,22,24,22,"effect"],[39,28,24,28],[39,29,24,29],[39,30,24,30],[40,8,25,6],[40,12,25,10,"destroy"],[40,19,25,17],[40,24,25,22,"undefined"],[40,33,25,31],[40,37,25,35],[40,44,25,42,"destroy"],[40,51,25,49],[40,56,25,54],[40,66,25,64],[40,68,25,66],[41,10,26,8],[41,17,26,15,"destroy"],[41,24,26,22],[42,8,27,6],[43,8,28,6],[43,12,28,10,"process"],[43,19,28,17],[43,20,28,18,"env"],[43,23,28,21],[43,24,28,22,"NODE_ENV"],[43,32,28,30],[43,37,28,35],[43,49,28,47],[43,51,28,49],[44,10,29,8],[44,14,29,12,"message"],[44,22,29,19],[44,25,29,22],[44,118,29,115],[45,10,30,8],[45,14,30,12,"destroy"],[45,21,30,19],[45,26,30,24],[45,30,30,28],[45,32,30,30],[46,12,31,10,"message"],[46,20,31,17],[46,24,31,21],[46,122,31,119],[47,10,32,8],[47,11,32,9],[47,17,32,15],[47,21,32,19],[47,28,32,26,"destroy"],[47,35,32,33],[47,36,32,34,"then"],[47,40,32,38],[47,45,32,43],[47,55,32,53],[47,57,32,55],[48,12,33,10,"message"],[48,20,33,17],[48,24,33,21],[48,111,33,108],[48,114,33,111],[48,169,33,166],[48,172,33,169],[48,202,33,199],[48,205,33,202],[48,224,33,221],[48,227,33,224],[48,258,33,255],[48,261,33,258],[48,297,33,294],[48,300,33,297],[48,331,33,328],[48,334,33,331],[48,389,33,386],[48,392,33,389],[48,408,33,405],[48,411,33,408],[48,422,33,419],[48,425,33,422],[48,445,33,442],[48,448,33,445],[48,466,33,463],[48,469,33,466],[48,477,33,474],[48,480,33,477],[48,548,33,545],[49,10,34,8],[49,11,34,9],[49,17,34,15],[50,12,35,10,"message"],[50,20,35,17],[50,24,35,21],[50,42,35,39,"JSON"],[50,46,35,43],[50,47,35,44,"stringify"],[50,56,35,53],[50,57,35,54,"destroy"],[50,64,35,61],[50,65,35,62],[50,69,35,66],[51,10,36,8],[52,10,37,8,"console"],[52,17,37,15],[52,18,37,16,"error"],[52,23,37,21],[52,24,37,22,"message"],[52,32,37,29],[52,33,37,30],[53,8,38,6],[54,6,39,4],[54,7,39,5],[56,6,41,4],[57,6,42,4],[57,10,42,8,"navigation"],[57,20,42,18],[57,21,42,19,"isFocused"],[57,30,42,28],[57,31,42,29],[57,32,42,30],[57,34,42,32],[58,8,43,6,"cleanup"],[58,15,43,13],[58,18,43,16,"callback"],[58,26,43,24],[58,27,43,25],[58,28,43,26],[59,8,44,6,"isFocused"],[59,17,44,15],[59,20,44,18],[59,24,44,22],[60,6,45,4],[61,6,46,4],[61,10,46,10,"unsubscribeFocus"],[61,26,46,26],[61,29,46,29,"navigation"],[61,39,46,39],[61,40,46,40,"addListener"],[61,51,46,51],[61,52,46,52],[61,59,46,59],[61,61,46,61],[61,67,46,67],[62,8,47,6],[63,8,48,6],[64,8,49,6],[64,12,49,10,"isFocused"],[64,21,49,19],[64,23,49,21],[65,10,50,8],[66,8,51,6],[67,8,52,6],[67,12,52,10,"cleanup"],[67,19,52,17],[67,24,52,22,"undefined"],[67,33,52,31],[67,35,52,33],[68,10,53,8,"cleanup"],[68,17,53,15],[68,18,53,16],[68,19,53,17],[69,8,54,6],[70,8,55,6,"cleanup"],[70,15,55,13],[70,18,55,16,"callback"],[70,26,55,24],[70,27,55,25],[70,28,55,26],[71,8,56,6,"isFocused"],[71,17,56,15],[71,20,56,18],[71,24,56,22],[72,6,57,4],[72,7,57,5],[72,8,57,6],[73,6,58,4],[73,10,58,10,"unsubscribeBlur"],[73,25,58,25],[73,28,58,28,"navigation"],[73,38,58,38],[73,39,58,39,"addListener"],[73,50,58,50],[73,51,58,51],[73,57,58,57],[73,59,58,59],[73,65,58,65],[74,8,59,6],[74,12,59,10,"cleanup"],[74,19,59,17],[74,24,59,22,"undefined"],[74,33,59,31],[74,35,59,33],[75,10,60,8,"cleanup"],[75,17,60,15],[75,18,60,16],[75,19,60,17],[76,8,61,6],[77,8,62,6,"cleanup"],[77,15,62,13],[77,18,62,16,"undefined"],[77,27,62,25],[78,8,63,6,"isFocused"],[78,17,63,15],[78,20,63,18],[78,25,63,23],[79,6,64,4],[79,7,64,5],[79,8,64,6],[80,6,65,4],[80,13,65,11],[80,19,65,17],[81,8,66,6],[81,12,66,10,"cleanup"],[81,19,66,17],[81,24,66,22,"undefined"],[81,33,66,31],[81,35,66,33],[82,10,67,8,"cleanup"],[82,17,67,15],[82,18,67,16],[82,19,67,17],[83,8,68,6],[84,8,69,6,"unsubscribeFocus"],[84,24,69,22],[84,25,69,23],[84,26,69,24],[85,8,70,6,"unsubscribeBlur"],[85,23,70,21],[85,24,70,22],[85,25,70,23],[86,6,71,4],[86,7,71,5],[87,4,72,2],[87,5,72,3],[87,7,72,5],[87,8,72,6,"effect"],[87,14,72,12],[87,16,72,14,"navigation"],[87,26,72,24],[87,27,72,25],[87,28,72,26],[88,2,73,0],[89,0,73,1],[89,3]],"functionMap":{"names":["<global>","useFocusEffect","React.useEffect$argument_0","callback","navigation.addListener$argument_1","<anonymous>"],"mappings":"AAA;OCW;kBCQ;qBCG;KDgB;6DEO;KFW;2DEC;KFM;WGC;KHM;GDC;CDC"},"hasCjsExports":false},"type":"js/module"}]}